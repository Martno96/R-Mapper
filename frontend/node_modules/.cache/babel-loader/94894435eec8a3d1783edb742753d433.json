{"ast":null,"code":"import Backbone from 'backbone';\nimport $ from 'jquery';\nimport * as util from '../util/index.mjs';\nimport { config } from '../config/index.mjs';\nimport V from '../V/index.mjs';\nexport const views = {};\nexport const View = Backbone.View.extend({\n  options: {},\n  theme: null,\n  themeClassNamePrefix: util.addClassNamePrefix('theme-'),\n  requireSetThemeOverride: false,\n  defaultTheme: config.defaultTheme,\n  children: null,\n  childNodes: null,\n  DETACHABLE: true,\n  UPDATE_PRIORITY: 2,\n  FLAG_INSERT: 1 << 30,\n  FLAG_REMOVE: 1 << 29,\n  constructor: function (options) {\n    this.requireSetThemeOverride = options && !!options.theme;\n    this.options = util.assign({}, this.options, options);\n    Backbone.View.call(this, options);\n  },\n  initialize: function () {\n    views[this.cid] = this;\n    this.setTheme(this.options.theme || this.defaultTheme);\n    this.init();\n  },\n  unmount: function () {\n    if (this.svgElement) {\n      this.vel.remove();\n    } else {\n      this.$el.remove();\n    }\n  },\n  renderChildren: function (children) {\n    children || (children = util.result(this, 'children'));\n\n    if (children) {\n      var isSVG = this.svgElement;\n      var namespace = V.namespace[isSVG ? 'svg' : 'xhtml'];\n      var doc = util.parseDOMJSON(children, namespace);\n      (isSVG ? this.vel : this.$el).empty().append(doc.fragment);\n      this.childNodes = doc.selectors;\n    }\n\n    return this;\n  },\n  findAttribute: function (attributeName, node) {\n    var currentNode = node;\n\n    while (currentNode && currentNode.nodeType === 1) {\n      var attributeValue = currentNode.getAttribute(attributeName); // attribute found\n\n      if (attributeValue) return attributeValue; // do not climb up the DOM\n\n      if (currentNode === this.el) return null; // try parent node\n\n      currentNode = currentNode.parentNode;\n    }\n\n    return null;\n  },\n  // Override the Backbone `_ensureElement()` method in order to create an\n  // svg element (e.g., `<g>`) node that wraps all the nodes of the Cell view.\n  // Expose class name setter as a separate method.\n  _ensureElement: function () {\n    if (!this.el) {\n      var tagName = util.result(this, 'tagName');\n      var attrs = util.assign({}, util.result(this, 'attributes'));\n      var style = util.assign({}, util.result(this, 'style'));\n      if (this.id) attrs.id = util.result(this, 'id');\n      this.setElement(this._createElement(tagName));\n\n      this._setAttributes(attrs);\n\n      this._setStyle(style);\n    } else {\n      this.setElement(util.result(this, 'el'));\n    }\n\n    this._ensureElClassName();\n  },\n  _setAttributes: function (attrs) {\n    if (this.svgElement) {\n      this.vel.attr(attrs);\n    } else {\n      this.$el.attr(attrs);\n    }\n  },\n  _setStyle: function (style) {\n    this.$el.css(style);\n  },\n  _createElement: function (tagName) {\n    if (this.svgElement) {\n      return document.createElementNS(V.namespace.svg, tagName);\n    } else {\n      return document.createElement(tagName);\n    }\n  },\n  // Utilize an alternative DOM manipulation API by\n  // adding an element reference wrapped in Vectorizer.\n  _setElement: function (el) {\n    this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n    this.el = this.$el[0];\n    if (this.svgElement) this.vel = V(this.el);\n  },\n  _ensureElClassName: function () {\n    var className = util.result(this, 'className');\n    if (!className) return;\n    var prefixedClassName = util.addClassNamePrefix(className); // Note: className removal here kept for backwards compatibility only\n\n    if (this.svgElement) {\n      this.vel.removeClass(className).addClass(prefixedClassName);\n    } else {\n      this.$el.removeClass(className).addClass(prefixedClassName);\n    }\n  },\n  init: function () {// Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  onRender: function () {// Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  confirmUpdate: function () {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n    return 0;\n  },\n  setTheme: function (theme, opt) {\n    opt = opt || {}; // Theme is already set, override is required, and override has not been set.\n    // Don't set the theme.\n\n    if (this.theme && this.requireSetThemeOverride && !opt.override) {\n      return this;\n    }\n\n    this.removeThemeClassName();\n    this.addThemeClassName(theme);\n    this.onSetTheme(this.theme\n    /* oldTheme */\n    , theme\n    /* newTheme */\n    );\n    this.theme = theme;\n    return this;\n  },\n  addThemeClassName: function (theme) {\n    theme = theme || this.theme;\n    var className = this.themeClassNamePrefix + theme;\n\n    if (this.svgElement) {\n      this.vel.addClass(className);\n    } else {\n      this.$el.addClass(className);\n    }\n\n    return this;\n  },\n  removeThemeClassName: function (theme) {\n    theme = theme || this.theme;\n    var className = this.themeClassNamePrefix + theme;\n\n    if (this.svgElement) {\n      this.vel.removeClass(className);\n    } else {\n      this.$el.removeClass(className);\n    }\n\n    return this;\n  },\n  onSetTheme: function (oldTheme, newTheme) {// Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  remove: function () {\n    this.onRemove();\n    this.undelegateDocumentEvents();\n    views[this.cid] = null;\n    Backbone.View.prototype.remove.apply(this, arguments);\n    return this;\n  },\n  onRemove: function () {// Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  getEventNamespace: function () {\n    // Returns a per-session unique namespace\n    return '.joint-event-ns-' + this.cid;\n  },\n  delegateElementEvents: function (element, events, data) {\n    if (!events) return this;\n    data || (data = {});\n    var eventNS = this.getEventNamespace();\n\n    for (var eventName in events) {\n      var method = events[eventName];\n      if (typeof method !== 'function') method = this[method];\n      if (!method) continue;\n      $(element).on(eventName + eventNS, data, method.bind(this));\n    }\n\n    return this;\n  },\n  undelegateElementEvents: function (element) {\n    $(element).off(this.getEventNamespace());\n    return this;\n  },\n  delegateDocumentEvents: function (events, data) {\n    events || (events = util.result(this, 'documentEvents'));\n    return this.delegateElementEvents(document, events, data);\n  },\n  undelegateDocumentEvents: function () {\n    return this.undelegateElementEvents(document);\n  },\n  eventData: function (evt, data) {\n    if (!evt) throw new Error('eventData(): event object required.');\n    var currentData = evt.data;\n    var key = '__' + this.cid + '__';\n\n    if (data === undefined) {\n      if (!currentData) return {};\n      return currentData[key] || {};\n    }\n\n    currentData || (currentData = evt.data = {});\n    currentData[key] || (currentData[key] = {});\n    util.assign(currentData[key], data);\n    return this;\n  },\n  stopPropagation: function (evt) {\n    this.eventData(evt, {\n      propagationStopped: true\n    });\n    return this;\n  },\n  isPropagationStopped: function (evt) {\n    return !!this.eventData(evt).propagationStopped;\n  }\n}, {\n  extend: function () {\n    var args = Array.from(arguments); // Deep clone the prototype and static properties objects.\n    // This prevents unexpected behavior where some properties are overwritten outside of this function.\n\n    var protoProps = args[0] && util.assign({}, args[0]) || {};\n    var staticProps = args[1] && util.assign({}, args[1]) || {}; // Need the real render method so that we can wrap it and call it later.\n\n    var renderFn = protoProps.render || this.prototype && this.prototype.render || null;\n    /*\n        Wrap the real render method so that:\n            .. `onRender` is always called.\n            .. `this` is always returned.\n    */\n\n    protoProps.render = function () {\n      if (typeof renderFn === 'function') {\n        // Call the original render method.\n        renderFn.apply(this, arguments);\n      }\n\n      if (this.render.__render__ === renderFn) {\n        // Should always call onRender() method.\n        // Should call it only once when renderFn is actual prototype method i.e. not the wrapper\n        this.onRender();\n      } // Should always return itself.\n\n\n      return this;\n    };\n\n    protoProps.render.__render__ = renderFn;\n    return Backbone.View.extend.call(this, protoProps, staticProps);\n  }\n});","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/r-mapper v.2/r-mapper/node_modules/jointjs/src/mvc/index.mjs"],"names":["Backbone","$","util","config","V","views","View","extend","options","theme","themeClassNamePrefix","addClassNamePrefix","requireSetThemeOverride","defaultTheme","children","childNodes","DETACHABLE","UPDATE_PRIORITY","FLAG_INSERT","FLAG_REMOVE","constructor","assign","call","initialize","cid","setTheme","init","unmount","svgElement","vel","remove","$el","renderChildren","result","isSVG","namespace","doc","parseDOMJSON","empty","append","fragment","selectors","findAttribute","attributeName","node","currentNode","nodeType","attributeValue","getAttribute","el","parentNode","_ensureElement","tagName","attrs","style","id","setElement","_createElement","_setAttributes","_setStyle","_ensureElClassName","attr","css","document","createElementNS","svg","createElement","_setElement","className","prefixedClassName","removeClass","addClass","onRender","confirmUpdate","opt","override","removeThemeClassName","addThemeClassName","onSetTheme","oldTheme","newTheme","onRemove","undelegateDocumentEvents","prototype","apply","arguments","getEventNamespace","delegateElementEvents","element","events","data","eventNS","eventName","method","on","bind","undelegateElementEvents","off","delegateDocumentEvents","eventData","evt","Error","currentData","key","undefined","stopPropagation","propagationStopped","isPropagationStopped","args","Array","from","protoProps","staticProps","renderFn","render","__render__"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,CAAP,MAAc,gBAAd;AAEA,OAAO,MAAMC,KAAK,GAAG,EAAd;AAEP,OAAO,MAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqB;AAErCC,EAAAA,OAAO,EAAE,EAF4B;AAGrCC,EAAAA,KAAK,EAAE,IAH8B;AAIrCC,EAAAA,oBAAoB,EAAER,IAAI,CAACS,kBAAL,CAAwB,QAAxB,CAJe;AAKrCC,EAAAA,uBAAuB,EAAE,KALY;AAMrCC,EAAAA,YAAY,EAAEV,MAAM,CAACU,YANgB;AAOrCC,EAAAA,QAAQ,EAAE,IAP2B;AAQrCC,EAAAA,UAAU,EAAE,IARyB;AAUrCC,EAAAA,UAAU,EAAE,IAVyB;AAWrCC,EAAAA,eAAe,EAAE,CAXoB;AAYrCC,EAAAA,WAAW,EAAE,KAAG,EAZqB;AAarCC,EAAAA,WAAW,EAAE,KAAG,EAbqB;AAerCC,EAAAA,WAAW,EAAE,UAASZ,OAAT,EAAkB;AAE3B,SAAKI,uBAAL,GAA+BJ,OAAO,IAAI,CAAC,CAACA,OAAO,CAACC,KAApD;AACA,SAAKD,OAAL,GAAeN,IAAI,CAACmB,MAAL,CAAY,EAAZ,EAAgB,KAAKb,OAArB,EAA8BA,OAA9B,CAAf;AAEAR,IAAAA,QAAQ,CAACM,IAAT,CAAcgB,IAAd,CAAmB,IAAnB,EAAyBd,OAAzB;AACH,GArBoC;AAuBrCe,EAAAA,UAAU,EAAE,YAAW;AAEnBlB,IAAAA,KAAK,CAAC,KAAKmB,GAAN,CAAL,GAAkB,IAAlB;AAEA,SAAKC,QAAL,CAAc,KAAKjB,OAAL,CAAaC,KAAb,IAAsB,KAAKI,YAAzC;AACA,SAAKa,IAAL;AACH,GA7BoC;AA+BrCC,EAAAA,OAAO,EAAE,YAAW;AAChB,QAAI,KAAKC,UAAT,EAAqB;AACjB,WAAKC,GAAL,CAASC,MAAT;AACH,KAFD,MAEO;AACH,WAAKC,GAAL,CAASD,MAAT;AACH;AACJ,GArCoC;AAuCrCE,EAAAA,cAAc,EAAE,UAASlB,QAAT,EAAmB;AAC/BA,IAAAA,QAAQ,KAAKA,QAAQ,GAAGZ,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,UAAlB,CAAhB,CAAR;;AACA,QAAInB,QAAJ,EAAc;AACV,UAAIoB,KAAK,GAAG,KAAKN,UAAjB;AACA,UAAIO,SAAS,GAAG/B,CAAC,CAAC+B,SAAF,CAAYD,KAAK,GAAG,KAAH,GAAW,OAA5B,CAAhB;AACA,UAAIE,GAAG,GAAGlC,IAAI,CAACmC,YAAL,CAAkBvB,QAAlB,EAA4BqB,SAA5B,CAAV;AACA,OAACD,KAAK,GAAG,KAAKL,GAAR,GAAc,KAAKE,GAAzB,EAA8BO,KAA9B,GAAsCC,MAAtC,CAA6CH,GAAG,CAACI,QAAjD;AACA,WAAKzB,UAAL,GAAkBqB,GAAG,CAACK,SAAtB;AACH;;AACD,WAAO,IAAP;AACH,GAjDoC;AAmDrCC,EAAAA,aAAa,EAAE,UAASC,aAAT,EAAwBC,IAAxB,EAA8B;AAEzC,QAAIC,WAAW,GAAGD,IAAlB;;AAEA,WAAOC,WAAW,IAAIA,WAAW,CAACC,QAAZ,KAAyB,CAA/C,EAAkD;AAC9C,UAAIC,cAAc,GAAGF,WAAW,CAACG,YAAZ,CAAyBL,aAAzB,CAArB,CAD8C,CAE9C;;AACA,UAAII,cAAJ,EAAoB,OAAOA,cAAP,CAH0B,CAI9C;;AACA,UAAIF,WAAW,KAAK,KAAKI,EAAzB,EAA6B,OAAO,IAAP,CALiB,CAM9C;;AACAJ,MAAAA,WAAW,GAAGA,WAAW,CAACK,UAA1B;AACH;;AAED,WAAO,IAAP;AACH,GAlEoC;AAoErC;AACA;AACA;AACAC,EAAAA,cAAc,EAAE,YAAW;AACvB,QAAI,CAAC,KAAKF,EAAV,EAAc;AACV,UAAIG,OAAO,GAAGlD,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,SAAlB,CAAd;AACA,UAAIoB,KAAK,GAAGnD,IAAI,CAACmB,MAAL,CAAY,EAAZ,EAAgBnB,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,YAAlB,CAAhB,CAAZ;AACA,UAAIqB,KAAK,GAAGpD,IAAI,CAACmB,MAAL,CAAY,EAAZ,EAAgBnB,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,OAAlB,CAAhB,CAAZ;AACA,UAAI,KAAKsB,EAAT,EAAaF,KAAK,CAACE,EAAN,GAAWrD,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,IAAlB,CAAX;AACb,WAAKuB,UAAL,CAAgB,KAAKC,cAAL,CAAoBL,OAApB,CAAhB;;AACA,WAAKM,cAAL,CAAoBL,KAApB;;AACA,WAAKM,SAAL,CAAeL,KAAf;AACH,KARD,MAQO;AACH,WAAKE,UAAL,CAAgBtD,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,IAAlB,CAAhB;AACH;;AACD,SAAK2B,kBAAL;AACH,GApFoC;AAsFrCF,EAAAA,cAAc,EAAE,UAASL,KAAT,EAAgB;AAC5B,QAAI,KAAKzB,UAAT,EAAqB;AACjB,WAAKC,GAAL,CAASgC,IAAT,CAAcR,KAAd;AACH,KAFD,MAEO;AACH,WAAKtB,GAAL,CAAS8B,IAAT,CAAcR,KAAd;AACH;AACJ,GA5FoC;AA8FrCM,EAAAA,SAAS,EAAE,UAASL,KAAT,EAAgB;AACvB,SAAKvB,GAAL,CAAS+B,GAAT,CAAaR,KAAb;AACH,GAhGoC;AAkGrCG,EAAAA,cAAc,EAAE,UAASL,OAAT,EAAkB;AAC9B,QAAI,KAAKxB,UAAT,EAAqB;AACjB,aAAOmC,QAAQ,CAACC,eAAT,CAAyB5D,CAAC,CAAC+B,SAAF,CAAY8B,GAArC,EAA0Cb,OAA1C,CAAP;AACH,KAFD,MAEO;AACH,aAAOW,QAAQ,CAACG,aAAT,CAAuBd,OAAvB,CAAP;AACH;AACJ,GAxGoC;AA0GrC;AACA;AACAe,EAAAA,WAAW,EAAE,UAASlB,EAAT,EAAa;AACtB,SAAKlB,GAAL,GAAWkB,EAAE,YAAYjD,QAAQ,CAACC,CAAvB,GAA2BgD,EAA3B,GAAgCjD,QAAQ,CAACC,CAAT,CAAWgD,EAAX,CAA3C;AACA,SAAKA,EAAL,GAAU,KAAKlB,GAAL,CAAS,CAAT,CAAV;AACA,QAAI,KAAKH,UAAT,EAAqB,KAAKC,GAAL,GAAWzB,CAAC,CAAC,KAAK6C,EAAN,CAAZ;AACxB,GAhHoC;AAkHrCW,EAAAA,kBAAkB,EAAE,YAAW;AAC3B,QAAIQ,SAAS,GAAGlE,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,WAAlB,CAAhB;AACA,QAAI,CAACmC,SAAL,EAAgB;AAChB,QAAIC,iBAAiB,GAAGnE,IAAI,CAACS,kBAAL,CAAwByD,SAAxB,CAAxB,CAH2B,CAI3B;;AACA,QAAI,KAAKxC,UAAT,EAAqB;AACjB,WAAKC,GAAL,CAASyC,WAAT,CAAqBF,SAArB,EAAgCG,QAAhC,CAAyCF,iBAAzC;AACH,KAFD,MAEO;AACH,WAAKtC,GAAL,CAASuC,WAAT,CAAqBF,SAArB,EAAgCG,QAAhC,CAAyCF,iBAAzC;AACH;AACJ,GA5HoC;AA8HrC3C,EAAAA,IAAI,EAAE,YAAW,CACb;AACA;AACH,GAjIoC;AAmIrC8C,EAAAA,QAAQ,EAAE,YAAW,CACjB;AACA;AACH,GAtIoC;AAwIrCC,EAAAA,aAAa,EAAE,YAAW;AACtB;AACA;AACA,WAAO,CAAP;AACH,GA5IoC;AA8IrChD,EAAAA,QAAQ,EAAE,UAAShB,KAAT,EAAgBiE,GAAhB,EAAqB;AAE3BA,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb,CAF2B,CAI3B;AACA;;AACA,QAAI,KAAKjE,KAAL,IAAc,KAAKG,uBAAnB,IAA8C,CAAC8D,GAAG,CAACC,QAAvD,EAAiE;AAC7D,aAAO,IAAP;AACH;;AAED,SAAKC,oBAAL;AACA,SAAKC,iBAAL,CAAuBpE,KAAvB;AACA,SAAKqE,UAAL,CAAgB,KAAKrE;AAAK;AAA1B,MAA0CA;AAAK;AAA/C;AACA,SAAKA,KAAL,GAAaA,KAAb;AAEA,WAAO,IAAP;AACH,GA9JoC;AAgKrCoE,EAAAA,iBAAiB,EAAE,UAASpE,KAAT,EAAgB;AAE/BA,IAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKA,KAAtB;AAEA,QAAI2D,SAAS,GAAG,KAAK1D,oBAAL,GAA4BD,KAA5C;;AAEA,QAAI,KAAKmB,UAAT,EAAqB;AACjB,WAAKC,GAAL,CAAS0C,QAAT,CAAkBH,SAAlB;AACH,KAFD,MAEO;AACH,WAAKrC,GAAL,CAASwC,QAAT,CAAkBH,SAAlB;AACH;;AAED,WAAO,IAAP;AACH,GA7KoC;AA+KrCQ,EAAAA,oBAAoB,EAAE,UAASnE,KAAT,EAAgB;AAElCA,IAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKA,KAAtB;AAEA,QAAI2D,SAAS,GAAG,KAAK1D,oBAAL,GAA4BD,KAA5C;;AAEA,QAAI,KAAKmB,UAAT,EAAqB;AACjB,WAAKC,GAAL,CAASyC,WAAT,CAAqBF,SAArB;AACH,KAFD,MAEO;AACH,WAAKrC,GAAL,CAASuC,WAAT,CAAqBF,SAArB;AACH;;AAED,WAAO,IAAP;AACH,GA5LoC;AA8LrCU,EAAAA,UAAU,EAAE,UAASC,QAAT,EAAmBC,QAAnB,EAA6B,CACrC;AACA;AACH,GAjMoC;AAmMrClD,EAAAA,MAAM,EAAE,YAAW;AAEf,SAAKmD,QAAL;AACA,SAAKC,wBAAL;AAEA7E,IAAAA,KAAK,CAAC,KAAKmB,GAAN,CAAL,GAAkB,IAAlB;AAEAxB,IAAAA,QAAQ,CAACM,IAAT,CAAc6E,SAAd,CAAwBrD,MAAxB,CAA+BsD,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C;AAEA,WAAO,IAAP;AACH,GA7MoC;AA+MrCJ,EAAAA,QAAQ,EAAE,YAAW,CACjB;AACA;AACH,GAlNoC;AAoNrCK,EAAAA,iBAAiB,EAAE,YAAW;AAC1B;AACA,WAAO,qBAAqB,KAAK9D,GAAjC;AACH,GAvNoC;AAyNrC+D,EAAAA,qBAAqB,EAAE,UAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACnD,QAAI,CAACD,MAAL,EAAa,OAAO,IAAP;AACbC,IAAAA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;AACA,QAAIC,OAAO,GAAG,KAAKL,iBAAL,EAAd;;AACA,SAAK,IAAIM,SAAT,IAAsBH,MAAtB,EAA8B;AAC1B,UAAII,MAAM,GAAGJ,MAAM,CAACG,SAAD,CAAnB;AACA,UAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkCA,MAAM,GAAG,KAAKA,MAAL,CAAT;AAClC,UAAI,CAACA,MAAL,EAAa;AACb5F,MAAAA,CAAC,CAACuF,OAAD,CAAD,CAAWM,EAAX,CAAcF,SAAS,GAAGD,OAA1B,EAAmCD,IAAnC,EAAyCG,MAAM,CAACE,IAAP,CAAY,IAAZ,CAAzC;AACH;;AACD,WAAO,IAAP;AACH,GApOoC;AAsOrCC,EAAAA,uBAAuB,EAAE,UAASR,OAAT,EAAkB;AACvCvF,IAAAA,CAAC,CAACuF,OAAD,CAAD,CAAWS,GAAX,CAAe,KAAKX,iBAAL,EAAf;AACA,WAAO,IAAP;AACH,GAzOoC;AA2OrCY,EAAAA,sBAAsB,EAAE,UAAST,MAAT,EAAiBC,IAAjB,EAAuB;AAC3CD,IAAAA,MAAM,KAAKA,MAAM,GAAGvF,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,gBAAlB,CAAd,CAAN;AACA,WAAO,KAAKsD,qBAAL,CAA2BxB,QAA3B,EAAqC0B,MAArC,EAA6CC,IAA7C,CAAP;AACH,GA9OoC;AAgPrCR,EAAAA,wBAAwB,EAAE,YAAW;AACjC,WAAO,KAAKc,uBAAL,CAA6BjC,QAA7B,CAAP;AACH,GAlPoC;AAoPrCoC,EAAAA,SAAS,EAAE,UAASC,GAAT,EAAcV,IAAd,EAAoB;AAC3B,QAAI,CAACU,GAAL,EAAU,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACV,QAAIC,WAAW,GAAGF,GAAG,CAACV,IAAtB;AACA,QAAIa,GAAG,GAAG,OAAO,KAAK/E,GAAZ,GAAkB,IAA5B;;AACA,QAAIkE,IAAI,KAAKc,SAAb,EAAwB;AACpB,UAAI,CAACF,WAAL,EAAkB,OAAO,EAAP;AAClB,aAAOA,WAAW,CAACC,GAAD,CAAX,IAAoB,EAA3B;AACH;;AACDD,IAAAA,WAAW,KAAKA,WAAW,GAAGF,GAAG,CAACV,IAAJ,GAAW,EAA9B,CAAX;AACAY,IAAAA,WAAW,CAACC,GAAD,CAAX,KAAqBD,WAAW,CAACC,GAAD,CAAX,GAAmB,EAAxC;AACArG,IAAAA,IAAI,CAACmB,MAAL,CAAYiF,WAAW,CAACC,GAAD,CAAvB,EAA8Bb,IAA9B;AACA,WAAO,IAAP;AACH,GAhQoC;AAkQrCe,EAAAA,eAAe,EAAE,UAASL,GAAT,EAAc;AAC3B,SAAKD,SAAL,CAAeC,GAAf,EAAoB;AAAEM,MAAAA,kBAAkB,EAAE;AAAtB,KAApB;AACA,WAAO,IAAP;AACH,GArQoC;AAuQrCC,EAAAA,oBAAoB,EAAE,UAASP,GAAT,EAAc;AAChC,WAAO,CAAC,CAAC,KAAKD,SAAL,CAAeC,GAAf,EAAoBM,kBAA7B;AACH;AAzQoC,CAArB,EA2QjB;AAECnG,EAAAA,MAAM,EAAE,YAAW;AAEf,QAAIqG,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWzB,SAAX,CAAX,CAFe,CAIf;AACA;;AACA,QAAI0B,UAAU,GAAGH,IAAI,CAAC,CAAD,CAAJ,IAAW1G,IAAI,CAACmB,MAAL,CAAY,EAAZ,EAAgBuF,IAAI,CAAC,CAAD,CAApB,CAAX,IAAuC,EAAxD;AACA,QAAII,WAAW,GAAGJ,IAAI,CAAC,CAAD,CAAJ,IAAW1G,IAAI,CAACmB,MAAL,CAAY,EAAZ,EAAgBuF,IAAI,CAAC,CAAD,CAApB,CAAX,IAAuC,EAAzD,CAPe,CASf;;AACA,QAAIK,QAAQ,GAAGF,UAAU,CAACG,MAAX,IAAsB,KAAK/B,SAAL,IAAkB,KAAKA,SAAL,CAAe+B,MAAvD,IAAkE,IAAjF;AAEA;AACR;AACA;AACA;AACA;;AACQH,IAAAA,UAAU,CAACG,MAAX,GAAoB,YAAW;AAE3B,UAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC;AACAA,QAAAA,QAAQ,CAAC7B,KAAT,CAAe,IAAf,EAAqBC,SAArB;AACH;;AAED,UAAI,KAAK6B,MAAL,CAAYC,UAAZ,KAA2BF,QAA/B,EAAyC;AACrC;AACA;AACA,aAAKzC,QAAL;AACH,OAX0B,CAa3B;;;AACA,aAAO,IAAP;AACH,KAfD;;AAiBAuC,IAAAA,UAAU,CAACG,MAAX,CAAkBC,UAAlB,GAA+BF,QAA/B;AAEA,WAAOjH,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqBe,IAArB,CAA0B,IAA1B,EAAgCyF,UAAhC,EAA4CC,WAA5C,CAAP;AACH;AAvCF,CA3QiB,CAAb","sourcesContent":["import Backbone from 'backbone';\nimport $ from 'jquery';\nimport * as util from '../util/index.mjs';\nimport { config } from '../config/index.mjs';\nimport V from '../V/index.mjs';\n\nexport const views = {};\n\nexport const View = Backbone.View.extend({\n\n    options: {},\n    theme: null,\n    themeClassNamePrefix: util.addClassNamePrefix('theme-'),\n    requireSetThemeOverride: false,\n    defaultTheme: config.defaultTheme,\n    children: null,\n    childNodes: null,\n\n    DETACHABLE: true,\n    UPDATE_PRIORITY: 2,\n    FLAG_INSERT: 1<<30,\n    FLAG_REMOVE: 1<<29,\n\n    constructor: function(options) {\n\n        this.requireSetThemeOverride = options && !!options.theme;\n        this.options = util.assign({}, this.options, options);\n\n        Backbone.View.call(this, options);\n    },\n\n    initialize: function() {\n\n        views[this.cid] = this;\n\n        this.setTheme(this.options.theme || this.defaultTheme);\n        this.init();\n    },\n\n    unmount: function() {\n        if (this.svgElement) {\n            this.vel.remove();\n        } else {\n            this.$el.remove();\n        }\n    },\n\n    renderChildren: function(children) {\n        children || (children = util.result(this, 'children'));\n        if (children) {\n            var isSVG = this.svgElement;\n            var namespace = V.namespace[isSVG ? 'svg' : 'xhtml'];\n            var doc = util.parseDOMJSON(children, namespace);\n            (isSVG ? this.vel : this.$el).empty().append(doc.fragment);\n            this.childNodes = doc.selectors;\n        }\n        return this;\n    },\n\n    findAttribute: function(attributeName, node) {\n\n        var currentNode = node;\n\n        while (currentNode && currentNode.nodeType === 1) {\n            var attributeValue = currentNode.getAttribute(attributeName);\n            // attribute found\n            if (attributeValue) return attributeValue;\n            // do not climb up the DOM\n            if (currentNode === this.el) return null;\n            // try parent node\n            currentNode = currentNode.parentNode;\n        }\n\n        return null;\n    },\n\n    // Override the Backbone `_ensureElement()` method in order to create an\n    // svg element (e.g., `<g>`) node that wraps all the nodes of the Cell view.\n    // Expose class name setter as a separate method.\n    _ensureElement: function() {\n        if (!this.el) {\n            var tagName = util.result(this, 'tagName');\n            var attrs = util.assign({}, util.result(this, 'attributes'));\n            var style = util.assign({}, util.result(this, 'style'));\n            if (this.id) attrs.id = util.result(this, 'id');\n            this.setElement(this._createElement(tagName));\n            this._setAttributes(attrs);\n            this._setStyle(style);\n        } else {\n            this.setElement(util.result(this, 'el'));\n        }\n        this._ensureElClassName();\n    },\n\n    _setAttributes: function(attrs) {\n        if (this.svgElement) {\n            this.vel.attr(attrs);\n        } else {\n            this.$el.attr(attrs);\n        }\n    },\n\n    _setStyle: function(style) {\n        this.$el.css(style);\n    },\n\n    _createElement: function(tagName) {\n        if (this.svgElement) {\n            return document.createElementNS(V.namespace.svg, tagName);\n        } else {\n            return document.createElement(tagName);\n        }\n    },\n\n    // Utilize an alternative DOM manipulation API by\n    // adding an element reference wrapped in Vectorizer.\n    _setElement: function(el) {\n        this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n        this.el = this.$el[0];\n        if (this.svgElement) this.vel = V(this.el);\n    },\n\n    _ensureElClassName: function() {\n        var className = util.result(this, 'className');\n        if (!className) return;\n        var prefixedClassName = util.addClassNamePrefix(className);\n        // Note: className removal here kept for backwards compatibility only\n        if (this.svgElement) {\n            this.vel.removeClass(className).addClass(prefixedClassName);\n        } else {\n            this.$el.removeClass(className).addClass(prefixedClassName);\n        }\n    },\n\n    init: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    onRender: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    confirmUpdate: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n        return 0;\n    },\n\n    setTheme: function(theme, opt) {\n\n        opt = opt || {};\n\n        // Theme is already set, override is required, and override has not been set.\n        // Don't set the theme.\n        if (this.theme && this.requireSetThemeOverride && !opt.override) {\n            return this;\n        }\n\n        this.removeThemeClassName();\n        this.addThemeClassName(theme);\n        this.onSetTheme(this.theme/* oldTheme */, theme/* newTheme */);\n        this.theme = theme;\n\n        return this;\n    },\n\n    addThemeClassName: function(theme) {\n\n        theme = theme || this.theme;\n\n        var className = this.themeClassNamePrefix + theme;\n\n        if (this.svgElement) {\n            this.vel.addClass(className);\n        } else {\n            this.$el.addClass(className);\n        }\n\n        return this;\n    },\n\n    removeThemeClassName: function(theme) {\n\n        theme = theme || this.theme;\n\n        var className = this.themeClassNamePrefix + theme;\n\n        if (this.svgElement) {\n            this.vel.removeClass(className);\n        } else {\n            this.$el.removeClass(className);\n        }\n\n        return this;\n    },\n\n    onSetTheme: function(oldTheme, newTheme) {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    remove: function() {\n\n        this.onRemove();\n        this.undelegateDocumentEvents();\n\n        views[this.cid] = null;\n\n        Backbone.View.prototype.remove.apply(this, arguments);\n\n        return this;\n    },\n\n    onRemove: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    getEventNamespace: function() {\n        // Returns a per-session unique namespace\n        return '.joint-event-ns-' + this.cid;\n    },\n\n    delegateElementEvents: function(element, events, data) {\n        if (!events) return this;\n        data || (data = {});\n        var eventNS = this.getEventNamespace();\n        for (var eventName in events) {\n            var method = events[eventName];\n            if (typeof method !== 'function') method = this[method];\n            if (!method) continue;\n            $(element).on(eventName + eventNS, data, method.bind(this));\n        }\n        return this;\n    },\n\n    undelegateElementEvents: function(element) {\n        $(element).off(this.getEventNamespace());\n        return this;\n    },\n\n    delegateDocumentEvents: function(events, data) {\n        events || (events = util.result(this, 'documentEvents'));\n        return this.delegateElementEvents(document, events, data);\n    },\n\n    undelegateDocumentEvents: function() {\n        return this.undelegateElementEvents(document);\n    },\n\n    eventData: function(evt, data) {\n        if (!evt) throw new Error('eventData(): event object required.');\n        var currentData = evt.data;\n        var key = '__' + this.cid + '__';\n        if (data === undefined) {\n            if (!currentData) return {};\n            return currentData[key] || {};\n        }\n        currentData || (currentData = evt.data = {});\n        currentData[key] || (currentData[key] = {});\n        util.assign(currentData[key], data);\n        return this;\n    },\n\n    stopPropagation: function(evt) {\n        this.eventData(evt, { propagationStopped: true });\n        return this;\n    },\n\n    isPropagationStopped: function(evt) {\n        return !!this.eventData(evt).propagationStopped;\n    }\n\n}, {\n\n    extend: function() {\n\n        var args = Array.from(arguments);\n\n        // Deep clone the prototype and static properties objects.\n        // This prevents unexpected behavior where some properties are overwritten outside of this function.\n        var protoProps = args[0] && util.assign({}, args[0]) || {};\n        var staticProps = args[1] && util.assign({}, args[1]) || {};\n\n        // Need the real render method so that we can wrap it and call it later.\n        var renderFn = protoProps.render || (this.prototype && this.prototype.render) || null;\n\n        /*\n            Wrap the real render method so that:\n                .. `onRender` is always called.\n                .. `this` is always returned.\n        */\n        protoProps.render = function() {\n\n            if (typeof renderFn === 'function') {\n                // Call the original render method.\n                renderFn.apply(this, arguments);\n            }\n\n            if (this.render.__render__ === renderFn) {\n                // Should always call onRender() method.\n                // Should call it only once when renderFn is actual prototype method i.e. not the wrapper\n                this.onRender();\n            }\n\n            // Should always return itself.\n            return this;\n        };\n\n        protoProps.render.__render__ = renderFn;\n\n        return Backbone.View.extend.call(this, protoProps, staticProps);\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}