{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martn\\\\Documents\\\\New Documents 2019\\\\Technigo codin\\\\storymapper spreadsheet\\\\my-app\\\\src\\\\components\\\\BondSubtypeSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { Add } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CharacterNameAutoComplete from './CharacterNameAutoComplete';\nimport cast from '../reducers/cast';\nimport { bondCategories } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const BondSubTypeSelect = ({\n  open,\n  handleClose\n}) => {\n  _s();\n\n  const characters = useSelector(store => store.cast.characters);\n  const characterNames = useSelector(store => store.cast.characters).map(character => character.name); // const [open, setOpen] = useState(false)\n\n  const [source, setSource] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const [target, setTarget] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const [type, setType] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const [category, setCategory] = useState({\n    id: \"\",\n    value: \"\",\n    index: null\n  });\n  const [timeStart, setTimeStart] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const [timeEnd, setTimeEnd] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const [summary, setSummary] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch(); // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleSourceChange = event => {\n    setSource({\n      id: source.id,\n      value: event.target.value\n    });\n  };\n\n  const handleTargetChange = event => {\n    setTarget({\n      id: target.id,\n      value: event.target.value\n    });\n  };\n\n  const handleCategoryChange = event => {\n    console.log(\"---------- about to set this mofucking category!! -----------\");\n    console.log(\"event.target.index:\");\n    console.log(event.target.index);\n    setCategory({\n      id: category.id,\n      value: event.target.value,\n      index: event.target.index\n    });\n  };\n\n  const handleTypeChange = event => {\n    setType({\n      id: type.id,\n      value: event.target.value\n    });\n  };\n\n  const handleSummaryChange = event => {\n    setSummary({\n      id: summary.id,\n      value: event.target.value\n    });\n  }; // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n\n  const handleSubmit = () => {\n    setSource(\"\");\n    setTarget(\"\");\n    dispatch(cast.actions.addBond({\n      source,\n      target\n    }));\n    handleClose();\n  };\n\n  console.log(\"new bond form mounted!\");\n  console.log(\"category index is:\");\n  console.log(bondCategories);\n  console.log(category.index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"character-a\",\n        children: \"Subtype\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n        value: category.value,\n        onChange: handleCategoryChange,\n        inputProps: {\n          name: 'category',\n          id: 'category'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), bondCategories.map(category => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            index: category.index,\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"the Bond's rough subtype\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BondSubTypeSelect, \"ms2zFZGwl8QqgPphnQzW20WKQi4=\", false, function () {\n  return [useSelector, useSelector, useStyles, useDispatch];\n});\n\n_c = BondSubTypeSelect;\nexport default BondSubTypeSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"BondSubTypeSelect\");","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/storymapper spreadsheet/my-app/src/components/BondSubtypeSelect.js"],"names":["React","useState","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputLabel","FormHelperText","FormControl","Select","NativeSelect","Add","useSelector","useDispatch","CharacterNameAutoComplete","cast","bondCategories","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","BondSubTypeSelect","open","handleClose","characters","store","characterNames","map","character","name","source","setSource","id","value","target","setTarget","type","setType","category","setCategory","index","timeStart","setTimeStart","timeEnd","setTimeEnd","summary","setSummary","classes","dispatch","handleSourceChange","event","handleTargetChange","handleCategoryChange","console","log","handleTypeChange","handleSummaryChange","handleSubmit","actions","addBond"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { Add } from '@material-ui/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport CharacterNameAutoComplete from './CharacterNameAutoComplete'\r\nimport cast from '../reducers/cast'\r\nimport { bondCategories } from '../constants'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport const BondSubTypeSelect = ({ open, handleClose }) => {\r\n\r\n  const characters = useSelector(store => store.cast.characters)\r\n  const characterNames = useSelector(store => store.cast.characters).map(character => character.name)\r\n  // const [open, setOpen] = useState(false)\r\n  const [source, setSource] = useState({ id: \"\", value: \"\" })\r\n  const [target, setTarget] = useState({ id: \"\", value: \"\" })\r\n  const [type, setType] = useState({ id: \"\", value: \"\" })\r\n  const [category, setCategory] = useState({ id: \"\", value: \"\", index: null })\r\n  const [timeStart, setTimeStart] = useState({ id: \"\", value: \"\" })\r\n  const [timeEnd, setTimeEnd] = useState({ id: \"\", value: \"\" })\r\n  const [summary, setSummary] = useState({ id: \"\", value: \"\" })\r\n  const classes = useStyles()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleSourceChange = (event) => {\r\n    setSource({ id: source.id, value: event.target.value })\r\n  }\r\n\r\n  const handleTargetChange = (event) => {\r\n    setTarget({ id: target.id, value: event.target.value })\r\n  }\r\n\r\n  const handleCategoryChange = (event) => {\r\n    console.log(\"---------- about to set this mofucking category!! -----------\")\r\n    console.log(\"event.target.index:\")\r\n    console.log(event.target.index)\r\n    setCategory({ id: category.id, value: event.target.value, index: event.target.index })\r\n  }\r\n\r\n  const handleTypeChange = (event) => {\r\n    setType({ id: type.id, value: event.target.value })\r\n  }\r\n\r\n  const handleSummaryChange = (event) => {\r\n    setSummary({ id: summary.id, value: event.target.value })\r\n  }\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  const handleSubmit = () => {\r\n    setSource(\"\")\r\n    setTarget(\"\")\r\n    dispatch(cast.actions.addBond({ source, target }))\r\n    handleClose()\r\n  };\r\n\r\n  console.log(\"new bond form mounted!\")\r\n  console.log(\"category index is:\")\r\n  console.log(bondCategories)\r\n  console.log(category.index)\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"character-a\">Subtype</InputLabel>\r\n        <NativeSelect\r\n          value={category.value}\r\n          onChange={handleCategoryChange}\r\n          inputProps={{\r\n            name: 'category',\r\n            id: 'category',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {bondCategories.map((category) => {\r\n            return <option value={category.name} index={category.index}>{category.name}</option>\r\n          })}\r\n\r\n        </NativeSelect>\r\n        <FormHelperText>the Bond's rough subtype</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BondSubTypeSelect"]},"metadata":{},"sourceType":"module"}