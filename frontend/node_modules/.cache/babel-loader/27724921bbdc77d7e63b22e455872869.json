{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martn\\\\Documents\\\\New Documents 2019\\\\Technigo codin\\\\storymapper spreadsheet\\\\my-app\\\\src\\\\components\\\\DrawCharacters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as joint from 'jointjs';\nimport cast from '../reducers/cast'; // import { bondCategories } from '../constants'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawCharacters = ({\n  graph\n}) => {\n  _s();\n\n  const characters = useSelector(store => store.cast.characters);\n  const dispatch = useDispatch();\n  dispatch(cast.actions.drawCharacters());\n  characters.forEach((character, index) => {\n    let rect = new joint.shapes.standard.Rectangle();\n    rect.position(150, 50);\n    rect.resize(100, 40);\n    rect.attr({\n      body: {\n        fill: 'green'\n      },\n      label: {\n        text: character.name,\n        fill: 'white'\n      }\n    });\n    rect.addTo(graph);\n    console.log(`added ${character.name} to graph!`);\n  });\n  console.log(graph.getElements());\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawCharacters, \"NjAKJkw/ir6pV0MQ9gxz9H7iqJA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DrawCharacters;\nexport default DrawCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawCharacters\");","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/storymapper spreadsheet/my-app/src/components/DrawCharacters.js"],"names":["React","useState","useSelector","useDispatch","joint","cast","DrawCharacters","graph","characters","store","dispatch","actions","drawCharacters","forEach","character","index","rect","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","addTo","console","log","getElements"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,OAAOC,IAAP,MAAiB,kBAAjB,C,CACA;;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAEpC,QAAMC,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACJ,IAAN,CAAWG,UAArB,CAA9B;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AAEAO,EAAAA,QAAQ,CAACL,IAAI,CAACM,OAAL,CAAaC,cAAb,EAAD,CAAR;AAEAJ,EAAAA,UAAU,CAACK,OAAX,CAAmB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACvC,QAAIC,IAAI,GAAG,IAAIZ,KAAK,CAACa,MAAN,CAAaC,QAAb,CAAsBC,SAA1B,EAAX;AACAH,IAAAA,IAAI,CAACI,QAAL,CAAc,GAAd,EAAmB,EAAnB;AACAJ,IAAAA,IAAI,CAACK,MAAL,CAAY,GAAZ,EAAiB,EAAjB;AACAL,IAAAA,IAAI,CAACM,IAAL,CAAU;AACRC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OADE;AAIRC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEZ,SAAS,CAACa,IADX;AAELH,QAAAA,IAAI,EAAE;AAFD;AAJC,KAAV;AASAR,IAAAA,IAAI,CAACY,KAAL,CAAWrB,KAAX;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQhB,SAAS,CAACa,IAAK,YAApC;AACD,GAfD;AAiBAE,EAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAK,CAACwB,WAAN,EAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CA9BD;;GAAMzB,c;UAEeJ,W,EACFC,W;;;KAHbG,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport * as joint from 'jointjs'\r\n\r\nimport cast from '../reducers/cast'\r\n// import { bondCategories } from '../constants'\r\n\r\n\r\nconst DrawCharacters = ({ graph }) => {\r\n  \r\n  const characters = useSelector(store => store.cast.characters)\r\n  const dispatch = useDispatch()\r\n\r\n  dispatch(cast.actions.drawCharacters())\r\n\r\n  characters.forEach((character, index) => {\r\n    let rect = new joint.shapes.standard.Rectangle();\r\n    rect.position(150, 50);\r\n    rect.resize(100, 40);\r\n    rect.attr({\r\n      body: {\r\n        fill: 'green'\r\n      },\r\n      label: {\r\n        text: character.name,\r\n        fill: 'white'\r\n      }\r\n    });\r\n    rect.addTo(graph)\r\n    console.log(`added ${character.name} to graph!`)\r\n  })\r\n\r\n  console.log(graph.getElements())\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawCharacters"]},"metadata":{},"sourceType":"module"}