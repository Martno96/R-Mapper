{"ast":null,"code":"//     Backbone.js 1.4.0\n//     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n(function (factory) {\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self || typeof global == 'object' && global.global === global && global; // Set up Backbone appropriately for the environment. Start with AMD.\n\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function (_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }); // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'),\n        $;\n\n    try {\n      $ = require('jquery');\n    } catch (e) {}\n\n    factory(root, exports, _, $); // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n})(function (root, Backbone, _, $) {\n  // Initial Setup\n  // -------------\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone; // Create a local reference to a common array method we'll want to use later.\n\n  var slice = Array.prototype.slice; // Current version of the library. Keep in sync with `package.json`.\n\n  Backbone.VERSION = '1.4.0'; // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n\n  Backbone.$ = $; // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n\n  Backbone.noConflict = function () {\n    root.Backbone = previousBackbone;\n    return this;\n  }; // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n\n\n  Backbone.emulateHTTP = false; // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n\n  Backbone.emulateJSON = false; // Backbone.Events\n  // ---------------\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n\n  var Events = Backbone.Events = {}; // Regular expression used to split event strings.\n\n  var eventSplitter = /\\s+/; // A private global variable to share between listeners and listenees.\n\n  var _listening; // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n\n\n  var eventsApi = function (iteratee, events, name, callback, opts) {\n    var i = 0,\n        names;\n\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n\n      for (names = _.keys(name); i < names.length; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n\n    return events;\n  }; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n\n\n  Events.on = function (name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening; // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n\n      _listening.interop = false;\n    }\n\n    return this;\n  }; // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n\n\n  Events.listenTo = function (obj, name, callback) {\n    if (!obj) return this;\n\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id]; // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    } // Bind callbacks on obj.\n\n\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n    if (error) throw error; // If the target obj is not Backbone.Events, track events manually.\n\n    if (listening.interop) listening.on(name, callback);\n    return this;\n  }; // The reducing API that adds a callback to the `events` object.\n\n\n  var onApi = function (events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context,\n          ctx = options.ctx,\n          listening = options.listening;\n      if (listening) listening.count++;\n      handlers.push({\n        callback: callback,\n        context: context,\n        ctx: context || ctx,\n        listening: listening\n      });\n    }\n\n    return events;\n  }; // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n\n\n  var tryCatchOn = function (obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  }; // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n\n\n  Events.off = function (name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  }; // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n\n\n  Events.stopListening = function (obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]]; // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n\n      if (!listening) break;\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n    return this;\n  }; // The reducing API that removes a callback from the `events` object.\n\n\n  var offApi = function (events, name, callback, options) {\n    if (!events) return;\n    var context = options.context,\n        listeners = options.listeners;\n    var i = 0,\n        names; // Delete all event listeners and \"drop\" events.\n\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name]; // Bail out if there are no events stored.\n\n      if (!handlers) break; // Find any remaining events.\n\n      var remaining = [];\n\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n\n        if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      } // Replace events if there are any remaining.  Otherwise, clean up.\n\n\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  }; // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n\n\n  Events.once = function (name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  }; // Inversion-of-control versions of `once`.\n\n\n  Events.listenToOnce = function (obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  }; // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n\n\n  var onceMap = function (map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function () {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n\n      once._callback = callback;\n    }\n\n    return map;\n  }; // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n\n\n  Events.trigger = function (name) {\n    if (!this._events) return this;\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  }; // Handles triggering the appropriate event callbacks.\n\n\n  var triggerApi = function (objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n\n    return objEvents;\n  }; // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n\n\n  var triggerEvents = function (events, args) {\n    var ev,\n        i = -1,\n        l = events.length,\n        a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n\n    switch (args.length) {\n      case 0:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n\n        return;\n\n      case 1:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n\n        return;\n\n      case 2:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n        return;\n\n      case 3:\n        while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n        return;\n\n      default:\n        while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n\n        return;\n    }\n  }; // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n\n\n  var Listening = function (listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on; // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n\n  Listening.prototype.off = function (name, callback) {\n    var cleanup;\n\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n\n    if (cleanup) this.cleanup();\n  }; // Cleans up memory bindings between the listener and the listenee.\n\n\n  Listening.prototype.cleanup = function () {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  }; // Aliases for backwards compatibility.\n\n\n  Events.bind = Events.on;\n  Events.unbind = Events.off; // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n\n  _.extend(Backbone, Events); // Backbone.Model\n  // --------------\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n\n\n  var Model = Backbone.Model = function (attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n\n    var defaults = _.result(this, 'defaults');\n\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  }; // Attach all inheritable methods to the Model prototype.\n\n\n  _.extend(Model.prototype, Events, {\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n    // The value returned during the last failed validation.\n    validationError: null,\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Return a copy of the model's `attributes` object.\n    toJSON: function (options) {\n      return _.clone(this.attributes);\n    },\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Get the value of an attribute.\n    get: function (attr) {\n      return this.attributes[attr];\n    },\n    // Get the HTML-escaped value of an attribute.\n    escape: function (attr) {\n      return _.escape(this.get(attr));\n    },\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function (attr) {\n      return this.get(attr) != null;\n    },\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function (attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function (key, val, options) {\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      var attrs;\n\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {}); // Run validation.\n\n      if (!this._validate(attrs, options)) return false; // Extract attributes and options.\n\n      var unset = options.unset;\n      var silent = options.silent;\n      var changes = [];\n      var changing = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev = this._previousAttributes; // For each `set` attribute, update or delete the current value.\n\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n\n        unset ? delete current[attr] : current[attr] = val;\n      } // Update the `id`.\n\n\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute); // Trigger all relevant attribute changes.\n\n      if (!silent) {\n        if (changes.length) this._pending = options;\n\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      } // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n\n\n      if (changing) return this;\n\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function (attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function (options) {\n      var attrs = {};\n\n      for (var key in this.attributes) attrs[key] = void 0;\n\n      return this.set(attrs, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function (attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function (diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n\n      return hasChanged ? changed : false;\n    },\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function (attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function () {\n      return _.clone(this._previousAttributes);\n    },\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var model = this;\n      var success = options.success;\n\n      options.success = function (resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function (key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({\n        validate: true,\n        parse: true\n      }, options);\n      var wait = options.wait; // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      } // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n\n\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n\n      options.success = function (resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options); // Set temporary attributes if `{wait: true}` to properly find new ids.\n\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options); // Restore attributes.\n\n      this.attributes = attributes;\n      return xhr;\n    },\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function (options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function () {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function (resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n\n      if (!wait) destroy();\n      return xhr;\n    },\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function () {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new model with identical attributes to this one.\n    clone: function () {\n      return new this.constructor(this.attributes);\n    },\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function () {\n      return !this.has(this.idAttribute);\n    },\n    // Check if the model is currently in a valid state.\n    isValid: function (options) {\n      return this._validate({}, _.extend({}, options, {\n        validate: true\n      }));\n    },\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function (attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {\n        validationError: error\n      }));\n      return false;\n    }\n  }); // Backbone.Collection\n  // -------------------\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n\n\n  var Collection = Backbone.Collection = function (models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n\n    this._reset();\n\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({\n      silent: true\n    }, options));\n  }; // Default options for `Collection#set`.\n\n\n  var setOptions = {\n    add: true,\n    remove: true,\n    merge: true\n  };\n  var addOptions = {\n    add: true,\n    remove: false\n  }; // Splices `insert` into `array` at index `at`.\n\n  var splice = function (array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  }; // Define the Collection's inheritable methods.\n\n\n  _.extend(Collection.prototype, Events, {\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function (options) {\n      return this.map(function (model) {\n        return model.toJSON(options);\n      });\n    },\n    // Proxy `Backbone.sync` by default.\n    sync: function () {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function (models, options) {\n      return this.set(models, _.extend({\n        merge: false\n      }, options, addOptions));\n    },\n    // Remove a model, or a list of models from the set.\n    remove: function (models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var removed = this._removeModels(models, options);\n\n      if (!options.silent && removed.length) {\n        options.changes = {\n          added: [],\n          merged: [],\n          removed: removed\n        };\n        this.trigger('update', this, options);\n      }\n\n      return singular ? removed[0] : removed;\n    },\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function (models, options) {\n      if (models == null) return;\n      options = _.extend({}, setOptions, options);\n\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null; // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n\n      var model, i;\n\n      for (i = 0; i < models.length; i++) {\n        model = models[i]; // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n\n        var existing = this.get(model);\n\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n\n          models[i] = existing; // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n\n          if (model) {\n            toAdd.push(model);\n\n            this._addReference(model, options);\n\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      } // Remove stale models.\n\n\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n\n        if (toRemove.length) this._removeModels(toRemove, options);\n      } // See if sorting is needed, update `length` and splice in new models.\n\n\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function (m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      } // Silently sort the collection if appropriate.\n\n\n      if (sort) this.sort({\n        silent: true\n      }); // Unless silenced, it's time to fire all appropriate add/sort/update events.\n\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n\n        if (sort || orderChanged) this.trigger('sort', this, options);\n\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      } // Return the added (or merged) model (or models).\n\n\n      return singular ? models[0] : models;\n    },\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function (models, options) {\n      options = options ? _.clone(options) : {};\n\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n\n      options.previousModels = this.models;\n\n      this._reset();\n\n      models = this.add(models, _.extend({\n        silent: true\n      }, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n    // Add a model to the end of the collection.\n    push: function (model, options) {\n      return this.add(model, _.extend({\n        at: this.length\n      }, options));\n    },\n    // Remove a model from the end of the collection.\n    pop: function (options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n    // Add a model to the beginning of the collection.\n    unshift: function (model, options) {\n      return this.add(model, _.extend({\n        at: 0\n      }, options));\n    },\n    // Remove a model from the beginning of the collection.\n    shift: function (options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n    // Slice out a sub-array of models from the collection.\n    slice: function () {\n      return slice.apply(this.models, arguments);\n    },\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function (obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] || obj.cid && this._byId[obj.cid];\n    },\n    // Returns `true` if the model is in the collection.\n    has: function (obj) {\n      return this.get(obj) != null;\n    },\n    // Get the model at the given index.\n    at: function (index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function (attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function (attrs) {\n      return this.where(attrs, true);\n    },\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function (options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this); // Run sort based on type of `comparator`.\n\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n    // Pluck an attribute from each model in the collection.\n    pluck: function (attr) {\n      return this.map(attr + '');\n    },\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function (options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var success = options.success;\n      var collection = this;\n\n      options.success = function (resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function (model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n\n      options.success = function (m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n\n      model.save(null, options);\n      return model;\n    },\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function (resp, options) {\n      return resp;\n    },\n    // Create a new collection with an identical list of models as this one.\n    clone: function () {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n    // Get an iterator of all models in this collection.\n    values: function () {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n    // Get an iterator of all model IDs in this collection.\n    keys: function () {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function () {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function () {\n      this.length = 0;\n      this.models = [];\n      this._byId = {};\n    },\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function (attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n    // Internal method called by both remove and set.\n    _removeModels: function (models, options) {\n      var removed = [];\n\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--; // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n\n        this._removeReference(model, options);\n      }\n\n      return removed;\n    },\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n    // Internal method to create a model's ties to a collection.\n    _addReference: function (model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function (model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function (event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n\n      this.trigger.apply(this, arguments);\n    }\n  }); // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n\n  /* global Symbol */\n\n\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  } // CollectionIterator\n  // ------------------\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n\n\n  var CollectionIterator = function (collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  }; // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n\n\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3; // All Iterators should themselves be Iterable.\n\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function () {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function () {\n    if (this._collection) {\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n\n        this._index++; // Construct a value depending on what kind of values should be iterated.\n\n        var value;\n\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes);\n\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else {\n            // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n\n        return {\n          value: value,\n          done: false\n        };\n      } // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n\n\n      this._collection = void 0;\n    }\n\n    return {\n      value: void 0,\n      done: true\n    };\n  }; // Backbone.View\n  // -------------\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n\n\n  var View = Backbone.View = function (options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n\n    _.extend(this, _.pick(options, viewOptions));\n\n    this._ensureElement();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regex to split keys for `delegate`.\n\n\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/; // List of view options to be set as properties.\n\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events']; // Set up all inheritable **Backbone.View** properties and methods.\n\n  _.extend(View.prototype, Events, {\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function (selector) {\n      return this.$el.find(selector);\n    },\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function () {\n      return this;\n    },\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function () {\n      this._removeElement();\n\n      this.stopListening();\n      return this;\n    },\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function () {\n      this.$el.remove();\n    },\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function (element) {\n      this.undelegateEvents();\n\n      this._setElement(element);\n\n      this.delegateEvents();\n      return this;\n    },\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function (el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function (events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n\n      return this;\n    },\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function (eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function () {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function (eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function (tagName) {\n      return document.createElement(tagName);\n    },\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function () {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function (attributes) {\n      this.$el.attr(attributes);\n    }\n  }); // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n\n\n  var addMethod = function (base, length, method, attribute) {\n    switch (length) {\n      case 1:\n        return function () {\n          return base[method](this[attribute]);\n        };\n\n      case 2:\n        return function (value) {\n          return base[method](this[attribute], value);\n        };\n\n      case 3:\n        return function (iteratee, context) {\n          return base[method](this[attribute], cb(iteratee, this), context);\n        };\n\n      case 4:\n        return function (iteratee, defaultVal, context) {\n          return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n        };\n\n      default:\n        return function () {\n          var args = slice.call(arguments);\n          args.unshift(this[attribute]);\n          return base[method].apply(base, args);\n        };\n    }\n  };\n\n  var addUnderscoreMethods = function (Class, base, methods, attribute) {\n    _.each(methods, function (length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  }; // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n\n\n  var cb = function (iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function (model) {\n      return model.get(iteratee);\n    };\n    return iteratee;\n  };\n\n  var modelMatcher = function (attrs) {\n    var matcher = _.matches(attrs);\n\n    return function (model) {\n      return matcher(model.attributes);\n    };\n  }; // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n\n\n  var collectionMethods = {\n    forEach: 3,\n    each: 3,\n    map: 3,\n    collect: 3,\n    reduce: 0,\n    foldl: 0,\n    inject: 0,\n    reduceRight: 0,\n    foldr: 0,\n    find: 3,\n    detect: 3,\n    filter: 3,\n    select: 3,\n    reject: 3,\n    every: 3,\n    all: 3,\n    some: 3,\n    any: 3,\n    include: 3,\n    includes: 3,\n    contains: 3,\n    invoke: 0,\n    max: 3,\n    min: 3,\n    toArray: 1,\n    size: 1,\n    first: 3,\n    head: 3,\n    take: 3,\n    initial: 3,\n    rest: 3,\n    tail: 3,\n    drop: 3,\n    last: 3,\n    without: 0,\n    difference: 0,\n    indexOf: 3,\n    shuffle: 1,\n    lastIndexOf: 3,\n    isEmpty: 1,\n    chain: 1,\n    sample: 3,\n    partition: 3,\n    groupBy: 3,\n    countBy: 3,\n    sortBy: 3,\n    indexBy: 3,\n    findIndex: 3,\n    findLastIndex: 3\n  }; // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n\n  var modelMethods = {\n    keys: 1,\n    values: 1,\n    pairs: 1,\n    invert: 1,\n    pick: 0,\n    omit: 0,\n    chain: 1,\n    isEmpty: 1\n  }; // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([[Collection, collectionMethods, 'models'], [Model, modelMethods, 'attributes']], function (config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function (obj) {\n      var mappings = _.reduce(_.functions(obj), function (memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  }); // Backbone.sync\n  // -------------\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n\n\n  Backbone.sync = function (method, model, options) {\n    var type = methodMap[method]; // Default options, unless specified.\n\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    }); // Default JSON-request options.\n\n\n    var params = {\n      type: type,\n      dataType: 'json'\n    }; // Ensure that we have a URL.\n\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    } // Ensure that we have the appropriate request data.\n\n\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    } // For older servers, emulate JSON by encoding the request into an HTML-form.\n\n\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {\n        model: params.data\n      } : {};\n    } // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n\n\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n\n      options.beforeSend = function (xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    } // Don't process data on a non-GET request.\n\n\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    } // Pass along `textStatus` and `errorThrown` from jQuery.\n\n\n    var error = options.error;\n\n    options.error = function (xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    }; // Make the request, allowing the user to override any Ajax options.\n\n\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  }; // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n\n\n  var methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n  }; // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n\n  Backbone.ajax = function () {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  }; // Backbone.Router\n  // ---------------\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n\n\n  var Router = Backbone.Router = function (options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n\n    this._bindRoutes();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n\n\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam = /(\\(\\?)?:\\w+/g;\n  var splatParam = /\\*\\w+/g;\n  var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g; // Set up all inheritable **Backbone.Router** properties and methods.\n\n  _.extend(Router.prototype, Events, {\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function () {},\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function () {},\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function (route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function (fragment) {\n        var args = router._extractParameters(route, fragment);\n\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function (callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function (fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function () {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n\n      var route,\n          routes = _.keys(this.routes);\n\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function (route) {\n      route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      }).replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function (route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function (param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n  }); // Backbone.History\n  // ----------------\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n\n\n  var History = Backbone.History = function () {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this); // Ensure that `History` can be used outside of the browser.\n\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  }; // Cached regex for stripping a leading hash/slash and trailing space.\n\n\n  var routeStripper = /^[#\\/]|\\s+$/g; // Cached regex for stripping leading and trailing slashes.\n\n  var rootStripper = /^\\/+|\\/+$/g; // Cached regex for stripping urls of hash.\n\n  var pathStripper = /#.*$/; // Has the history handling already been started?\n\n  History.started = false; // Set up all inheritable **Backbone.History** properties and methods.\n\n  _.extend(History.prototype, Events, {\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n    // Are we at the app root?\n    atRoot: function () {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n    // Does the pathname match the root?\n    matchRoot: function () {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function (fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function () {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function (window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n    // Get the pathname and search params, without the root.\n    getPath: function () {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function (fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n\n      return fragment.replace(routeStripper, '');\n    },\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function (options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true; // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n\n      this.options = _.extend({\n        root: '/'\n      }, this.options, options);\n      this.root = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState = !!this.options.pushState;\n      this._hasPushState = !!(this.history && this.history.pushState);\n      this._usePushState = this._wantsPushState && this._hasPushState;\n      this.fragment = this.getFragment(); // Normalize root to always include a leading and trailing slash.\n\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/'); // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n\n      if (this._wantsHashChange && this._wantsPushState) {\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath()); // Return immediately as browser will do redirect to new url\n\n          return true; // Or if we've started out with a hash-based route, but we're currently\n          // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {\n            replace: true\n          });\n        }\n      } // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n\n\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body; // Using `appendChild` will throw on IE < 9 if the document is not ready.\n\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      } // Add a cross-platform `addEventListener` shim for older browsers.\n\n\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      }; // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n\n\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function () {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      }; // Remove window listeners.\n\n\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      } // Clean up the iframe if necessary.\n\n\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      } // Some environments will throw when clearing an undefined interval.\n\n\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function (route, callback) {\n      this.handlers.unshift({\n        route: route,\n        callback: callback\n      });\n    },\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function (e) {\n      var current = this.getFragment(); // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function (fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function (handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function (fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {\n        trigger: !!options\n      }; // Normalize the fragment.\n\n      fragment = this.getFragment(fragment || ''); // Don't include a trailing slash on the root.\n\n      var rootPath = this.root;\n\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n\n      var url = rootPath + fragment; // Strip the fragment of the query and hash for matching.\n\n      fragment = fragment.replace(pathStripper, ''); // Decode for matching.\n\n      var decodedFragment = this.decodeFragment(fragment);\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment; // If pushState is available, we use it to set the fragment as a real URL.\n\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url); // If hash changes haven't been explicitly disabled, update the hash\n        // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow; // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        } // If you've told us that you explicitly don't want fallback hashchange-\n        // based history, then `navigate` becomes a page refresh.\n\n      } else {\n        return this.location.assign(url);\n      }\n\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function (location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n  }); // Create the default Backbone.history.\n\n\n  Backbone.history = new History(); // Helpers\n  // -------\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n\n  var extend = function (protoProps, staticProps) {\n    var parent = this;\n    var child; // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function () {\n        return parent.apply(this, arguments);\n      };\n    } // Add static properties to the constructor function, if supplied.\n\n\n    _.extend(child, parent, staticProps); // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n\n\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child; // Set a convenience property in case the parent's prototype is needed\n    // later.\n\n    child.__super__ = parent.prototype;\n    return child;\n  }; // Set up inheritance for the model, collection, router, view and history.\n\n\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend; // Throw an error when a URL is needed, and none is supplied.\n\n  var urlError = function () {\n    throw new Error('A \"url\" property or function must be specified');\n  }; // Wrap an optional error callback with a fallback error event.\n\n\n  var wrapError = function (model, options) {\n    var error = options.error;\n\n    options.error = function (resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/storymapper spreadsheet/my-app/node_modules/backbone/backbone.js"],"names":["factory","root","self","global","define","amd","_","$","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","Events","eventSplitter","_listening","eventsApi","iteratee","events","name","callback","opts","i","names","context","keys","length","test","split","on","_events","onApi","ctx","listening","listeners","_listeners","id","interop","listenTo","obj","_listenId","uniqueId","listeningTo","_listeningTo","Listening","error","tryCatchOn","options","handlers","count","push","off","offApi","stopListening","ids","isEmpty","cleanup","remaining","j","handler","_callback","once","onceMap","bind","listenToOnce","map","offer","apply","arguments","trigger","Math","max","args","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","call","listener","unbind","extend","Model","attributes","attrs","preinitialize","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","method","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","_isModel","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","isString","existing","_prepareModel","_addReference","orderChanged","some","m","index","_removeReference","previousModels","pop","unshift","shift","_byId","modelId","where","first","findWhere","Error","isFunction","sortBy","pluck","create","callbackOpts","values","CollectionIterator","ITERATOR_VALUES","ITERATOR_KEYS","entries","ITERATOR_KEYSVALUES","indexOf","_onModelEvent","event","prevId","$$iterator","Symbol","iterator","kind","_collection","_kind","_index","next","value","done","View","pick","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","find","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","undelegate","_createElement","document","createElement","className","_setAttributes","addMethod","attribute","cb","defaultVal","addUnderscoreMethods","Class","methods","each","instance","isObject","modelMatcher","matcher","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","chain","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","modelMethods","pairs","invert","omit","config","Base","mixin","mappings","functions","memo","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","rootPath","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","decodedFragment","title","_updateHash","assign","protoProps","staticProps","parent","child","__super__"],"mappings":"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","sourcesContent":["//     Backbone.js 1.4.0\n\n//     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n        .replace(optionalParam, '(?:$1)?')\n        .replace(namedParam, function(match, optional) {\n          return optional ? match : '([^/?]+)';\n        })\n        .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n"]},"metadata":{},"sourceType":"script"}