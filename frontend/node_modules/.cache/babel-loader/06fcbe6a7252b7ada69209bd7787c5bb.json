{"ast":null,"code":"import V from '../V/index.mjs';\nimport { isNumber, assign, nextFrame, isObject, cancelFrame, defaults, defaultsDeep, addClassNamePrefix, normalizeSides, isFunction, isPlainObject, getByPath, sortElements, isString, normalizeEvent, omit, merge, camelCase, cloneDeep, invoke, hashCode, filter as _filter, template, toArray, has } from '../util/index.mjs';\nimport { Rect, Point, toRad } from '../g/index.mjs';\nimport { View, views } from '../mvc/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ElementView } from './ElementView.mjs';\nimport { LinkView } from './LinkView.mjs';\nimport { Link } from './Link.mjs';\nimport { Cell } from './Cell.mjs';\nimport { Graph } from './Graph.mjs';\nimport * as highlighters from '../highlighters/index.mjs';\nimport * as linkAnchors from '../linkAnchors/index.mjs';\nimport * as connectionPoints from '../connectionPoints/index.mjs';\nimport * as anchors from '../anchors/index.mjs';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nconst sortingTypes = {\n  NONE: 'sorting-none',\n  APPROX: 'sorting-approximate',\n  EXACT: 'sorting-exact'\n};\nconst LayersNames = {\n  CELLS: 'cells',\n  BACK: 'back',\n  FRONT: 'front',\n  TOOLS: 'tools'\n};\nconst MOUNT_BATCH_SIZE = 1000;\nconst UPDATE_BATCH_SIZE = Infinity;\nconst MIN_PRIORITY = 9007199254740991; // Number.MAX_SAFE_INTEGER\n\nconst HighlightingTypes = CellView.Highlighting;\nconst defaultHighlighting = {\n  [HighlightingTypes.DEFAULT]: {\n    name: 'stroke',\n    options: {\n      padding: 3\n    }\n  },\n  [HighlightingTypes.MAGNET_AVAILABILITY]: {\n    name: 'addClass',\n    options: {\n      className: 'available-magnet'\n    }\n  },\n  [HighlightingTypes.ELEMENT_AVAILABILITY]: {\n    name: 'addClass',\n    options: {\n      className: 'available-cell'\n    }\n  }\n};\nexport const Paper = View.extend({\n  className: 'paper',\n  options: {\n    width: 800,\n    height: 600,\n    origin: {\n      x: 0,\n      y: 0\n    },\n    // x,y coordinates in top-left corner\n    gridSize: 1,\n    // Whether or not to draw the grid lines on the paper's DOM element.\n    // e.g drawGrid: true, drawGrid: { color: 'red', thickness: 2 }\n    drawGrid: false,\n    // Whether or not to draw the background on the paper's DOM element.\n    // e.g. background: { color: 'lightblue', image: '/paper-background.png', repeat: 'flip-xy' }\n    background: false,\n    perpendicularLinks: false,\n    elementView: ElementView,\n    linkView: LinkView,\n    snapLabels: false,\n    // false, true\n    snapLinks: false,\n    // false, true, { radius: value }\n    // When set to FALSE, an element may not have more than 1 link with the same source and target element.\n    multiLinks: true,\n    // For adding custom guard logic.\n    guard: function (evt, view) {\n      // FALSE means the event isn't guarded.\n      return false;\n    },\n    highlighting: defaultHighlighting,\n    // Prevent the default context menu from being displayed.\n    preventContextMenu: true,\n    // Prevent the default action for blank:pointer<action>.\n    preventDefaultBlankAction: true,\n    // Restrict the translation of elements by given bounding box.\n    // Option accepts a boolean:\n    //  true - the translation is restricted to the paper area\n    //  false - no restrictions\n    // A method:\n    // restrictTranslate: function(elementView) {\n    //     var parentId = elementView.model.get('parent');\n    //     return parentId && this.model.getCell(parentId).getBBox();\n    // },\n    // Or a bounding box:\n    // restrictTranslate: { x: 10, y: 10, width: 790, height: 590 }\n    restrictTranslate: false,\n    // Marks all available magnets with 'available-magnet' class name and all available cells with\n    // 'available-cell' class name. Marks them when dragging a link is started and unmark\n    // when the dragging is stopped.\n    markAvailable: false,\n    // Defines what link model is added to the graph after an user clicks on an active magnet.\n    // Value could be the Backbone.model or a function returning the Backbone.model\n    // defaultLink: function(elementView, magnet) { return condition ? new customLink1() : new customLink2() }\n    defaultLink: new Link(),\n    // A connector that is used by links with no connector defined on the model.\n    // e.g. { name: 'rounded', args: { radius: 5 }} or a function\n    defaultConnector: {\n      name: 'normal'\n    },\n    // A router that is used by links with no router defined on the model.\n    // e.g. { name: 'oneSide', args: { padding: 10 }} or a function\n    defaultRouter: {\n      name: 'normal'\n    },\n    defaultAnchor: {\n      name: 'center'\n    },\n    defaultLinkAnchor: {\n      name: 'connectionRatio'\n    },\n    defaultConnectionPoint: {\n      name: 'bbox'\n    },\n\n    /* CONNECTING */\n    connectionStrategy: null,\n    // Check whether to add a new link to the graph when user clicks on an a magnet.\n    validateMagnet: function (_cellView, magnet, _evt) {\n      return magnet.getAttribute('magnet') !== 'passive';\n    },\n    // Check whether to allow or disallow the link connection while an arrowhead end (source/target)\n    // being changed.\n    validateConnection: function (cellViewS, _magnetS, cellViewT, _magnetT, end, _linkView) {\n      return (end === 'target' ? cellViewT : cellViewS) instanceof ElementView;\n    },\n\n    /* EMBEDDING */\n    // Enables embedding. Re-parent the dragged element with elements under it and makes sure that\n    // all links and elements are visible taken the level of embedding into account.\n    embeddingMode: false,\n    // Check whether to allow or disallow the element embedding while an element being translated.\n    validateEmbedding: function (childView, parentView) {\n      // by default all elements can be in relation child-parent\n      return true;\n    },\n    // Determines the way how a cell finds a suitable parent when it's dragged over the paper.\n    // The cell with the highest z-index (visually on the top) will be chosen.\n    findParentBy: 'bbox',\n    // 'bbox'|'center'|'origin'|'corner'|'topRight'|'bottomLeft'\n    // If enabled only the element on the very front is taken into account for the embedding.\n    // If disabled the elements under the dragged view are tested one by one\n    // (from front to back) until a valid parent found.\n    frontParentOnly: true,\n    // Interactive flags. See online docs for the complete list of interactive flags.\n    interactive: {\n      labelMove: false\n    },\n    // When set to true the links can be pinned to the paper.\n    // i.e. link source/target can be a point e.g. link.get('source') ==> { x: 100, y: 100 };\n    linkPinning: true,\n    // Custom validation after an interaction with a link ends.\n    // Recognizes a function. If `false` is returned, the link is disallowed (removed or reverted)\n    // (linkView, paper) => boolean\n    allowLink: null,\n    // Allowed number of mousemove events after which the pointerclick event will be still triggered.\n    clickThreshold: 0,\n    // Number of required mousemove events before the first pointermove event will be triggered.\n    moveThreshold: 0,\n    // Number of required mousemove events before the a link is created out of the magnet.\n    // Or string `onleave` so the link is created when the pointer leaves the magnet\n    magnetThreshold: 0,\n    // Rendering Options\n    sorting: sortingTypes.EXACT,\n    frozen: false,\n    // no docs yet\n    onViewUpdate: function (view, flag, priority, opt, paper) {\n      if (flag & view.FLAG_INSERT || opt.mounting) return;\n      paper.requestConnectedLinksUpdate(view, priority, opt);\n    },\n    // no docs yet\n    onViewPostponed: function (view, flag, paper) {\n      return paper.forcePostponedViewUpdate(view, flag);\n    },\n    beforeRender: null,\n    // function(opt, paper) { },\n    afterRender: null,\n    // function(stats, opt, paper) {\n    viewport: null,\n    // Default namespaces\n    cellViewNamespace: null,\n    highlighterNamespace: highlighters,\n    anchorNamespace: anchors,\n    linkAnchorNamespace: linkAnchors,\n    connectionPointNamespace: connectionPoints\n  },\n  events: {\n    'dblclick': 'pointerdblclick',\n    'contextmenu': 'contextmenu',\n    'mousedown': 'pointerdown',\n    'touchstart': 'pointerdown',\n    'mouseover': 'mouseover',\n    'mouseout': 'mouseout',\n    'mouseenter': 'mouseenter',\n    'mouseleave': 'mouseleave',\n    'mousewheel': 'mousewheel',\n    'DOMMouseScroll': 'mousewheel',\n    'mouseenter .joint-cell': 'mouseenter',\n    'mouseleave .joint-cell': 'mouseleave',\n    'mouseenter .joint-tools': 'mouseenter',\n    'mouseleave .joint-tools': 'mouseleave',\n    'mousedown .joint-cell [event]': 'onevent',\n    // interaction with cell with `event` attribute set\n    'touchstart .joint-cell [event]': 'onevent',\n    'mousedown .joint-cell [magnet]': 'onmagnet',\n    // interaction with cell with `magnet` attribute set\n    'touchstart .joint-cell [magnet]': 'onmagnet',\n    'dblclick .joint-cell [magnet]': 'magnetpointerdblclick',\n    'contextmenu .joint-cell [magnet]': 'magnetcontextmenu',\n    'mousedown .joint-link .label': 'onlabel',\n    // interaction with link label\n    'touchstart .joint-link .label': 'onlabel',\n    'dragstart .joint-cell image': 'onImageDragStart' // firefox fix\n\n  },\n  documentEvents: {\n    'mousemove': 'pointermove',\n    'touchmove': 'pointermove',\n    'mouseup': 'pointerup',\n    'touchend': 'pointerup',\n    'touchcancel': 'pointerup'\n  },\n  svg: null,\n  viewport: null,\n  defs: null,\n  tools: null,\n  $background: null,\n  layers: null,\n  $grid: null,\n  $document: null,\n  _zPivots: null,\n  // For storing the current transformation matrix (CTM) of the paper's viewport.\n  _viewportMatrix: null,\n  // For verifying whether the CTM is up-to-date. The viewport transform attribute\n  // could have been manipulated directly.\n  _viewportTransformString: null,\n  // Updates data (priorities, unmounted views etc.)\n  _updates: null,\n  // Paper Layers\n  _layers: null,\n  SORT_DELAYING_BATCHES: ['add', 'to-front', 'to-back'],\n  UPDATE_DELAYING_BATCHES: ['translate'],\n  MIN_SCALE: 1e-6,\n  init: function () {\n    const {\n      options,\n      el\n    } = this;\n\n    if (!options.cellViewNamespace) {\n      /* global joint: true */\n      options.cellViewNamespace = typeof joint !== 'undefined' && has(joint, 'shapes') ? joint.shapes : null;\n      /* global joint: false */\n    }\n\n    const model = this.model = options.model || new Graph(); // Layers (SVGGroups)\n    // TODO: layer classes\n\n    this._layers = {};\n    this.setGrid(options.drawGrid);\n    this.cloneOptions();\n    this.render();\n    this.setDimensions();\n    this.startListening(); // Hash of all cell views.\n\n    this._views = {}; // z-index pivots\n\n    this._zPivots = {}; // Reference to the paper owner document\n\n    this.$document = $(el.ownerDocument); // Render existing cells in the graph\n\n    this.resetViews(model.attributes.cells.models); // Start the Rendering Loop\n\n    if (!this.isFrozen() && this.isAsync()) this.updateViewsAsync();\n  },\n  _resetUpdates: function () {\n    return this._updates = {\n      id: null,\n      priorities: [{}, {}, {}],\n      unmountedCids: [],\n      mountedCids: [],\n      unmounted: {},\n      mounted: {},\n      count: 0,\n      keyFrozen: false,\n      freezeKey: null,\n      sort: false\n    };\n  },\n  startListening: function () {\n    var model = this.model;\n    this.listenTo(model, 'add', this.onCellAdded).listenTo(model, 'remove', this.onCellRemoved).listenTo(model, 'change', this.onCellChange).listenTo(model, 'reset', this.onGraphReset).listenTo(model, 'sort', this.onGraphSort).listenTo(model, 'batch:stop', this.onGraphBatchStop);\n    this.on('cell:highlight', this.onCellHighlight).on('cell:unhighlight', this.onCellUnhighlight).on('scale translate', this.update);\n  },\n  onCellAdded: function (cell, _, opt) {\n    var position = opt.position;\n\n    if (this.isAsync() || !isNumber(position)) {\n      this.renderView(cell, opt);\n    } else {\n      if (opt.maxPosition === position) this.freeze({\n        key: 'addCells'\n      });\n      this.renderView(cell, opt);\n      if (position === 0) this.unfreeze({\n        key: 'addCells'\n      });\n    }\n  },\n  onCellRemoved: function (cell, _, opt) {\n    const view = this.findViewByModel(cell);\n    if (view) this.requestViewUpdate(view, view.FLAG_REMOVE, view.UPDATE_PRIORITY, opt);\n  },\n  onCellChange: function (cell, opt) {\n    if (cell === this.model.attributes.cells) return;\n\n    if (cell.hasChanged('z') && this.options.sorting === sortingTypes.APPROX) {\n      const view = this.findViewByModel(cell);\n      if (view) this.requestViewUpdate(view, view.FLAG_INSERT, view.UPDATE_PRIORITY, opt);\n    }\n  },\n  onGraphReset: function (collection, opt) {\n    this.removeZPivots();\n    this.resetViews(collection.models, opt);\n  },\n  onGraphSort: function () {\n    if (this.model.hasActiveBatch(this.SORT_DELAYING_BATCHES)) return;\n    this.sortViews();\n  },\n  onGraphBatchStop: function (data) {\n    if (this.isFrozen()) return;\n    var name = data && data.batchName;\n    var graph = this.model;\n\n    if (!this.isAsync()) {\n      var updateDelayingBatches = this.UPDATE_DELAYING_BATCHES;\n\n      if (updateDelayingBatches.includes(name) && !graph.hasActiveBatch(updateDelayingBatches)) {\n        this.updateViews(data);\n      }\n    }\n\n    var sortDelayingBatches = this.SORT_DELAYING_BATCHES;\n\n    if (sortDelayingBatches.includes(name) && !graph.hasActiveBatch(sortDelayingBatches)) {\n      this.sortViews();\n    }\n  },\n  cloneOptions: function () {\n    const {\n      options\n    } = this;\n    const {\n      defaultConnector,\n      defaultRouter,\n      defaultConnectionPoint,\n      defaultAnchor,\n      defaultLinkAnchor,\n      origin,\n      highlighting,\n      cellViewNamespace,\n      interactive\n    } = options; // Default cellView namespace for ES5\n\n    /* global joint: true */\n\n    if (!cellViewNamespace && typeof joint !== 'undefined' && has(joint, 'shapes')) {\n      options.cellViewNamespace = joint.shapes;\n    }\n    /* global joint: false */\n    // Here if a function was provided, we can not clone it, as this would result in loosing the function.\n    // If the default is used, the cloning is necessary in order to prevent modifying the options on prototype.\n\n\n    if (!isFunction(defaultConnector)) {\n      options.defaultConnector = cloneDeep(defaultConnector);\n    }\n\n    if (!isFunction(defaultRouter)) {\n      options.defaultRouter = cloneDeep(defaultRouter);\n    }\n\n    if (!isFunction(defaultConnectionPoint)) {\n      options.defaultConnectionPoint = cloneDeep(defaultConnectionPoint);\n    }\n\n    if (!isFunction(defaultAnchor)) {\n      options.defaultAnchor = cloneDeep(defaultAnchor);\n    }\n\n    if (!isFunction(defaultLinkAnchor)) {\n      options.defaultLinkAnchor = cloneDeep(defaultLinkAnchor);\n    }\n\n    if (isPlainObject(interactive)) {\n      options.interactive = assign({}, interactive);\n    }\n\n    if (isPlainObject(highlighting)) {\n      // Return the default highlighting options into the user specified options.\n      options.highlighting = defaultsDeep({}, highlighting, defaultHighlighting);\n    }\n\n    options.origin = assign({}, origin);\n  },\n  children: function () {\n    var ns = V.namespace;\n    return [{\n      namespaceURI: ns.xhtml,\n      tagName: 'div',\n      className: addClassNamePrefix('paper-background'),\n      selector: 'background'\n    }, {\n      namespaceURI: ns.xhtml,\n      tagName: 'div',\n      className: addClassNamePrefix('paper-grid'),\n      selector: 'grid'\n    }, {\n      namespaceURI: ns.svg,\n      tagName: 'svg',\n      attributes: {\n        'width': '100%',\n        'height': '100%',\n        'xmlns:xlink': ns.xlink\n      },\n      selector: 'svg',\n      children: [{\n        // Append `<defs>` element to the SVG document. This is useful for filters and gradients.\n        // It's desired to have the defs defined before the viewport (e.g. to make a PDF document pick up defs properly).\n        tagName: 'defs',\n        selector: 'defs'\n      }, {\n        tagName: 'g',\n        className: addClassNamePrefix('layers'),\n        selector: 'layers',\n        children: [{\n          tagName: 'g',\n          className: addClassNamePrefix('back-layer'),\n          selector: 'back'\n        }, {\n          tagName: 'g',\n          className: addClassNamePrefix('cells-layer viewport'),\n          selector: 'cells'\n        }, {\n          tagName: 'g',\n          className: addClassNamePrefix('front-layer'),\n          selector: 'front'\n        }, {\n          tagName: 'g',\n          className: addClassNamePrefix('tools-layer'),\n          selector: 'tools'\n        }]\n      }]\n    }];\n  },\n\n  getLayerNode(layerName) {\n    const {\n      _layers\n    } = this;\n    if (layerName in _layers) return _layers[layerName];\n    throw new Error(`dia.Paper: Unknown layer \"${layerName}\"`);\n  },\n\n  render: function () {\n    this.renderChildren();\n    const {\n      childNodes,\n      options\n    } = this;\n    const {\n      svg,\n      cells,\n      defs,\n      tools,\n      layers,\n      back,\n      front,\n      background,\n      grid\n    } = childNodes;\n    this.svg = svg;\n    this.defs = defs;\n    this.tools = tools;\n    this.cells = cells;\n    this.layers = layers;\n    this.$background = $(background);\n    this.$grid = $(grid);\n    assign(this._layers, {\n      [LayersNames.BACK]: back,\n      [LayersNames.CELLS]: cells,\n      [LayersNames.FRONT]: front,\n      [LayersNames.TOOLS]: tools\n    });\n    V.ensureId(svg); // backwards compatibility\n\n    this.viewport = cells;\n\n    if (options.background) {\n      this.drawBackground(options.background);\n    }\n\n    if (options.drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  update: function () {\n    if (this.options.drawGrid) {\n      this.drawGrid();\n    }\n\n    if (this._background) {\n      this.updateBackgroundImage(this._background);\n    }\n\n    return this;\n  },\n  matrix: function (ctm) {\n    var viewport = this.layers; // Getter:\n\n    if (ctm === undefined) {\n      var transformString = viewport.getAttribute('transform');\n\n      if ((this._viewportTransformString || null) === transformString) {\n        // It's ok to return the cached matrix. The transform attribute has not changed since\n        // the matrix was stored.\n        ctm = this._viewportMatrix;\n      } else {\n        // The viewport transform attribute has changed. Measure the matrix and cache again.\n        ctm = viewport.getCTM();\n        this._viewportMatrix = ctm;\n        this._viewportTransformString = transformString;\n      } // Clone the cached current transformation matrix.\n      // If no matrix previously stored the identity matrix is returned.\n\n\n      return V.createSVGMatrix(ctm);\n    } // Setter:\n\n\n    ctm = V.createSVGMatrix(ctm);\n    var ctmString = V.matrixToTransformString(ctm);\n    viewport.setAttribute('transform', ctmString);\n    this._viewportMatrix = ctm;\n    this._viewportTransformString = viewport.getAttribute('transform');\n    return this;\n  },\n  clientMatrix: function () {\n    return V.createSVGMatrix(this.cells.getScreenCTM());\n  },\n  requestConnectedLinksUpdate: function (view, priority, opt) {\n    if (view instanceof CellView) {\n      var model = view.model;\n      var links = this.model.getConnectedLinks(model);\n\n      for (var j = 0, n = links.length; j < n; j++) {\n        var link = links[j];\n        var linkView = this.findViewByModel(link);\n        if (!linkView) continue;\n        var flagLabels = ['UPDATE'];\n        if (link.getTargetCell() === model) flagLabels.push('TARGET');\n        if (link.getSourceCell() === model) flagLabels.push('SOURCE');\n        var nextPriority = Math.max(priority + 1, linkView.UPDATE_PRIORITY);\n        this.scheduleViewUpdate(linkView, linkView.getFlag(flagLabels), nextPriority, opt);\n      }\n    }\n  },\n  forcePostponedViewUpdate: function (view, flag) {\n    if (!view || !(view instanceof CellView)) return false;\n    var model = view.model;\n    if (model.isElement()) return false;\n\n    if ((flag & view.getFlag(['SOURCE', 'TARGET'])) === 0) {\n      // LinkView is waiting for the target or the source cellView to be rendered\n      // This can happen when the cells are not in the viewport.\n      var sourceFlag = 0;\n      var sourceView = this.findViewByModel(model.getSourceCell());\n\n      if (sourceView && !this.isViewMounted(sourceView)) {\n        sourceFlag = this.dumpView(sourceView);\n        view.updateEndMagnet('source');\n      }\n\n      var targetFlag = 0;\n      var targetView = this.findViewByModel(model.getTargetCell());\n\n      if (targetView && !this.isViewMounted(targetView)) {\n        targetFlag = this.dumpView(targetView);\n        view.updateEndMagnet('target');\n      }\n\n      if (sourceFlag === 0 && targetFlag === 0) {\n        // If leftover flag is 0, all view updates were done.\n        return !this.dumpView(view);\n      }\n    }\n\n    return false;\n  },\n  requestViewUpdate: function (view, flag, priority, opt) {\n    opt || (opt = {});\n    this.scheduleViewUpdate(view, flag, priority, opt);\n    var isAsync = this.isAsync();\n    if (this.isFrozen() || isAsync && opt.async !== false) return;\n    if (this.model.hasActiveBatch(this.UPDATE_DELAYING_BATCHES)) return;\n    var stats = this.updateViews(opt);\n    if (isAsync) this.notifyAfterRender(stats, opt);\n  },\n  scheduleViewUpdate: function (view, type, priority, opt) {\n    const {\n      _updates: updates,\n      options\n    } = this;\n    const {\n      FLAG_REMOVE,\n      FLAG_INSERT,\n      UPDATE_PRIORITY,\n      cid\n    } = view;\n    let priorityUpdates = updates.priorities[priority];\n    if (!priorityUpdates) priorityUpdates = updates.priorities[priority] = {}; // Move higher priority updates to this priority\n\n    if (priority > UPDATE_PRIORITY) {\n      // Not the default priority for this view. It's most likely a link view\n      // connected to another link view, which triggered the update.\n      // TODO: If there is an update scheduled with a lower priority already, we should\n      // change the requested priority to the lowest one. Does not seem to be critical\n      // right now, as it \"only\" results in multiple updates on the same view.\n      for (let i = priority - 1; i >= UPDATE_PRIORITY; i--) {\n        const prevPriorityUpdates = updates.priorities[i];\n        if (!prevPriorityUpdates || !(cid in prevPriorityUpdates)) continue;\n        priorityUpdates[cid] |= prevPriorityUpdates[cid];\n        delete prevPriorityUpdates[cid];\n      }\n    }\n\n    let currentType = priorityUpdates[cid] || 0; // Prevent cycling\n\n    if ((currentType & type) === type) return;\n    if (!currentType) updates.count++;\n\n    if (type & FLAG_REMOVE && currentType & FLAG_INSERT) {\n      // When a view is removed we need to remove the insert flag as this is a reinsert\n      priorityUpdates[cid] ^= FLAG_INSERT;\n    } else if (type & FLAG_INSERT && currentType & FLAG_REMOVE) {\n      // When a view is added we need to remove the remove flag as this is view was previously removed\n      priorityUpdates[cid] ^= FLAG_REMOVE;\n    }\n\n    priorityUpdates[cid] |= type;\n    const viewUpdateFn = options.onViewUpdate;\n    if (typeof viewUpdateFn === 'function') viewUpdateFn.call(this, view, type, priority, opt || {}, this);\n  },\n  dumpViewUpdate: function (view) {\n    if (!view) return 0;\n    var updates = this._updates;\n    var cid = view.cid;\n    var priorityUpdates = updates.priorities[view.UPDATE_PRIORITY];\n    var flag = this.registerMountedView(view) | priorityUpdates[cid];\n    delete priorityUpdates[cid];\n    return flag;\n  },\n  dumpView: function (view, opt) {\n    var flag = this.dumpViewUpdate(view);\n    if (!flag) return 0;\n    return this.updateView(view, flag, opt);\n  },\n  updateView: function (view, flag, opt) {\n    if (!view) return 0;\n    const {\n      FLAG_REMOVE,\n      FLAG_INSERT,\n      model\n    } = view;\n\n    if (view instanceof CellView) {\n      if (flag & FLAG_REMOVE) {\n        this.removeView(model);\n        return 0;\n      }\n\n      if (flag & FLAG_INSERT) {\n        this.insertView(view);\n        flag ^= FLAG_INSERT;\n      }\n    }\n\n    if (!flag) return 0;\n    return view.confirmUpdate(flag, opt || {});\n  },\n  requireView: function (model, opt) {\n    var view = this.findViewByModel(model);\n    if (!view) return null;\n    this.dumpView(view, opt);\n    return view;\n  },\n  registerUnmountedView: function (view) {\n    var cid = view.cid;\n    var updates = this._updates;\n    if (cid in updates.unmounted) return 0;\n    var flag = updates.unmounted[cid] |= view.FLAG_INSERT;\n    updates.unmountedCids.push(cid);\n    delete updates.mounted[cid];\n    return flag;\n  },\n  registerMountedView: function (view) {\n    var cid = view.cid;\n    var updates = this._updates;\n    if (cid in updates.mounted) return 0;\n    updates.mounted[cid] = true;\n    updates.mountedCids.push(cid);\n    var flag = updates.unmounted[cid] || 0;\n    delete updates.unmounted[cid];\n    return flag;\n  },\n  isViewMounted: function (view) {\n    if (!view) return false;\n    var cid = view.cid;\n    var updates = this._updates;\n    return cid in updates.mounted;\n  },\n  dumpViews: function (opt) {\n    var passingOpt = defaults({}, opt, {\n      viewport: null\n    });\n    this.checkViewport(passingOpt);\n    this.updateViews(passingOpt);\n  },\n  // Synchronous views update\n  updateViews: function (opt) {\n    this.notifyBeforeRender(opt);\n    let batchStats;\n    let updateCount = 0;\n    let batchCount = 0;\n    let priority = MIN_PRIORITY;\n\n    do {\n      batchCount++;\n      batchStats = this.updateViewsBatch(opt);\n      updateCount += batchStats.updated;\n      priority = Math.min(batchStats.priority, priority);\n    } while (!batchStats.empty);\n\n    const stats = {\n      updated: updateCount,\n      batches: batchCount,\n      priority\n    };\n    this.notifyAfterRender(stats, opt);\n    return stats;\n  },\n  hasScheduledUpdates: function () {\n    const priorities = this._updates.priorities;\n    const priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n\n    let i = priorityIndexes.length;\n\n    while (i > 0 && i--) {\n      // a faster way how to check if an object is empty\n      for (let _key in priorities[priorityIndexes[i]]) return true;\n    }\n\n    return false;\n  },\n  updateViewsAsync: function (opt, data) {\n    opt || (opt = {});\n    data || (data = {\n      processed: 0,\n      priority: MIN_PRIORITY\n    });\n    var updates = this._updates;\n    var id = updates.id;\n\n    if (id) {\n      cancelFrame(id);\n\n      if (data.processed === 0 && this.hasScheduledUpdates()) {\n        this.notifyBeforeRender(opt);\n      }\n\n      var stats = this.updateViewsBatch(opt);\n      var passingOpt = defaults({}, opt, {\n        mountBatchSize: MOUNT_BATCH_SIZE - stats.mounted,\n        unmountBatchSize: MOUNT_BATCH_SIZE - stats.unmounted\n      });\n      var checkStats = this.checkViewport(passingOpt);\n      var unmountCount = checkStats.unmounted;\n      var mountCount = checkStats.mounted;\n      var processed = data.processed;\n      var total = updates.count;\n\n      if (stats.updated > 0) {\n        // Some updates have been just processed\n        processed += stats.updated + stats.unmounted;\n        stats.processed = processed;\n        data.priority = Math.min(stats.priority, data.priority);\n\n        if (stats.empty && mountCount === 0) {\n          stats.unmounted += unmountCount;\n          stats.mounted += mountCount;\n          stats.priority = data.priority;\n          this.notifyAfterRender(stats, opt);\n          data.processed = 0;\n          updates.count = 0;\n        } else {\n          data.processed = processed;\n        }\n      } // Progress callback\n\n\n      var progressFn = opt.progress;\n\n      if (total && typeof progressFn === 'function') {\n        progressFn.call(this, stats.empty, processed, total, stats, this);\n      } // The current frame could have been canceled in a callback\n\n\n      if (updates.id !== id) return;\n    }\n\n    updates.id = nextFrame(this.updateViewsAsync, this, opt, data);\n  },\n  notifyBeforeRender: function (opt = {}) {\n    let beforeFn = opt.beforeRender;\n\n    if (typeof beforeFn !== 'function') {\n      beforeFn = this.options.beforeRender;\n      if (typeof beforeFn !== 'function') return;\n    }\n\n    beforeFn.call(this, opt, this);\n  },\n  notifyAfterRender: function (stats, opt = {}) {\n    let afterFn = opt.afterRender;\n\n    if (typeof afterFn !== 'function') {\n      afterFn = this.options.afterRender;\n    }\n\n    if (typeof afterFn === 'function') {\n      afterFn.call(this, stats, opt, this);\n    }\n\n    this.trigger('render:done', stats, opt);\n  },\n  updateViewsBatch: function (opt) {\n    opt || (opt = {});\n    var batchSize = opt.batchSize || UPDATE_BATCH_SIZE;\n    var updates = this._updates;\n    var updateCount = 0;\n    var postponeCount = 0;\n    var unmountCount = 0;\n    var mountCount = 0;\n    var maxPriority = MIN_PRIORITY;\n    var empty = true;\n    var options = this.options;\n    var priorities = updates.priorities;\n    var viewportFn = 'viewport' in opt ? opt.viewport : options.viewport;\n    if (typeof viewportFn !== 'function') viewportFn = null;\n    var postponeViewFn = options.onViewPostponed;\n    if (typeof postponeViewFn !== 'function') postponeViewFn = null;\n    var priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n\n    main: for (var i = 0, n = priorityIndexes.length; i < n; i++) {\n      var priority = priorityIndexes[i];\n      var priorityUpdates = priorities[priority];\n\n      for (var cid in priorityUpdates) {\n        if (updateCount >= batchSize) {\n          empty = false;\n          break main;\n        }\n\n        var view = views[cid];\n\n        if (!view) {\n          // This should not occur\n          delete priorityUpdates[cid];\n          continue;\n        }\n\n        var currentFlag = priorityUpdates[cid];\n\n        if ((currentFlag & view.FLAG_REMOVE) === 0) {\n          // We should never check a view for viewport if we are about to remove the view\n          var isDetached = (cid in updates.unmounted);\n\n          if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, !isDetached, this)) {\n            // Unmount View\n            if (!isDetached) {\n              this.registerUnmountedView(view);\n              view.unmount();\n            }\n\n            updates.unmounted[cid] |= currentFlag;\n            delete priorityUpdates[cid];\n            unmountCount++;\n            continue;\n          } // Mount View\n\n\n          if (isDetached) {\n            currentFlag |= view.FLAG_INSERT;\n            mountCount++;\n          }\n\n          currentFlag |= this.registerMountedView(view);\n        }\n\n        var leftoverFlag = this.updateView(view, currentFlag, opt);\n\n        if (leftoverFlag > 0) {\n          // View update has not finished completely\n          priorityUpdates[cid] = leftoverFlag;\n\n          if (!postponeViewFn || !postponeViewFn.call(this, view, leftoverFlag, this) || priorityUpdates[cid]) {\n            postponeCount++;\n            empty = false;\n            continue;\n          }\n        }\n\n        if (maxPriority > priority) maxPriority = priority;\n        updateCount++;\n        delete priorityUpdates[cid];\n      }\n    }\n\n    return {\n      priority: maxPriority,\n      updated: updateCount,\n      postponed: postponeCount,\n      unmounted: unmountCount,\n      mounted: mountCount,\n      empty: empty\n    };\n  },\n  getUnmountedViews: function () {\n    const updates = this._updates;\n    const unmountedCids = Object.keys(updates.unmounted);\n    const n = unmountedCids.length;\n    const unmountedViews = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      unmountedViews[i] = views[unmountedCids[i]];\n    }\n\n    return unmountedViews;\n  },\n  getMountedViews: function () {\n    const updates = this._updates;\n    const mountedCids = Object.keys(updates.mounted);\n    const n = mountedCids.length;\n    const mountedViews = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      mountedViews[i] = views[mountedCids[i]];\n    }\n\n    return mountedViews;\n  },\n  checkUnmountedViews: function (viewportFn, opt) {\n    opt || (opt = {});\n    var mountCount = 0;\n    if (typeof viewportFn !== 'function') viewportFn = null;\n    var batchSize = 'mountBatchSize' in opt ? opt.mountBatchSize : Infinity;\n    var updates = this._updates;\n    var unmountedCids = updates.unmountedCids;\n    var unmounted = updates.unmounted;\n\n    for (var i = 0, n = Math.min(unmountedCids.length, batchSize); i < n; i++) {\n      var cid = unmountedCids[i];\n      if (!(cid in unmounted)) continue;\n      var view = views[cid];\n      if (!view) continue;\n\n      if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, false, this)) {\n        // Push at the end of all unmounted ids, so this can be check later again\n        unmountedCids.push(cid);\n        continue;\n      }\n\n      mountCount++;\n      var flag = this.registerMountedView(view);\n      if (flag) this.scheduleViewUpdate(view, flag, view.UPDATE_PRIORITY, {\n        mounting: true\n      });\n    } // Get rid of views, that have been mounted\n\n\n    unmountedCids.splice(0, i);\n    return mountCount;\n  },\n  checkMountedViews: function (viewportFn, opt) {\n    opt || (opt = {});\n    var unmountCount = 0;\n    if (typeof viewportFn !== 'function') return unmountCount;\n    var batchSize = 'unmountBatchSize' in opt ? opt.unmountBatchSize : Infinity;\n    var updates = this._updates;\n    var mountedCids = updates.mountedCids;\n    var mounted = updates.mounted;\n\n    for (var i = 0, n = Math.min(mountedCids.length, batchSize); i < n; i++) {\n      var cid = mountedCids[i];\n      if (!(cid in mounted)) continue;\n      var view = views[cid];\n      if (!view) continue;\n\n      if (!view.DETACHABLE || viewportFn.call(this, view, true, this)) {\n        // Push at the end of all mounted ids, so this can be check later again\n        mountedCids.push(cid);\n        continue;\n      }\n\n      unmountCount++;\n      var flag = this.registerUnmountedView(view);\n      if (flag) view.unmount();\n    } // Get rid of views, that have been unmounted\n\n\n    mountedCids.splice(0, i);\n    return unmountCount;\n  },\n  checkViewport: function (opt) {\n    var passingOpt = defaults({}, opt, {\n      mountBatchSize: Infinity,\n      unmountBatchSize: Infinity\n    });\n    var viewportFn = 'viewport' in passingOpt ? passingOpt.viewport : this.options.viewport;\n    var unmountedCount = this.checkMountedViews(viewportFn, passingOpt);\n\n    if (unmountedCount > 0) {\n      // Do not check views, that have been just unmounted and pushed at the end of the cids array\n      var unmountedCids = this._updates.unmountedCids;\n      passingOpt.mountBatchSize = Math.min(unmountedCids.length - unmountedCount, passingOpt.mountBatchSize);\n    }\n\n    var mountedCount = this.checkUnmountedViews(viewportFn, passingOpt);\n    return {\n      mounted: mountedCount,\n      unmounted: unmountedCount\n    };\n  },\n  freeze: function (opt) {\n    opt || (opt = {});\n    var updates = this._updates;\n    var key = opt.key;\n    var isFrozen = this.options.frozen;\n    var freezeKey = updates.freezeKey;\n\n    if (key && key !== freezeKey) {\n      // key passed, but the paper is already freezed with another key\n      if (isFrozen && freezeKey) return;\n      updates.freezeKey = key;\n      updates.keyFrozen = isFrozen;\n    }\n\n    this.options.frozen = true;\n    var id = updates.id;\n    updates.id = null;\n    if (this.isAsync() && id) cancelFrame(id);\n  },\n  unfreeze: function (opt) {\n    opt || (opt = {});\n    var updates = this._updates;\n    var key = opt.key;\n    var freezeKey = updates.freezeKey; // key passed, but the paper is already freezed with another key\n\n    if (key && freezeKey && key !== freezeKey) return;\n    updates.freezeKey = null; // key passed, but the paper is already freezed\n\n    if (key && key === freezeKey && updates.keyFrozen) return;\n\n    if (this.isAsync()) {\n      this.freeze();\n      this.updateViewsAsync(opt);\n    } else {\n      this.updateViews(opt);\n    }\n\n    this.options.frozen = updates.keyFrozen = false;\n\n    if (updates.sort) {\n      this.sortViews();\n      updates.sort = false;\n    }\n  },\n  isAsync: function () {\n    return !!this.options.async;\n  },\n  isFrozen: function () {\n    return !!this.options.frozen;\n  },\n  isExactSorting: function () {\n    return this.options.sorting === sortingTypes.EXACT;\n  },\n  onRemove: function () {\n    this.freeze(); //clean up all DOM elements/views to prevent memory leaks\n\n    this.removeViews();\n  },\n  getComputedSize: function () {\n    var options = this.options;\n    var w = options.width;\n    var h = options.height;\n    if (!isNumber(w)) w = this.el.clientWidth;\n    if (!isNumber(h)) h = this.el.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  },\n  setDimensions: function (width, height) {\n    var options = this.options;\n    var w = width === undefined ? options.width : width;\n    var h = height === undefined ? options.height : height;\n    this.options.width = w;\n    this.options.height = h;\n    if (isNumber(w)) w = Math.round(w);\n    if (isNumber(h)) h = Math.round(h);\n    this.$el.css({\n      width: w === null ? '' : w,\n      height: h === null ? '' : h\n    });\n    var computedSize = this.getComputedSize();\n    this.trigger('resize', computedSize.width, computedSize.height);\n  },\n  setOrigin: function (ox, oy) {\n    return this.translate(ox || 0, oy || 0, {\n      absolute: true\n    });\n  },\n  // Expand/shrink the paper to fit the content. Snap the width/height to the grid\n  // defined in `gridWidth`, `gridHeight`. `padding` adds to the resulting width/height of the paper.\n  // When options { fitNegative: true } it also translates the viewport in order to make all\n  // the content visible.\n  fitToContent: function (gridWidth, gridHeight, padding, opt) {\n    // alternatively function(opt)\n    if (isObject(gridWidth)) {\n      // first parameter is an option object\n      opt = gridWidth;\n      gridWidth = opt.gridWidth || 1;\n      gridHeight = opt.gridHeight || 1;\n      padding = opt.padding || 0;\n    } else {\n      opt || (opt = {});\n      gridWidth = gridWidth || 1;\n      gridHeight = gridHeight || 1;\n      padding = padding || 0;\n    } // Calculate the paper size to accomodate all the graph's elements.\n\n\n    padding = normalizeSides(padding);\n    var area = 'contentArea' in opt ? new Rect(opt.contentArea) : this.getContentArea(opt);\n    var currentScale = this.scale();\n    var currentTranslate = this.translate();\n    var sx = currentScale.sx;\n    var sy = currentScale.sy;\n    area.x *= sx;\n    area.y *= sy;\n    area.width *= sx;\n    area.height *= sy;\n    var calcWidth = Math.max(Math.ceil((area.width + area.x) / gridWidth), 1) * gridWidth;\n    var calcHeight = Math.max(Math.ceil((area.height + area.y) / gridHeight), 1) * gridHeight;\n    var tx = 0;\n    var ty = 0;\n\n    if (opt.allowNewOrigin == 'negative' && area.x < 0 || opt.allowNewOrigin == 'positive' && area.x >= 0 || opt.allowNewOrigin == 'any') {\n      tx = Math.ceil(-area.x / gridWidth) * gridWidth;\n      tx += padding.left;\n      calcWidth += tx;\n    }\n\n    if (opt.allowNewOrigin == 'negative' && area.y < 0 || opt.allowNewOrigin == 'positive' && area.y >= 0 || opt.allowNewOrigin == 'any') {\n      ty = Math.ceil(-area.y / gridHeight) * gridHeight;\n      ty += padding.top;\n      calcHeight += ty;\n    }\n\n    calcWidth += padding.right;\n    calcHeight += padding.bottom; // Make sure the resulting width and height are greater than minimum.\n\n    calcWidth = Math.max(calcWidth, opt.minWidth || 0);\n    calcHeight = Math.max(calcHeight, opt.minHeight || 0); // Make sure the resulting width and height are lesser than maximum.\n\n    calcWidth = Math.min(calcWidth, opt.maxWidth || Number.MAX_VALUE);\n    calcHeight = Math.min(calcHeight, opt.maxHeight || Number.MAX_VALUE);\n    var computedSize = this.getComputedSize();\n    var dimensionChange = calcWidth != computedSize.width || calcHeight != computedSize.height;\n    var originChange = tx != currentTranslate.tx || ty != currentTranslate.ty; // Change the dimensions only if there is a size discrepency or an origin change\n\n    if (originChange) {\n      this.translate(tx, ty);\n    }\n\n    if (dimensionChange) {\n      this.setDimensions(calcWidth, calcHeight);\n    }\n\n    return new Rect(-tx / sx, -ty / sy, calcWidth / sx, calcHeight / sy);\n  },\n  scaleContentToFit: function (opt) {\n    opt || (opt = {});\n    var contentBBox, contentLocalOrigin;\n\n    if ('contentArea' in opt) {\n      var contentArea = opt.contentArea;\n      contentBBox = this.localToPaperRect(contentArea);\n      contentLocalOrigin = new Point(contentArea);\n    } else {\n      contentBBox = this.getContentBBox(opt);\n      contentLocalOrigin = this.paperToLocalPoint(contentBBox);\n    }\n\n    if (!contentBBox.width || !contentBBox.height) return;\n    defaults(opt, {\n      padding: 0,\n      preserveAspectRatio: true,\n      scaleGrid: null,\n      minScale: 0,\n      maxScale: Number.MAX_VALUE //minScaleX\n      //minScaleY\n      //maxScaleX\n      //maxScaleY\n      //fittingBBox\n\n    });\n    var padding = normalizeSides(opt.padding);\n    var minScaleX = opt.minScaleX || opt.minScale;\n    var maxScaleX = opt.maxScaleX || opt.maxScale;\n    var minScaleY = opt.minScaleY || opt.minScale;\n    var maxScaleY = opt.maxScaleY || opt.maxScale;\n    var fittingBBox;\n\n    if (opt.fittingBBox) {\n      fittingBBox = opt.fittingBBox;\n    } else {\n      var currentTranslate = this.translate();\n      var computedSize = this.getComputedSize();\n      fittingBBox = {\n        x: currentTranslate.tx,\n        y: currentTranslate.ty,\n        width: computedSize.width,\n        height: computedSize.height\n      };\n    }\n\n    fittingBBox = new Rect(fittingBBox).moveAndExpand({\n      x: padding.left,\n      y: padding.top,\n      width: -padding.left - padding.right,\n      height: -padding.top - padding.bottom\n    });\n    var currentScale = this.scale();\n    var newSx = fittingBBox.width / contentBBox.width * currentScale.sx;\n    var newSy = fittingBBox.height / contentBBox.height * currentScale.sy;\n\n    if (opt.preserveAspectRatio) {\n      newSx = newSy = Math.min(newSx, newSy);\n    } // snap scale to a grid\n\n\n    if (opt.scaleGrid) {\n      var gridSize = opt.scaleGrid;\n      newSx = gridSize * Math.floor(newSx / gridSize);\n      newSy = gridSize * Math.floor(newSy / gridSize);\n    } // scale min/max boundaries\n\n\n    newSx = Math.min(maxScaleX, Math.max(minScaleX, newSx));\n    newSy = Math.min(maxScaleY, Math.max(minScaleY, newSy));\n    var origin = this.options.origin;\n    var newOx = fittingBBox.x - contentLocalOrigin.x * newSx - origin.x;\n    var newOy = fittingBBox.y - contentLocalOrigin.y * newSy - origin.y;\n    this.scale(newSx, newSy);\n    this.translate(newOx, newOy);\n  },\n  // Return the dimensions of the content area in local units (without transformations).\n  getContentArea: function (opt) {\n    if (opt && opt.useModelGeometry) {\n      return this.model.getBBox() || new Rect();\n    }\n\n    return V(this.cells).getBBox();\n  },\n  // Return the dimensions of the content bbox in the paper units (as it appears on screen).\n  getContentBBox: function (opt) {\n    return this.localToPaperRect(this.getContentArea(opt));\n  },\n  // Returns a geometry rectangle representing the entire\n  // paper area (coordinates from the left paper border to the right one\n  // and the top border to the bottom one).\n  getArea: function () {\n    return this.paperToLocalRect(this.getComputedSize());\n  },\n  getRestrictedArea: function (...args) {\n    const {\n      restrictTranslate\n    } = this.options;\n    let restrictedArea;\n\n    if (isFunction(restrictTranslate)) {\n      // A method returning a bounding box\n      restrictedArea = restrictTranslate.apply(this, args);\n    } else if (restrictTranslate === true) {\n      // The paper area\n      restrictedArea = this.getArea();\n    } else if (!restrictTranslate) {\n      // falsy value\n      restrictedArea = null;\n    } else {\n      // any other value\n      restrictedArea = new Rect(restrictTranslate);\n    }\n\n    return restrictedArea;\n  },\n  createViewForModel: function (cell) {\n    // A class taken from the paper options.\n    var optionalViewClass; // A default basic class (either dia.ElementView or dia.LinkView)\n\n    var defaultViewClass; // A special class defined for this model in the corresponding namespace.\n    // e.g. joint.shapes.basic.Rect searches for joint.shapes.basic.RectView\n\n    var namespace = this.options.cellViewNamespace;\n    var type = cell.get('type') + 'View';\n    var namespaceViewClass = getByPath(namespace, type, '.');\n\n    if (cell.isLink()) {\n      optionalViewClass = this.options.linkView;\n      defaultViewClass = LinkView;\n    } else {\n      optionalViewClass = this.options.elementView;\n      defaultViewClass = ElementView;\n    } // a) the paper options view is a class (deprecated)\n    //  1. search the namespace for a view\n    //  2. if no view was found, use view from the paper options\n    // b) the paper options view is a function\n    //  1. call the function from the paper options\n    //  2. if no view was return, search the namespace for a view\n    //  3. if no view was found, use the default\n\n\n    var ViewClass = optionalViewClass.prototype instanceof Backbone.View ? namespaceViewClass || optionalViewClass : optionalViewClass.call(this, cell) || namespaceViewClass || defaultViewClass;\n    return new ViewClass({\n      model: cell,\n      interactive: this.options.interactive\n    });\n  },\n  removeView: function (cell) {\n    const {\n      id\n    } = cell;\n    const {\n      _views,\n      _updates\n    } = this;\n    const view = _views[id];\n\n    if (view) {\n      var {\n        cid\n      } = view;\n      const {\n        mounted,\n        unmounted\n      } = _updates;\n      view.remove();\n      delete _views[id];\n      delete mounted[cid];\n      delete unmounted[cid];\n    }\n\n    return view;\n  },\n  renderView: function (cell, opt) {\n    var id = cell.id;\n    var views = this._views;\n    var view, flag;\n\n    if (id in views) {\n      view = views[id];\n      flag = view.FLAG_INSERT;\n    } else {\n      view = views[cell.id] = this.createViewForModel(cell);\n      view.paper = this;\n      flag = this.registerUnmountedView(view) | view.getFlag(view.initFlag);\n    }\n\n    this.requestViewUpdate(view, flag, view.UPDATE_PRIORITY, opt);\n    return view;\n  },\n  onImageDragStart: function () {\n    // This is the only way to prevent image dragging in Firefox that works.\n    // Setting -moz-user-select: none, draggable=\"false\" attribute or user-drag: none didn't help.\n    return false;\n  },\n  resetViews: function (cells, opt) {\n    opt || (opt = {});\n    cells || (cells = []);\n\n    this._resetUpdates(); // clearing views removes any event listeners\n\n\n    this.removeViews();\n    this.freeze({\n      key: 'reset'\n    });\n\n    for (var i = 0, n = cells.length; i < n; i++) {\n      this.renderView(cells[i], opt);\n    }\n\n    this.unfreeze({\n      key: 'reset'\n    });\n    this.sortViews();\n  },\n  removeViews: function () {\n    invoke(this._views, 'remove');\n    this._views = {};\n  },\n  sortViews: function () {\n    if (!this.isExactSorting()) {\n      // noop\n      return;\n    }\n\n    if (this.isFrozen()) {\n      // sort views once unfrozen\n      this._updates.sort = true;\n      return;\n    }\n\n    this.sortViewsExact();\n  },\n  sortViewsExact: function () {\n    // Run insertion sort algorithm in order to efficiently sort DOM elements according to their\n    // associated model `z` attribute.\n    var $cells = $(this.cells).children('[model-id]');\n    var cells = this.model.get('cells');\n    sortElements($cells, function (a, b) {\n      var cellA = cells.get(a.getAttribute('model-id'));\n      var cellB = cells.get(b.getAttribute('model-id'));\n      var zA = cellA.attributes.z || 0;\n      var zB = cellB.attributes.z || 0;\n      return zA === zB ? 0 : zA < zB ? -1 : 1;\n    });\n  },\n  insertView: function (view) {\n    var layer = this.cells;\n\n    switch (this.options.sorting) {\n      case sortingTypes.APPROX:\n        var z = view.model.get('z');\n        var pivot = this.addZPivot(z);\n        layer.insertBefore(view.el, pivot);\n        break;\n\n      case sortingTypes.EXACT:\n      default:\n        layer.appendChild(view.el);\n        break;\n    }\n  },\n  addZPivot: function (z) {\n    z = +z;\n    z || (z = 0);\n    var pivots = this._zPivots;\n    var pivot = pivots[z];\n    if (pivot) return pivot;\n    pivot = pivots[z] = document.createComment('z-index:' + (z + 1));\n    var neighborZ = -Infinity;\n\n    for (var currentZ in pivots) {\n      currentZ = +currentZ;\n\n      if (currentZ < z && currentZ > neighborZ) {\n        neighborZ = currentZ;\n        if (neighborZ === z - 1) continue;\n      }\n    }\n\n    var layer = this.cells;\n\n    if (neighborZ !== -Infinity) {\n      var neighborPivot = pivots[neighborZ]; // Insert After\n\n      layer.insertBefore(pivot, neighborPivot.nextSibling);\n    } else {\n      // First Child\n      layer.insertBefore(pivot, layer.firstChild);\n    }\n\n    return pivot;\n  },\n  removeZPivots: function () {\n    var {\n      _zPivots: pivots,\n      viewport\n    } = this;\n\n    for (var z in pivots) viewport.removeChild(pivots[z]);\n\n    this._zPivots = {};\n  },\n  scale: function (sx, sy, ox, oy) {\n    // getter\n    if (sx === undefined) {\n      return V.matrixToScale(this.matrix());\n    } // setter\n\n\n    if (sy === undefined) {\n      sy = sx;\n    }\n\n    if (ox === undefined) {\n      ox = 0;\n      oy = 0;\n    }\n\n    var translate = this.translate();\n\n    if (ox || oy || translate.tx || translate.ty) {\n      var newTx = translate.tx - ox * (sx - 1);\n      var newTy = translate.ty - oy * (sy - 1);\n      this.translate(newTx, newTy);\n    }\n\n    sx = Math.max(sx || 0, this.MIN_SCALE);\n    sy = Math.max(sy || 0, this.MIN_SCALE);\n    var ctm = this.matrix();\n    ctm.a = sx;\n    ctm.d = sy;\n    this.matrix(ctm);\n    this.trigger('scale', sx, sy, ox, oy);\n    return this;\n  },\n  // Experimental - do not use in production.\n  rotate: function (angle, cx, cy) {\n    // getter\n    if (angle === undefined) {\n      return V.matrixToRotate(this.matrix());\n    } // setter\n    // If the origin is not set explicitely, rotate around the center. Note that\n    // we must use the plain bounding box (`this.el.getBBox()` instead of the one that gives us\n    // the real bounding box (`bbox()`) including transformations).\n\n\n    if (cx === undefined) {\n      var bbox = this.cells.getBBox();\n      cx = bbox.width / 2;\n      cy = bbox.height / 2;\n    }\n\n    var ctm = this.matrix().translate(cx, cy).rotate(angle).translate(-cx, -cy);\n    this.matrix(ctm);\n    return this;\n  },\n  translate: function (tx, ty) {\n    // getter\n    if (tx === undefined) {\n      return V.matrixToTranslate(this.matrix());\n    } // setter\n\n\n    var ctm = this.matrix();\n    ctm.e = tx || 0;\n    ctm.f = ty || 0;\n    this.matrix(ctm);\n    var newTranslate = this.translate();\n    var origin = this.options.origin;\n    origin.x = newTranslate.tx;\n    origin.y = newTranslate.ty;\n    this.trigger('translate', newTranslate.tx, newTranslate.ty);\n\n    if (this.options.drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  // Find the first view climbing up the DOM tree starting at element `el`. Note that `el` can also\n  // be a selector or a jQuery object.\n  findView: function ($el) {\n    var el = isString($el) ? this.cells.querySelector($el) : $el instanceof $ ? $el[0] : $el;\n    var id = this.findAttribute('model-id', el);\n    if (id) return this._views[id];\n    return undefined;\n  },\n  // Find a view for a model `cell`. `cell` can also be a string or number representing a model `id`.\n  findViewByModel: function (cell) {\n    var id = isString(cell) || isNumber(cell) ? cell : cell && cell.id;\n    return this._views[id];\n  },\n  // Find all views at given point\n  findViewsFromPoint: function (p) {\n    p = new Point(p);\n    var views = this.model.getElements().map(this.findViewByModel, this);\n    return views.filter(function (view) {\n      return view && view.vel.getBBox({\n        target: this.cells\n      }).containsPoint(p);\n    }, this);\n  },\n  // Find all views in given area\n  findViewsInArea: function (rect, opt) {\n    opt = defaults(opt || {}, {\n      strict: false\n    });\n    rect = new Rect(rect);\n    var views = this.model.getElements().map(this.findViewByModel, this);\n    var method = opt.strict ? 'containsRect' : 'intersect';\n    return views.filter(function (view) {\n      return view && rect[method](view.vel.getBBox({\n        target: this.cells\n      }));\n    }, this);\n  },\n  removeTools: function () {\n    this.dispatchToolsEvent('remove');\n    return this;\n  },\n  hideTools: function () {\n    this.dispatchToolsEvent('hide');\n    return this;\n  },\n  showTools: function () {\n    this.dispatchToolsEvent('show');\n    return this;\n  },\n  dispatchToolsEvent: function (event, ...args) {\n    if (typeof event !== 'string') return;\n    this.trigger('tools:event', event, ...args);\n  },\n  getModelById: function (id) {\n    return this.model.getCell(id);\n  },\n  snapToGrid: function (x, y) {\n    // Convert global coordinates to the local ones of the `viewport`. Otherwise,\n    // improper transformation would be applied when the viewport gets transformed (scaled/rotated).\n    return this.clientToLocalPoint(x, y).snapToGrid(this.options.gridSize);\n  },\n  localToPaperPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var localPoint = new Point(x, y);\n    var paperPoint = V.transformPoint(localPoint, this.matrix());\n    return paperPoint;\n  },\n  localToPaperRect: function (x, y, width, height) {\n    // allow `x` to be a rectangle and rest arguments undefined\n    var localRect = new Rect(x, y, width, height);\n    var paperRect = V.transformRect(localRect, this.matrix());\n    return paperRect;\n  },\n  paperToLocalPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var paperPoint = new Point(x, y);\n    var localPoint = V.transformPoint(paperPoint, this.matrix().inverse());\n    return localPoint;\n  },\n  paperToLocalRect: function (x, y, width, height) {\n    // allow `x` to be a rectangle and rest arguments undefined\n    var paperRect = new Rect(x, y, width, height);\n    var localRect = V.transformRect(paperRect, this.matrix().inverse());\n    return localRect;\n  },\n  localToClientPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var localPoint = new Point(x, y);\n    var clientPoint = V.transformPoint(localPoint, this.clientMatrix());\n    return clientPoint;\n  },\n  localToClientRect: function (x, y, width, height) {\n    // allow `x` to be a point and `y` undefined\n    var localRect = new Rect(x, y, width, height);\n    var clientRect = V.transformRect(localRect, this.clientMatrix());\n    return clientRect;\n  },\n  // Transform client coordinates to the paper local coordinates.\n  // Useful when you have a mouse event object and you'd like to get coordinates\n  // inside the paper that correspond to `evt.clientX` and `evt.clientY` point.\n  // Example: var localPoint = paper.clientToLocalPoint({ x: evt.clientX, y: evt.clientY });\n  clientToLocalPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var clientPoint = new Point(x, y);\n    var localPoint = V.transformPoint(clientPoint, this.clientMatrix().inverse());\n    return localPoint;\n  },\n  clientToLocalRect: function (x, y, width, height) {\n    // allow `x` to be a point and `y` undefined\n    var clientRect = new Rect(x, y, width, height);\n    var localRect = V.transformRect(clientRect, this.clientMatrix().inverse());\n    return localRect;\n  },\n  localToPagePoint: function (x, y) {\n    return this.localToPaperPoint(x, y).offset(this.pageOffset());\n  },\n  localToPageRect: function (x, y, width, height) {\n    return this.localToPaperRect(x, y, width, height).offset(this.pageOffset());\n  },\n  pageToLocalPoint: function (x, y) {\n    var pagePoint = new Point(x, y);\n    var paperPoint = pagePoint.difference(this.pageOffset());\n    return this.paperToLocalPoint(paperPoint);\n  },\n  pageToLocalRect: function (x, y, width, height) {\n    var pageOffset = this.pageOffset();\n    var paperRect = new Rect(x, y, width, height);\n    paperRect.x -= pageOffset.x;\n    paperRect.y -= pageOffset.y;\n    return this.paperToLocalRect(paperRect);\n  },\n  clientOffset: function () {\n    var clientRect = this.svg.getBoundingClientRect();\n    return new Point(clientRect.left, clientRect.top);\n  },\n  pageOffset: function () {\n    return this.clientOffset().offset(window.scrollX, window.scrollY);\n  },\n  linkAllowed: function (linkView) {\n    if (!(linkView instanceof LinkView)) {\n      throw new Error('Must provide a linkView.');\n    }\n\n    var link = linkView.model;\n    var paperOptions = this.options;\n    var graph = this.model;\n    var ns = graph.constructor.validations;\n\n    if (!paperOptions.multiLinks) {\n      if (!ns.multiLinks.call(this, graph, link)) return false;\n    }\n\n    if (!paperOptions.linkPinning) {\n      // Link pinning is not allowed and the link is not connected to the target.\n      if (!ns.linkPinning.call(this, graph, link)) return false;\n    }\n\n    if (typeof paperOptions.allowLink === 'function') {\n      if (!paperOptions.allowLink.call(this, linkView, this)) return false;\n    }\n\n    return true;\n  },\n  getDefaultLink: function (cellView, magnet) {\n    return isFunction(this.options.defaultLink) // default link is a function producing link model\n    ? this.options.defaultLink.call(this, cellView, magnet) // default link is the Backbone model\n    : this.options.defaultLink.clone();\n  },\n  // Cell highlighting.\n  // ------------------\n  resolveHighlighter: function (opt = {}) {\n    let {\n      highlighter: highlighterDef,\n      type\n    } = opt;\n    const {\n      highlighting,\n      highlighterNamespace\n    } = this.options;\n    /*\n        Expecting opt.highlighter to have the following structure:\n        {\n            name: 'highlighter-name',\n            options: {\n                some: 'value'\n            }\n        }\n    */\n\n    if (highlighterDef === undefined) {\n      // Is highlighting disabled?\n      if (!highlighting) return false; // check for built-in types\n\n      if (type) {\n        highlighterDef = highlighting[type]; // Is a specific type highlight disabled?\n\n        if (highlighterDef === false) return false;\n      }\n\n      if (!highlighterDef) {\n        // Type not defined use default highlight\n        highlighterDef = highlighting['default'];\n      }\n    } // Do nothing if opt.highlighter is falsy.\n    // This allows the case to not highlight cell(s) in certain cases.\n    // For example, if you want to NOT highlight when embedding elements\n    // or use a custom highlighter.\n\n\n    if (!highlighterDef) return false; // Allow specifying a highlighter by name.\n\n    if (isString(highlighterDef)) {\n      highlighterDef = {\n        name: highlighterDef\n      };\n    }\n\n    const name = highlighterDef.name;\n    const highlighter = highlighterNamespace[name]; // Highlighter validation\n\n    if (!highlighter) {\n      throw new Error('Unknown highlighter (\"' + name + '\")');\n    }\n\n    if (typeof highlighter.highlight !== 'function') {\n      throw new Error('Highlighter (\"' + name + '\") is missing required highlight() method');\n    }\n\n    if (typeof highlighter.unhighlight !== 'function') {\n      throw new Error('Highlighter (\"' + name + '\") is missing required unhighlight() method');\n    }\n\n    return {\n      highlighter,\n      options: highlighterDef.options || {},\n      name\n    };\n  },\n  onCellHighlight: function (cellView, magnetEl, opt) {\n    const highlighterDescriptor = this.resolveHighlighter(opt);\n    if (!highlighterDescriptor) return;\n    const {\n      highlighter,\n      options\n    } = highlighterDescriptor;\n    highlighter.highlight(cellView, magnetEl, options);\n  },\n  onCellUnhighlight: function (cellView, magnetEl, opt) {\n    const highlighterDescriptor = this.resolveHighlighter(opt);\n    if (!highlighterDescriptor) return;\n    const {\n      highlighter,\n      options\n    } = highlighterDescriptor;\n    highlighter.unhighlight(cellView, magnetEl, options);\n  },\n  // Interaction.\n  // ------------\n  pointerdblclick: function (evt) {\n    evt.preventDefault(); // magnetpointerdblclick can stop propagation\n\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      view.pointerdblclick(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointerdblclick', evt, localPoint.x, localPoint.y);\n    }\n  },\n  pointerclick: function (evt) {\n    // magnetpointerclick can stop propagation\n    var data = this.eventData(evt); // Trigger event only if mouse has not moved.\n\n    if (data.mousemoved <= this.options.clickThreshold) {\n      evt = normalizeEvent(evt);\n      var view = this.findView(evt.target);\n      if (this.guard(evt, view)) return;\n      var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n      if (view) {\n        view.pointerclick(evt, localPoint.x, localPoint.y);\n      } else {\n        this.trigger('blank:pointerclick', evt, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  contextmenu: function (evt) {\n    if (this.options.preventContextMenu) evt.preventDefault();\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      view.contextmenu(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:contextmenu', evt, localPoint.x, localPoint.y);\n    }\n  },\n  pointerdown: function (evt) {\n    // onmagnet stops propagation when `addLinkFromMagnet` is allowed\n    // onevent can stop propagation\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      evt.preventDefault();\n      view.pointerdown(evt, localPoint.x, localPoint.y);\n    } else {\n      if (this.options.preventDefaultBlankAction) evt.preventDefault();\n      this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n    }\n\n    this.delegateDragEvents(view, evt.data);\n  },\n  pointermove: function (evt) {\n    // mouse moved counter\n    var data = this.eventData(evt);\n    data.mousemoved || (data.mousemoved = 0);\n    var mousemoved = ++data.mousemoved;\n    if (mousemoved <= this.options.moveThreshold) return;\n    evt = normalizeEvent(evt);\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n    var view = data.sourceView;\n\n    if (view) {\n      view.pointermove(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n    }\n\n    this.eventData(evt, data);\n  },\n  pointerup: function (evt) {\n    this.undelegateDocumentEvents();\n    var normalizedEvt = normalizeEvent(evt);\n    var localPoint = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n    var view = this.eventData(evt).sourceView;\n\n    if (view) {\n      view.pointerup(normalizedEvt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointerup', normalizedEvt, localPoint.x, localPoint.y);\n    }\n\n    if (!normalizedEvt.isPropagationStopped()) {\n      this.pointerclick($.Event(evt, {\n        type: 'click',\n        data: evt.data\n      }));\n    }\n\n    evt.stopImmediatePropagation();\n    this.delegateEvents();\n  },\n  mouseover: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    if (view) {\n      view.mouseover(evt);\n    } else {\n      if (this.el === evt.target) return; // prevent border of paper from triggering this\n\n      this.trigger('blank:mouseover', evt);\n    }\n  },\n  mouseout: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    if (view) {\n      view.mouseout(evt);\n    } else {\n      if (this.el === evt.target) return; // prevent border of paper from triggering this\n\n      this.trigger('blank:mouseout', evt);\n    }\n  },\n  mouseenter: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var relatedView = this.findView(evt.relatedTarget);\n\n    if (view) {\n      // mouse moved from tool over view?\n      if (relatedView === view) return;\n      view.mouseenter(evt);\n    } else {\n      if (relatedView) return; // `paper` (more descriptive), not `blank`\n\n      this.trigger('paper:mouseenter', evt);\n    }\n  },\n  mouseleave: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var relatedView = this.findView(evt.relatedTarget);\n\n    if (view) {\n      // mouse moved from view over tool?\n      if (relatedView === view) return;\n      view.mouseleave(evt);\n    } else {\n      if (relatedView) return; // `paper` (more descriptive), not `blank`\n\n      this.trigger('paper:mouseleave', evt);\n    }\n  },\n  mousewheel: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var originalEvent = evt.originalEvent;\n    var localPoint = this.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n    var delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n\n    if (view) {\n      view.mousewheel(evt, localPoint.x, localPoint.y, delta);\n    } else {\n      this.trigger('blank:mousewheel', evt, localPoint.x, localPoint.y, delta);\n    }\n  },\n  onevent: function (evt) {\n    var eventNode = evt.currentTarget;\n    var eventName = eventNode.getAttribute('event');\n\n    if (eventName) {\n      var view = this.findView(eventNode);\n\n      if (view) {\n        evt = normalizeEvent(evt);\n        if (this.guard(evt, view)) return;\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n        view.onevent(evt, eventName, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  magnetEvent: function (evt, handler) {\n    var magnetNode = evt.currentTarget;\n    var magnetValue = magnetNode.getAttribute('magnet');\n\n    if (magnetValue) {\n      var view = this.findView(magnetNode);\n\n      if (view) {\n        evt = normalizeEvent(evt);\n        if (this.guard(evt, view)) return;\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n        handler.call(this, view, evt, magnetNode, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  onmagnet: function (evt) {\n    this.magnetEvent(evt, function (view, evt, _, x, y) {\n      view.onmagnet(evt, x, y);\n    });\n  },\n  magnetpointerdblclick: function (evt) {\n    this.magnetEvent(evt, function (view, evt, magnet, x, y) {\n      view.magnetpointerdblclick(evt, magnet, x, y);\n    });\n  },\n  magnetcontextmenu: function (evt) {\n    if (this.options.preventContextMenu) evt.preventDefault();\n    this.magnetEvent(evt, function (view, evt, magnet, x, y) {\n      view.magnetcontextmenu(evt, magnet, x, y);\n    });\n  },\n  onlabel: function (evt) {\n    var labelNode = evt.currentTarget;\n    var view = this.findView(labelNode);\n\n    if (view) {\n      evt = normalizeEvent(evt);\n      if (this.guard(evt, view)) return;\n      var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n      view.onlabel(evt, localPoint.x, localPoint.y);\n    }\n  },\n\n  getPointerArgs(evt) {\n    const normalizedEvt = normalizeEvent(evt);\n    const {\n      x,\n      y\n    } = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n    return [normalizedEvt, x, y];\n  },\n\n  delegateDragEvents: function (view, data) {\n    data || (data = {});\n    this.eventData({\n      data: data\n    }, {\n      sourceView: view || null,\n      mousemoved: 0\n    });\n    this.delegateDocumentEvents(null, data);\n    this.undelegateEvents();\n  },\n  // Guard the specified event. If the event is not interesting, guard returns `true`.\n  // Otherwise, it returns `false`.\n  guard: function (evt, view) {\n    if (evt.type === 'mousedown' && evt.button === 2) {\n      // handled as `contextmenu` type\n      return true;\n    }\n\n    if (this.options.guard && this.options.guard(evt, view)) {\n      return true;\n    }\n\n    if (evt.data && evt.data.guarded !== undefined) {\n      return evt.data.guarded;\n    }\n\n    if (view && view.model && view.model instanceof Cell) {\n      return false;\n    }\n\n    if (this.svg === evt.target || this.el === evt.target || $.contains(this.svg, evt.target)) {\n      return false;\n    }\n\n    return true; // Event guarded. Paper should not react on it in any way.\n  },\n  setGridSize: function (gridSize) {\n    this.options.gridSize = gridSize;\n\n    if (this.options.drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  clearGrid: function () {\n    if (this.$grid) {\n      this.$grid.css('backgroundImage', 'none');\n    }\n\n    return this;\n  },\n  _getGridRefs: function () {\n    if (!this._gridCache) {\n      this._gridCache = {\n        root: V('svg', {\n          width: '100%',\n          height: '100%'\n        }, V('defs')),\n        patterns: {},\n        add: function (id, vel) {\n          V(this.root.node.childNodes[0]).append(vel);\n          this.patterns[id] = vel;\n          this.root.append(V('rect', {\n            width: '100%',\n            height: '100%',\n            fill: 'url(#' + id + ')'\n          }));\n        },\n        get: function (id) {\n          return this.patterns[id];\n        },\n        exist: function (id) {\n          return this.patterns[id] !== undefined;\n        }\n      };\n    }\n\n    return this._gridCache;\n  },\n  setGrid: function (drawGrid) {\n    this.clearGrid();\n    this._gridCache = null;\n    this._gridSettings = [];\n    var optionsList = Array.isArray(drawGrid) ? drawGrid : [drawGrid || {}];\n    optionsList.forEach(function (item) {\n      this._gridSettings.push.apply(this._gridSettings, this._resolveDrawGridOption(item));\n    }, this);\n    return this;\n  },\n  _resolveDrawGridOption: function (opt) {\n    var namespace = this.constructor.gridPatterns;\n\n    if (isString(opt) && Array.isArray(namespace[opt])) {\n      return namespace[opt].map(function (item) {\n        return assign({}, item);\n      });\n    }\n\n    var options = opt || {\n      args: [{}]\n    };\n    var isArray = Array.isArray(options);\n    var name = options.name;\n\n    if (!isArray && !name && !options.markup) {\n      name = 'dot';\n    }\n\n    if (name && Array.isArray(namespace[name])) {\n      var pattern = namespace[name].map(function (item) {\n        return assign({}, item);\n      });\n      var args = Array.isArray(options.args) ? options.args : [options.args || {}];\n      defaults(args[0], omit(opt, 'args'));\n\n      for (var i = 0; i < args.length; i++) {\n        if (pattern[i]) {\n          assign(pattern[i], args[i]);\n        }\n      }\n\n      return pattern;\n    }\n\n    return isArray ? options : [options];\n  },\n  drawGrid: function (opt) {\n    var gridSize = this.options.gridSize;\n\n    if (gridSize <= 1) {\n      return this.clearGrid();\n    }\n\n    var localOptions = Array.isArray(opt) ? opt : [opt];\n    var ctm = this.matrix();\n\n    var refs = this._getGridRefs();\n\n    this._gridSettings.forEach(function (gridLayerSetting, index) {\n      var id = 'pattern_' + index;\n      var options = merge(gridLayerSetting, localOptions[index], {\n        sx: ctm.a || 1,\n        sy: ctm.d || 1,\n        ox: ctm.e || 0,\n        oy: ctm.f || 0\n      });\n      options.width = gridSize * (ctm.a || 1) * (options.scaleFactor || 1);\n      options.height = gridSize * (ctm.d || 1) * (options.scaleFactor || 1);\n\n      if (!refs.exist(id)) {\n        refs.add(id, V('pattern', {\n          id: id,\n          patternUnits: 'userSpaceOnUse'\n        }, V(options.markup)));\n      }\n\n      var patternDefVel = refs.get(id);\n\n      if (isFunction(options.update)) {\n        options.update(patternDefVel.node.childNodes[0], options);\n      }\n\n      var x = options.ox % options.width;\n      if (x < 0) x += options.width;\n      var y = options.oy % options.height;\n      if (y < 0) y += options.height;\n      patternDefVel.attr({\n        x: x,\n        y: y,\n        width: options.width,\n        height: options.height\n      });\n    });\n\n    var patternUri = new XMLSerializer().serializeToString(refs.root.node);\n    patternUri = 'url(data:image/svg+xml;base64,' + btoa(patternUri) + ')';\n    this.$grid.css('backgroundImage', patternUri);\n    return this;\n  },\n  updateBackgroundImage: function (opt) {\n    opt = opt || {};\n    var backgroundPosition = opt.position || 'center';\n    var backgroundSize = opt.size || 'auto auto';\n    var currentScale = this.scale();\n    var currentTranslate = this.translate(); // backgroundPosition\n\n    if (isObject(backgroundPosition)) {\n      var x = currentTranslate.tx + currentScale.sx * (backgroundPosition.x || 0);\n      var y = currentTranslate.ty + currentScale.sy * (backgroundPosition.y || 0);\n      backgroundPosition = x + 'px ' + y + 'px';\n    } // backgroundSize\n\n\n    if (isObject(backgroundSize)) {\n      backgroundSize = new Rect(backgroundSize).scale(currentScale.sx, currentScale.sy);\n      backgroundSize = backgroundSize.width + 'px ' + backgroundSize.height + 'px';\n    }\n\n    this.$background.css({\n      backgroundSize: backgroundSize,\n      backgroundPosition: backgroundPosition\n    });\n  },\n  drawBackgroundImage: function (img, opt) {\n    // Clear the background image if no image provided\n    if (!(img instanceof HTMLImageElement)) {\n      this.$background.css('backgroundImage', '');\n      return;\n    }\n\n    opt = opt || {};\n    var backgroundImage;\n    var backgroundSize = opt.size;\n    var backgroundRepeat = opt.repeat || 'no-repeat';\n    var backgroundOpacity = opt.opacity || 1;\n    var backgroundQuality = Math.abs(opt.quality) || 1;\n    var backgroundPattern = this.constructor.backgroundPatterns[camelCase(backgroundRepeat)];\n\n    if (isFunction(backgroundPattern)) {\n      // 'flip-x', 'flip-y', 'flip-xy', 'watermark' and custom\n      img.width *= backgroundQuality;\n      img.height *= backgroundQuality;\n      var canvas = backgroundPattern(img, opt);\n\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error('dia.Paper: background pattern must return an HTML Canvas instance');\n      }\n\n      backgroundImage = canvas.toDataURL('image/png');\n      backgroundRepeat = 'repeat';\n\n      if (isObject(backgroundSize)) {\n        // recalculate the tile size if an object passed in\n        backgroundSize.width *= canvas.width / img.width;\n        backgroundSize.height *= canvas.height / img.height;\n      } else if (backgroundSize === undefined) {\n        // calculate the tile size if no provided\n        opt.size = {\n          width: canvas.width / backgroundQuality,\n          height: canvas.height / backgroundQuality\n        };\n      }\n    } else {\n      // backgroundRepeat:\n      // no-repeat', 'round', 'space', 'repeat', 'repeat-x', 'repeat-y'\n      backgroundImage = img.src;\n\n      if (backgroundSize === undefined) {\n        // pass the image size for  the backgroundSize if no size provided\n        opt.size = {\n          width: img.width,\n          height: img.height\n        };\n      }\n    }\n\n    this.$background.css({\n      opacity: backgroundOpacity,\n      backgroundRepeat: backgroundRepeat,\n      backgroundImage: 'url(' + backgroundImage + ')'\n    });\n    this.updateBackgroundImage(opt);\n  },\n  updateBackgroundColor: function (color) {\n    this.$el.css('backgroundColor', color || '');\n  },\n  drawBackground: function (opt) {\n    opt = opt || {};\n    this.updateBackgroundColor(opt.color);\n\n    if (opt.image) {\n      opt = this._background = cloneDeep(opt);\n      var img = document.createElement('img');\n      img.onload = this.drawBackgroundImage.bind(this, img, opt);\n      img.src = opt.image;\n    } else {\n      this.drawBackgroundImage(null);\n      this._background = null;\n    }\n\n    return this;\n  },\n  setInteractivity: function (value) {\n    this.options.interactive = value;\n    invoke(this._views, 'setInteractivity', value);\n  },\n  // Paper definitions.\n  // ------------------\n  isDefined: function (defId) {\n    return !!this.svg.getElementById(defId);\n  },\n  defineFilter: function (filter) {\n    if (!isObject(filter)) {\n      throw new TypeError('dia.Paper: defineFilter() requires 1. argument to be an object.');\n    }\n\n    var filterId = filter.id;\n    var name = filter.name; // Generate a hash code from the stringified filter definition. This gives us\n    // a unique filter ID for different definitions.\n\n    if (!filterId) {\n      filterId = name + this.svg.id + hashCode(JSON.stringify(filter));\n    } // If the filter already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n    // If not, create one.\n\n\n    if (!this.isDefined(filterId)) {\n      var namespace = _filter;\n      var filterSVGString = namespace[name] && namespace[name](filter.args || {});\n\n      if (!filterSVGString) {\n        throw new Error('Non-existing filter ' + name);\n      } // Set the filter area to be 3x the bounding box of the cell\n      // and center the filter around the cell.\n\n\n      var filterAttrs = assign({\n        filterUnits: 'objectBoundingBox',\n        x: -1,\n        y: -1,\n        width: 3,\n        height: 3\n      }, filter.attrs, {\n        id: filterId\n      });\n      V(filterSVGString, filterAttrs).appendTo(this.defs);\n    }\n\n    return filterId;\n  },\n  defineGradient: function (gradient) {\n    if (!isObject(gradient)) {\n      throw new TypeError('dia.Paper: defineGradient() requires 1. argument to be an object.');\n    }\n\n    var gradientId = gradient.id;\n    var type = gradient.type;\n    var stops = gradient.stops; // Generate a hash code from the stringified filter definition. This gives us\n    // a unique filter ID for different definitions.\n\n    if (!gradientId) {\n      gradientId = type + this.svg.id + hashCode(JSON.stringify(gradient));\n    } // If the gradient already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n    // If not, create one.\n\n\n    if (!this.isDefined(gradientId)) {\n      var stopTemplate = template('<stop offset=\"${offset}\" stop-color=\"${color}\" stop-opacity=\"${opacity}\"/>');\n      var gradientStopsStrings = toArray(stops).map(function (stop) {\n        return stopTemplate({\n          offset: stop.offset,\n          color: stop.color,\n          opacity: Number.isFinite(stop.opacity) ? stop.opacity : 1\n        });\n      });\n      var gradientSVGString = ['<' + type + '>', gradientStopsStrings.join(''), '</' + type + '>'].join('');\n      var gradientAttrs = assign({\n        id: gradientId\n      }, gradient.attrs);\n      V(gradientSVGString, gradientAttrs).appendTo(this.defs);\n    }\n\n    return gradientId;\n  },\n  defineMarker: function (marker) {\n    if (!isObject(marker)) {\n      throw new TypeError('dia.Paper: defineMarker() requires 1. argument to be an object.');\n    }\n\n    var markerId = marker.id; // Generate a hash code from the stringified filter definition. This gives us\n    // a unique filter ID for different definitions.\n\n    if (!markerId) {\n      markerId = this.svg.id + hashCode(JSON.stringify(marker));\n    }\n\n    if (!this.isDefined(markerId)) {\n      var attrs = omit(marker, 'type', 'userSpaceOnUse');\n      var pathMarker = V('marker', {\n        id: markerId,\n        orient: 'auto',\n        overflow: 'visible',\n        markerUnits: marker.markerUnits || 'userSpaceOnUse'\n      }, [V(marker.type || 'path', attrs)]);\n      pathMarker.appendTo(this.defs);\n    }\n\n    return markerId;\n  }\n}, {\n  sorting: sortingTypes,\n  Layers: LayersNames,\n  backgroundPatterns: {\n    flipXy: function (img) {\n      // d b\n      // q p\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = 2 * imgWidth;\n      canvas.height = 2 * imgHeight;\n      var ctx = canvas.getContext('2d'); // top-left image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // xy-flipped bottom-right image\n\n      ctx.setTransform(-1, 0, 0, -1, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // x-flipped top-right image\n\n      ctx.setTransform(-1, 0, 0, 1, canvas.width, 0);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // y-flipped bottom-left image\n\n      ctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    flipX: function (img) {\n      // d b\n      // d b\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = imgWidth * 2;\n      canvas.height = imgHeight;\n      var ctx = canvas.getContext('2d'); // left image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // flipped right image\n\n      ctx.translate(2 * imgWidth, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    flipY: function (img) {\n      // d d\n      // q q\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = imgWidth;\n      canvas.height = imgHeight * 2;\n      var ctx = canvas.getContext('2d'); // top image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // flipped bottom image\n\n      ctx.translate(0, 2 * imgHeight);\n      ctx.scale(1, -1);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    watermark: function (img, opt) {\n      //   d\n      // d\n      opt = opt || {};\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      var canvas = document.createElement('canvas');\n      canvas.width = imgWidth * 3;\n      canvas.height = imgHeight * 3;\n      var ctx = canvas.getContext('2d');\n      var angle = isNumber(opt.watermarkAngle) ? -opt.watermarkAngle : -20;\n      var radians = toRad(angle);\n      var stepX = canvas.width / 4;\n      var stepY = canvas.height / 4;\n\n      for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < 4; j++) {\n          if ((i + j) % 2 > 0) {\n            // reset the current transformations\n            ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n            ctx.rotate(radians);\n            ctx.drawImage(img, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\n          }\n        }\n      }\n\n      return canvas;\n    }\n  },\n  gridPatterns: {\n    dot: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'rect',\n      update: function (el, opt) {\n        V(el).attr({\n          width: opt.thickness * opt.sx,\n          height: opt.thickness * opt.sy,\n          fill: opt.color\n        });\n      }\n    }],\n    fixedDot: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'rect',\n      update: function (el, opt) {\n        var size = opt.sx <= 1 ? opt.thickness * opt.sx : opt.thickness;\n        V(el).attr({\n          width: size,\n          height: size,\n          fill: opt.color\n        });\n      }\n    }],\n    mesh: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }],\n    doubleMesh: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }, {\n      color: '#000000',\n      thickness: 3,\n      scaleFactor: 4,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }]\n  }\n});","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/r-mapper v.2/r-mapper/node_modules/jointjs/src/dia/Paper.mjs"],"names":["V","isNumber","assign","nextFrame","isObject","cancelFrame","defaults","defaultsDeep","addClassNamePrefix","normalizeSides","isFunction","isPlainObject","getByPath","sortElements","isString","normalizeEvent","omit","merge","camelCase","cloneDeep","invoke","hashCode","filter","_filter","template","toArray","has","Rect","Point","toRad","View","views","CellView","ElementView","LinkView","Link","Cell","Graph","highlighters","linkAnchors","connectionPoints","anchors","$","Backbone","sortingTypes","NONE","APPROX","EXACT","LayersNames","CELLS","BACK","FRONT","TOOLS","MOUNT_BATCH_SIZE","UPDATE_BATCH_SIZE","Infinity","MIN_PRIORITY","HighlightingTypes","Highlighting","defaultHighlighting","DEFAULT","name","options","padding","MAGNET_AVAILABILITY","className","ELEMENT_AVAILABILITY","Paper","extend","width","height","origin","x","y","gridSize","drawGrid","background","perpendicularLinks","elementView","linkView","snapLabels","snapLinks","multiLinks","guard","evt","view","highlighting","preventContextMenu","preventDefaultBlankAction","restrictTranslate","markAvailable","defaultLink","defaultConnector","defaultRouter","defaultAnchor","defaultLinkAnchor","defaultConnectionPoint","connectionStrategy","validateMagnet","_cellView","magnet","_evt","getAttribute","validateConnection","cellViewS","_magnetS","cellViewT","_magnetT","end","_linkView","embeddingMode","validateEmbedding","childView","parentView","findParentBy","frontParentOnly","interactive","labelMove","linkPinning","allowLink","clickThreshold","moveThreshold","magnetThreshold","sorting","frozen","onViewUpdate","flag","priority","opt","paper","FLAG_INSERT","mounting","requestConnectedLinksUpdate","onViewPostponed","forcePostponedViewUpdate","beforeRender","afterRender","viewport","cellViewNamespace","highlighterNamespace","anchorNamespace","linkAnchorNamespace","connectionPointNamespace","events","documentEvents","svg","defs","tools","$background","layers","$grid","$document","_zPivots","_viewportMatrix","_viewportTransformString","_updates","_layers","SORT_DELAYING_BATCHES","UPDATE_DELAYING_BATCHES","MIN_SCALE","init","el","joint","shapes","model","setGrid","cloneOptions","render","setDimensions","startListening","_views","ownerDocument","resetViews","attributes","cells","models","isFrozen","isAsync","updateViewsAsync","_resetUpdates","id","priorities","unmountedCids","mountedCids","unmounted","mounted","count","keyFrozen","freezeKey","sort","listenTo","onCellAdded","onCellRemoved","onCellChange","onGraphReset","onGraphSort","onGraphBatchStop","on","onCellHighlight","onCellUnhighlight","update","cell","_","position","renderView","maxPosition","freeze","key","unfreeze","findViewByModel","requestViewUpdate","FLAG_REMOVE","UPDATE_PRIORITY","hasChanged","collection","removeZPivots","hasActiveBatch","sortViews","data","batchName","graph","updateDelayingBatches","includes","updateViews","sortDelayingBatches","children","ns","namespace","namespaceURI","xhtml","tagName","selector","xlink","getLayerNode","layerName","Error","renderChildren","childNodes","back","front","grid","ensureId","drawBackground","_background","updateBackgroundImage","matrix","ctm","undefined","transformString","getCTM","createSVGMatrix","ctmString","matrixToTransformString","setAttribute","clientMatrix","getScreenCTM","links","getConnectedLinks","j","n","length","link","flagLabels","getTargetCell","push","getSourceCell","nextPriority","Math","max","scheduleViewUpdate","getFlag","isElement","sourceFlag","sourceView","isViewMounted","dumpView","updateEndMagnet","targetFlag","targetView","async","stats","notifyAfterRender","type","updates","cid","priorityUpdates","i","prevPriorityUpdates","currentType","viewUpdateFn","call","dumpViewUpdate","registerMountedView","updateView","removeView","insertView","confirmUpdate","requireView","registerUnmountedView","dumpViews","passingOpt","checkViewport","notifyBeforeRender","batchStats","updateCount","batchCount","updateViewsBatch","updated","min","empty","batches","hasScheduledUpdates","priorityIndexes","Object","keys","_key","processed","mountBatchSize","unmountBatchSize","checkStats","unmountCount","mountCount","total","progressFn","progress","beforeFn","afterFn","trigger","batchSize","postponeCount","maxPriority","viewportFn","postponeViewFn","main","currentFlag","isDetached","DETACHABLE","unmount","leftoverFlag","postponed","getUnmountedViews","unmountedViews","Array","getMountedViews","mountedViews","checkUnmountedViews","splice","checkMountedViews","unmountedCount","mountedCount","isExactSorting","onRemove","removeViews","getComputedSize","w","h","clientWidth","clientHeight","round","$el","css","computedSize","setOrigin","ox","oy","translate","absolute","fitToContent","gridWidth","gridHeight","area","contentArea","getContentArea","currentScale","scale","currentTranslate","sx","sy","calcWidth","ceil","calcHeight","tx","ty","allowNewOrigin","left","top","right","bottom","minWidth","minHeight","maxWidth","Number","MAX_VALUE","maxHeight","dimensionChange","originChange","scaleContentToFit","contentBBox","contentLocalOrigin","localToPaperRect","getContentBBox","paperToLocalPoint","preserveAspectRatio","scaleGrid","minScale","maxScale","minScaleX","maxScaleX","minScaleY","maxScaleY","fittingBBox","moveAndExpand","newSx","newSy","floor","newOx","newOy","useModelGeometry","getBBox","getArea","paperToLocalRect","getRestrictedArea","args","restrictedArea","apply","createViewForModel","optionalViewClass","defaultViewClass","get","namespaceViewClass","isLink","ViewClass","prototype","remove","initFlag","onImageDragStart","sortViewsExact","$cells","a","b","cellA","cellB","zA","z","zB","layer","pivot","addZPivot","insertBefore","appendChild","pivots","document","createComment","neighborZ","currentZ","neighborPivot","nextSibling","firstChild","removeChild","matrixToScale","newTx","newTy","d","rotate","angle","cx","cy","matrixToRotate","bbox","matrixToTranslate","e","f","newTranslate","findView","querySelector","findAttribute","findViewsFromPoint","p","getElements","map","vel","target","containsPoint","findViewsInArea","rect","strict","method","removeTools","dispatchToolsEvent","hideTools","showTools","event","getModelById","getCell","snapToGrid","clientToLocalPoint","localToPaperPoint","localPoint","paperPoint","transformPoint","localRect","paperRect","transformRect","inverse","localToClientPoint","clientPoint","localToClientRect","clientRect","clientToLocalRect","localToPagePoint","offset","pageOffset","localToPageRect","pageToLocalPoint","pagePoint","difference","pageToLocalRect","clientOffset","getBoundingClientRect","window","scrollX","scrollY","linkAllowed","paperOptions","constructor","validations","getDefaultLink","cellView","clone","resolveHighlighter","highlighter","highlighterDef","highlight","unhighlight","magnetEl","highlighterDescriptor","pointerdblclick","preventDefault","clientX","clientY","pointerclick","eventData","mousemoved","contextmenu","pointerdown","delegateDragEvents","pointermove","pointerup","undelegateDocumentEvents","normalizedEvt","isPropagationStopped","Event","stopImmediatePropagation","delegateEvents","mouseover","mouseout","mouseenter","relatedView","relatedTarget","mouseleave","mousewheel","originalEvent","delta","wheelDelta","detail","onevent","eventNode","currentTarget","eventName","magnetEvent","handler","magnetNode","magnetValue","onmagnet","magnetpointerdblclick","magnetcontextmenu","onlabel","labelNode","getPointerArgs","delegateDocumentEvents","undelegateEvents","button","guarded","contains","setGridSize","clearGrid","_getGridRefs","_gridCache","root","patterns","add","node","append","fill","exist","_gridSettings","optionsList","isArray","forEach","item","_resolveDrawGridOption","gridPatterns","markup","pattern","localOptions","refs","gridLayerSetting","index","scaleFactor","patternUnits","patternDefVel","attr","patternUri","XMLSerializer","serializeToString","btoa","backgroundPosition","backgroundSize","size","drawBackgroundImage","img","HTMLImageElement","backgroundImage","backgroundRepeat","repeat","backgroundOpacity","opacity","backgroundQuality","abs","quality","backgroundPattern","backgroundPatterns","canvas","HTMLCanvasElement","toDataURL","src","updateBackgroundColor","color","image","createElement","onload","bind","setInteractivity","value","isDefined","defId","getElementById","defineFilter","TypeError","filterId","JSON","stringify","filterSVGString","filterAttrs","filterUnits","attrs","appendTo","defineGradient","gradient","gradientId","stops","stopTemplate","gradientStopsStrings","stop","isFinite","gradientSVGString","join","gradientAttrs","defineMarker","marker","markerId","pathMarker","orient","overflow","markerUnits","Layers","flipXy","imgWidth","imgHeight","ctx","getContext","drawImage","setTransform","flipX","flipY","watermark","watermarkAngle","radians","stepX","stepY","dot","thickness","fixedDot","mesh","stroke","doubleMesh"],"mappings":"AAAA,OAAOA,CAAP,MAAc,gBAAd;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,SAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,QANJ,EAOIC,YAPJ,EAQIC,kBARJ,EASIC,cATJ,EAUIC,UAVJ,EAWIC,aAXJ,EAYIC,SAZJ,EAaIC,YAbJ,EAcIC,QAdJ,EAeIC,cAfJ,EAgBIC,IAhBJ,EAiBIC,KAjBJ,EAkBIC,SAlBJ,EAmBIC,SAnBJ,EAoBIC,MApBJ,EAqBIC,QArBJ,EAsBIC,MAAM,IAAIC,OAtBd,EAuBIC,QAvBJ,EAwBIC,OAxBJ,EAyBIC,GAzBJ,QA0BO,mBA1BP;AA2BA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,QAAmC,gBAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAO,KAAKC,YAAZ,MAA8B,2BAA9B;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAO,KAAKC,gBAAZ,MAAkC,+BAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,cADW;AAEjBC,EAAAA,MAAM,EAAE,qBAFS;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,IAAI,EAAE,MAFU;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,KAAK,EAAE;AAJS,CAApB;AAOA,MAAMC,gBAAgB,GAAG,IAAzB;AACA,MAAMC,iBAAiB,GAAGC,QAA1B;AACA,MAAMC,YAAY,GAAG,gBAArB,C,CAAuC;;AAEvC,MAAMC,iBAAiB,GAAGzB,QAAQ,CAAC0B,YAAnC;AAEA,MAAMC,mBAAmB,GAAG;AACxB,GAACF,iBAAiB,CAACG,OAAnB,GAA6B;AACzBC,IAAAA,IAAI,EAAE,QADmB;AAEzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ;AAFgB,GADL;AAOxB,GAACN,iBAAiB,CAACO,mBAAnB,GAAyC;AACrCH,IAAAA,IAAI,EAAE,UAD+B;AAErCC,IAAAA,OAAO,EAAE;AACLG,MAAAA,SAAS,EAAE;AADN;AAF4B,GAPjB;AAaxB,GAACR,iBAAiB,CAACS,oBAAnB,GAA0C;AACtCL,IAAAA,IAAI,EAAE,UADgC;AAEtCC,IAAAA,OAAO,EAAE;AACLG,MAAAA,SAAS,EAAE;AADN;AAF6B;AAblB,CAA5B;AAqBA,OAAO,MAAME,KAAK,GAAGrC,IAAI,CAACsC,MAAL,CAAY;AAE7BH,EAAAA,SAAS,EAAE,OAFkB;AAI7BH,EAAAA,OAAO,EAAE;AAELO,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE,GAHH;AAILC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAJH;AAImB;AACxBC,IAAAA,QAAQ,EAAE,CALL;AAOL;AACA;AACAC,IAAAA,QAAQ,EAAE,KATL;AAWL;AACA;AACAC,IAAAA,UAAU,EAAE,KAbP;AAeLC,IAAAA,kBAAkB,EAAE,KAff;AAgBLC,IAAAA,WAAW,EAAE7C,WAhBR;AAiBL8C,IAAAA,QAAQ,EAAE7C,QAjBL;AAkBL8C,IAAAA,UAAU,EAAE,KAlBP;AAkBc;AACnBC,IAAAA,SAAS,EAAE,KAnBN;AAmBa;AAElB;AACAC,IAAAA,UAAU,EAAE,IAtBP;AAwBL;AACAC,IAAAA,KAAK,EAAE,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAEvB;AACA,aAAO,KAAP;AACH,KA7BI;AA+BLC,IAAAA,YAAY,EAAE3B,mBA/BT;AAiCL;AACA4B,IAAAA,kBAAkB,EAAE,IAlCf;AAoCL;AACAC,IAAAA,yBAAyB,EAAE,IArCtB;AAuCL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,iBAAiB,EAAE,KAlDd;AAoDL;AACA;AACA;AACAC,IAAAA,aAAa,EAAE,KAvDV;AAyDL;AACA;AACA;AACAC,IAAAA,WAAW,EAAE,IAAIxD,IAAJ,EA5DR;AA8DL;AACA;AACAyD,IAAAA,gBAAgB,EAAE;AAAE/B,MAAAA,IAAI,EAAE;AAAR,KAhEb;AAkEL;AACA;AACAgC,IAAAA,aAAa,EAAE;AAAEhC,MAAAA,IAAI,EAAE;AAAR,KApEV;AAsELiC,IAAAA,aAAa,EAAE;AAAEjC,MAAAA,IAAI,EAAE;AAAR,KAtEV;AAwELkC,IAAAA,iBAAiB,EAAE;AAAElC,MAAAA,IAAI,EAAE;AAAR,KAxEd;AA0ELmC,IAAAA,sBAAsB,EAAE;AAAEnC,MAAAA,IAAI,EAAE;AAAR,KA1EnB;;AA4EL;AAEAoC,IAAAA,kBAAkB,EAAE,IA9Ef;AAgFL;AACAC,IAAAA,cAAc,EAAE,UAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC9C,aAAOD,MAAM,CAACE,YAAP,CAAoB,QAApB,MAAkC,SAAzC;AACH,KAnFI;AAqFL;AACA;AACAC,IAAAA,kBAAkB,EAAE,UAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,GAAnD,EAAwDC,SAAxD,EAAmE;AACnF,aAAO,CAACD,GAAG,KAAK,QAAR,GAAmBF,SAAnB,GAA+BF,SAAhC,aAAsDvE,WAA7D;AACH,KAzFI;;AA2FL;AAEA;AACA;AACA6E,IAAAA,aAAa,EAAE,KA/FV;AAiGL;AACAC,IAAAA,iBAAiB,EAAE,UAASC,SAAT,EAAoBC,UAApB,EAAgC;AAC/C;AACA,aAAO,IAAP;AACH,KArGI;AAuGL;AACA;AACAC,IAAAA,YAAY,EAAE,MAzGT;AAyGiB;AAEtB;AACA;AACA;AACAC,IAAAA,eAAe,EAAE,IA9GZ;AAgHL;AACAC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE;AADF,KAjHR;AAqHL;AACA;AACAC,IAAAA,WAAW,EAAE,IAvHR;AAyHL;AACA;AACA;AACAC,IAAAA,SAAS,EAAE,IA5HN;AA8HL;AACAC,IAAAA,cAAc,EAAE,CA/HX;AAiIL;AACAC,IAAAA,aAAa,EAAE,CAlIV;AAoIL;AACA;AACAC,IAAAA,eAAe,EAAE,CAtIZ;AAwIL;AAEAC,IAAAA,OAAO,EAAE/E,YAAY,CAACG,KA1IjB;AA4IL6E,IAAAA,MAAM,EAAE,KA5IH;AA8IL;AACAC,IAAAA,YAAY,EAAE,UAASxC,IAAT,EAAeyC,IAAf,EAAqBC,QAArB,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2C;AACrD,UAAKH,IAAI,GAAGzC,IAAI,CAAC6C,WAAb,IAA6BF,GAAG,CAACG,QAArC,EAA+C;AAC/CF,MAAAA,KAAK,CAACG,2BAAN,CAAkC/C,IAAlC,EAAwC0C,QAAxC,EAAkDC,GAAlD;AACH,KAlJI;AAoJL;AACAK,IAAAA,eAAe,EAAE,UAAShD,IAAT,EAAeyC,IAAf,EAAqBG,KAArB,EAA4B;AACzC,aAAOA,KAAK,CAACK,wBAAN,CAA+BjD,IAA/B,EAAqCyC,IAArC,CAAP;AACH,KAvJI;AAyJLS,IAAAA,YAAY,EAAE,IAzJT;AAyJe;AAEpBC,IAAAA,WAAW,EAAE,IA3JR;AA2Jc;AAEnBC,IAAAA,QAAQ,EAAE,IA7JL;AA+JL;AAEAC,IAAAA,iBAAiB,EAAE,IAjKd;AAmKLC,IAAAA,oBAAoB,EAAErG,YAnKjB;AAqKLsG,IAAAA,eAAe,EAAEnG,OArKZ;AAuKLoG,IAAAA,mBAAmB,EAAEtG,WAvKhB;AAyKLuG,IAAAA,wBAAwB,EAAEtG;AAzKrB,GAJoB;AAgL7BuG,EAAAA,MAAM,EAAE;AACJ,gBAAY,iBADR;AAEJ,mBAAe,aAFX;AAGJ,iBAAa,aAHT;AAIJ,kBAAc,aAJV;AAKJ,iBAAa,WALT;AAMJ,gBAAY,UANR;AAOJ,kBAAc,YAPV;AAQJ,kBAAc,YARV;AASJ,kBAAc,YATV;AAUJ,sBAAkB,YAVd;AAWJ,8BAA0B,YAXtB;AAYJ,8BAA0B,YAZtB;AAaJ,+BAA2B,YAbvB;AAcJ,+BAA2B,YAdvB;AAeJ,qCAAiC,SAf7B;AAewC;AAC5C,sCAAkC,SAhB9B;AAiBJ,sCAAkC,UAjB9B;AAiB0C;AAC9C,uCAAmC,UAlB/B;AAmBJ,qCAAiC,uBAnB7B;AAoBJ,wCAAoC,mBApBhC;AAqBJ,oCAAgC,SArB5B;AAqBuC;AAC3C,qCAAiC,SAtB7B;AAuBJ,mCAA+B,kBAvB3B,CAuB8C;;AAvB9C,GAhLqB;AA0M7BC,EAAAA,cAAc,EAAE;AACZ,iBAAa,aADD;AAEZ,iBAAa,aAFD;AAGZ,eAAW,WAHC;AAIZ,gBAAY,WAJA;AAKZ,mBAAe;AALH,GA1Ma;AAkN7BC,EAAAA,GAAG,EAAE,IAlNwB;AAmN7BR,EAAAA,QAAQ,EAAE,IAnNmB;AAoN7BS,EAAAA,IAAI,EAAE,IApNuB;AAqN7BC,EAAAA,KAAK,EAAE,IArNsB;AAsN7BC,EAAAA,WAAW,EAAE,IAtNgB;AAuN7BC,EAAAA,MAAM,EAAE,IAvNqB;AAwN7BC,EAAAA,KAAK,EAAE,IAxNsB;AAyN7BC,EAAAA,SAAS,EAAE,IAzNkB;AA2N7BC,EAAAA,QAAQ,EAAE,IA3NmB;AA4N7B;AACAC,EAAAA,eAAe,EAAE,IA7NY;AA8N7B;AACA;AACAC,EAAAA,wBAAwB,EAAE,IAhOG;AAiO7B;AACAC,EAAAA,QAAQ,EAAE,IAlOmB;AAmO7B;AACAC,EAAAA,OAAO,EAAE,IApOoB;AAsO7BC,EAAAA,qBAAqB,EAAE,CAAC,KAAD,EAAQ,UAAR,EAAoB,SAApB,CAtOM;AAuO7BC,EAAAA,uBAAuB,EAAE,CAAC,WAAD,CAvOI;AAwO7BC,EAAAA,SAAS,EAAE,IAxOkB;AA0O7BC,EAAAA,IAAI,EAAE,YAAW;AAEb,UAAM;AAAElG,MAAAA,OAAF;AAAWmG,MAAAA;AAAX,QAAkB,IAAxB;;AACA,QAAI,CAACnG,OAAO,CAAC4E,iBAAb,EAAgC;AAC5B;AACA5E,MAAAA,OAAO,CAAC4E,iBAAR,GAA4B,OAAOwB,KAAP,KAAiB,WAAjB,IAAgCxI,GAAG,CAACwI,KAAD,EAAQ,QAAR,CAAnC,GAAuDA,KAAK,CAACC,MAA7D,GAAsE,IAAlG;AACA;AACH;;AAED,UAAMC,KAAK,GAAG,KAAKA,KAAL,GAAatG,OAAO,CAACsG,KAAR,IAAiB,IAAI/H,KAAJ,EAA5C,CATa,CAWb;AACA;;AACA,SAAKuH,OAAL,GAAe,EAAf;AAEA,SAAKS,OAAL,CAAavG,OAAO,CAACa,QAArB;AACA,SAAK2F,YAAL;AACA,SAAKC,MAAL;AACA,SAAKC,aAAL;AACA,SAAKC,cAAL,GAnBa,CAqBb;;AACA,SAAKC,MAAL,GAAc,EAAd,CAtBa,CAuBb;;AACA,SAAKlB,QAAL,GAAgB,EAAhB,CAxBa,CAyBb;;AACA,SAAKD,SAAL,GAAiB7G,CAAC,CAACuH,EAAE,CAACU,aAAJ,CAAlB,CA1Ba,CA2Bb;;AACA,SAAKC,UAAL,CAAgBR,KAAK,CAACS,UAAN,CAAiBC,KAAjB,CAAuBC,MAAvC,EA5Ba,CA6Bb;;AACA,QAAI,CAAC,KAAKC,QAAL,EAAD,IAAoB,KAAKC,OAAL,EAAxB,EAAwC,KAAKC,gBAAL;AAC3C,GAzQ4B;AA2Q7BC,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,KAAKxB,QAAL,GAAgB;AACnByB,MAAAA,EAAE,EAAE,IADe;AAEnBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFO;AAGnBC,MAAAA,aAAa,EAAE,EAHI;AAInBC,MAAAA,WAAW,EAAE,EAJM;AAKnBC,MAAAA,SAAS,EAAE,EALQ;AAMnBC,MAAAA,OAAO,EAAE,EANU;AAOnBC,MAAAA,KAAK,EAAE,CAPY;AAQnBC,MAAAA,SAAS,EAAE,KARQ;AASnBC,MAAAA,SAAS,EAAE,IATQ;AAUnBC,MAAAA,IAAI,EAAE;AAVa,KAAvB;AAYH,GAxR4B;AA0R7BpB,EAAAA,cAAc,EAAE,YAAW;AACvB,QAAIL,KAAK,GAAG,KAAKA,KAAjB;AACA,SAAK0B,QAAL,CAAc1B,KAAd,EAAqB,KAArB,EAA4B,KAAK2B,WAAjC,EACKD,QADL,CACc1B,KADd,EACqB,QADrB,EAC+B,KAAK4B,aADpC,EAEKF,QAFL,CAEc1B,KAFd,EAEqB,QAFrB,EAE+B,KAAK6B,YAFpC,EAGKH,QAHL,CAGc1B,KAHd,EAGqB,OAHrB,EAG8B,KAAK8B,YAHnC,EAIKJ,QAJL,CAIc1B,KAJd,EAIqB,MAJrB,EAI6B,KAAK+B,WAJlC,EAKKL,QALL,CAKc1B,KALd,EAKqB,YALrB,EAKmC,KAAKgC,gBALxC;AAMA,SAAKC,EAAL,CAAQ,gBAAR,EAA0B,KAAKC,eAA/B,EACKD,EADL,CACQ,kBADR,EAC4B,KAAKE,iBADjC,EAEKF,EAFL,CAEQ,iBAFR,EAE2B,KAAKG,MAFhC;AAGH,GArS4B;AAuS7BT,EAAAA,WAAW,EAAE,UAASU,IAAT,EAAeC,CAAf,EAAkB1E,GAAlB,EAAuB;AAChC,QAAI2E,QAAQ,GAAG3E,GAAG,CAAC2E,QAAnB;;AACA,QAAI,KAAK1B,OAAL,MAAkB,CAAChL,QAAQ,CAAC0M,QAAD,CAA/B,EAA2C;AACvC,WAAKC,UAAL,CAAgBH,IAAhB,EAAsBzE,GAAtB;AACH,KAFD,MAEO;AACH,UAAIA,GAAG,CAAC6E,WAAJ,KAAoBF,QAAxB,EAAkC,KAAKG,MAAL,CAAY;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAZ;AAClC,WAAKH,UAAL,CAAgBH,IAAhB,EAAsBzE,GAAtB;AACA,UAAI2E,QAAQ,KAAK,CAAjB,EAAoB,KAAKK,QAAL,CAAc;AAAED,QAAAA,GAAG,EAAE;AAAP,OAAd;AACvB;AACJ,GAhT4B;AAkT7Bf,EAAAA,aAAa,EAAE,UAASS,IAAT,EAAeC,CAAf,EAAkB1E,GAAlB,EAAuB;AAClC,UAAM3C,IAAI,GAAG,KAAK4H,eAAL,CAAqBR,IAArB,CAAb;AACA,QAAIpH,IAAJ,EAAU,KAAK6H,iBAAL,CAAuB7H,IAAvB,EAA6BA,IAAI,CAAC8H,WAAlC,EAA+C9H,IAAI,CAAC+H,eAApD,EAAqEpF,GAArE;AACb,GArT4B;AAuT7BiE,EAAAA,YAAY,EAAE,UAASQ,IAAT,EAAezE,GAAf,EAAoB;AAC9B,QAAIyE,IAAI,KAAK,KAAKrC,KAAL,CAAWS,UAAX,CAAsBC,KAAnC,EAA0C;;AAC1C,QAAI2B,IAAI,CAACY,UAAL,CAAgB,GAAhB,KAAwB,KAAKvJ,OAAL,CAAa6D,OAAb,KAAyB/E,YAAY,CAACE,MAAlE,EAA0E;AACtE,YAAMuC,IAAI,GAAG,KAAK4H,eAAL,CAAqBR,IAArB,CAAb;AACA,UAAIpH,IAAJ,EAAU,KAAK6H,iBAAL,CAAuB7H,IAAvB,EAA6BA,IAAI,CAAC6C,WAAlC,EAA+C7C,IAAI,CAAC+H,eAApD,EAAqEpF,GAArE;AACb;AACJ,GA7T4B;AA+T7BkE,EAAAA,YAAY,EAAE,UAASoB,UAAT,EAAqBtF,GAArB,EAA0B;AACpC,SAAKuF,aAAL;AACA,SAAK3C,UAAL,CAAgB0C,UAAU,CAACvC,MAA3B,EAAmC/C,GAAnC;AACH,GAlU4B;AAoU7BmE,EAAAA,WAAW,EAAE,YAAW;AACpB,QAAI,KAAK/B,KAAL,CAAWoD,cAAX,CAA0B,KAAK3D,qBAA/B,CAAJ,EAA2D;AAC3D,SAAK4D,SAAL;AACH,GAvU4B;AAyU7BrB,EAAAA,gBAAgB,EAAE,UAASsB,IAAT,EAAe;AAC7B,QAAI,KAAK1C,QAAL,EAAJ,EAAqB;AACrB,QAAInH,IAAI,GAAG6J,IAAI,IAAIA,IAAI,CAACC,SAAxB;AACA,QAAIC,KAAK,GAAG,KAAKxD,KAAjB;;AACA,QAAI,CAAC,KAAKa,OAAL,EAAL,EAAqB;AACjB,UAAI4C,qBAAqB,GAAG,KAAK/D,uBAAjC;;AACA,UAAI+D,qBAAqB,CAACC,QAAtB,CAA+BjK,IAA/B,KAAwC,CAAC+J,KAAK,CAACJ,cAAN,CAAqBK,qBAArB,CAA7C,EAA0F;AACtF,aAAKE,WAAL,CAAiBL,IAAjB;AACH;AACJ;;AACD,QAAIM,mBAAmB,GAAG,KAAKnE,qBAA/B;;AACA,QAAImE,mBAAmB,CAACF,QAApB,CAA6BjK,IAA7B,KAAsC,CAAC+J,KAAK,CAACJ,cAAN,CAAqBQ,mBAArB,CAA3C,EAAsF;AAClF,WAAKP,SAAL;AACH;AACJ,GAvV4B;AAyV7BnD,EAAAA,YAAY,EAAE,YAAW;AAErB,UAAM;AAAExG,MAAAA;AAAF,QAAc,IAApB;AACA,UAAM;AACF8B,MAAAA,gBADE;AAEFC,MAAAA,aAFE;AAGFG,MAAAA,sBAHE;AAIFF,MAAAA,aAJE;AAKFC,MAAAA,iBALE;AAMFxB,MAAAA,MANE;AAOFe,MAAAA,YAPE;AAQFoD,MAAAA,iBARE;AASFtB,MAAAA;AATE,QAUFtD,OAVJ,CAHqB,CAerB;;AACA;;AACA,QAAI,CAAC4E,iBAAD,IAAsB,OAAOwB,KAAP,KAAiB,WAAvC,IAAsDxI,GAAG,CAACwI,KAAD,EAAQ,QAAR,CAA7D,EAAgF;AAC5EpG,MAAAA,OAAO,CAAC4E,iBAAR,GAA4BwB,KAAK,CAACC,MAAlC;AACH;AACD;AAEA;AACA;;;AACA,QAAI,CAACzJ,UAAU,CAACkF,gBAAD,CAAf,EAAmC;AAC/B9B,MAAAA,OAAO,CAAC8B,gBAAR,GAA2BzE,SAAS,CAACyE,gBAAD,CAApC;AACH;;AACD,QAAI,CAAClF,UAAU,CAACmF,aAAD,CAAf,EAAgC;AAC5B/B,MAAAA,OAAO,CAAC+B,aAAR,GAAwB1E,SAAS,CAAC0E,aAAD,CAAjC;AACH;;AACD,QAAI,CAACnF,UAAU,CAACsF,sBAAD,CAAf,EAAyC;AACrClC,MAAAA,OAAO,CAACkC,sBAAR,GAAiC7E,SAAS,CAAC6E,sBAAD,CAA1C;AACH;;AACD,QAAI,CAACtF,UAAU,CAACoF,aAAD,CAAf,EAAgC;AAC5BhC,MAAAA,OAAO,CAACgC,aAAR,GAAwB3E,SAAS,CAAC2E,aAAD,CAAjC;AACH;;AACD,QAAI,CAACpF,UAAU,CAACqF,iBAAD,CAAf,EAAoC;AAChCjC,MAAAA,OAAO,CAACiC,iBAAR,GAA4B5E,SAAS,CAAC4E,iBAAD,CAArC;AACH;;AACD,QAAIpF,aAAa,CAACyG,WAAD,CAAjB,EAAgC;AAC5BtD,MAAAA,OAAO,CAACsD,WAAR,GAAsBlH,MAAM,CAAC,EAAD,EAAKkH,WAAL,CAA5B;AACH;;AACD,QAAIzG,aAAa,CAAC2E,YAAD,CAAjB,EAAiC;AAC7B;AACAxB,MAAAA,OAAO,CAACwB,YAAR,GAAuB/E,YAAY,CAAC,EAAD,EAAK+E,YAAL,EAAmB3B,mBAAnB,CAAnC;AACH;;AACDG,IAAAA,OAAO,CAACS,MAAR,GAAiBrE,MAAM,CAAC,EAAD,EAAKqE,MAAL,CAAvB;AACH,GAxY4B;AA0Y7B0J,EAAAA,QAAQ,EAAE,YAAW;AACjB,QAAIC,EAAE,GAAGlO,CAAC,CAACmO,SAAX;AACA,WAAO,CAAC;AACJC,MAAAA,YAAY,EAAEF,EAAE,CAACG,KADb;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJrK,MAAAA,SAAS,EAAEzD,kBAAkB,CAAC,kBAAD,CAHzB;AAIJ+N,MAAAA,QAAQ,EAAE;AAJN,KAAD,EAKJ;AACCH,MAAAA,YAAY,EAAEF,EAAE,CAACG,KADlB;AAECC,MAAAA,OAAO,EAAE,KAFV;AAGCrK,MAAAA,SAAS,EAAEzD,kBAAkB,CAAC,YAAD,CAH9B;AAIC+N,MAAAA,QAAQ,EAAE;AAJX,KALI,EAUJ;AACCH,MAAAA,YAAY,EAAEF,EAAE,CAACjF,GADlB;AAECqF,MAAAA,OAAO,EAAE,KAFV;AAGCzD,MAAAA,UAAU,EAAE;AACR,iBAAS,MADD;AAER,kBAAU,MAFF;AAGR,uBAAeqD,EAAE,CAACM;AAHV,OAHb;AAQCD,MAAAA,QAAQ,EAAE,KARX;AASCN,MAAAA,QAAQ,EAAE,CAAC;AACP;AACA;AACAK,QAAAA,OAAO,EAAE,MAHF;AAIPC,QAAAA,QAAQ,EAAE;AAJH,OAAD,EAKP;AACCD,QAAAA,OAAO,EAAE,GADV;AAECrK,QAAAA,SAAS,EAAEzD,kBAAkB,CAAC,QAAD,CAF9B;AAGC+N,QAAAA,QAAQ,EAAE,QAHX;AAICN,QAAAA,QAAQ,EAAE,CAAC;AACPK,UAAAA,OAAO,EAAE,GADF;AAEPrK,UAAAA,SAAS,EAAEzD,kBAAkB,CAAC,YAAD,CAFtB;AAGP+N,UAAAA,QAAQ,EAAE;AAHH,SAAD,EAIP;AACCD,UAAAA,OAAO,EAAE,GADV;AAECrK,UAAAA,SAAS,EAAEzD,kBAAkB,CAAC,sBAAD,CAF9B;AAGC+N,UAAAA,QAAQ,EAAE;AAHX,SAJO,EAQP;AACCD,UAAAA,OAAO,EAAE,GADV;AAECrK,UAAAA,SAAS,EAAEzD,kBAAkB,CAAC,aAAD,CAF9B;AAGC+N,UAAAA,QAAQ,EAAE;AAHX,SARO,EAYP;AACCD,UAAAA,OAAO,EAAE,GADV;AAECrK,UAAAA,SAAS,EAAEzD,kBAAkB,CAAC,aAAD,CAF9B;AAGC+N,UAAAA,QAAQ,EAAE;AAHX,SAZO;AAJX,OALO;AATX,KAVI,CAAP;AA+CH,GA3b4B;;AA6b7BE,EAAAA,YAAY,CAACC,SAAD,EAAY;AACpB,UAAM;AAAE9E,MAAAA;AAAF,QAAc,IAApB;AACA,QAAI8E,SAAS,IAAI9E,OAAjB,EAA0B,OAAOA,OAAO,CAAC8E,SAAD,CAAd;AAC1B,UAAM,IAAIC,KAAJ,CAAW,6BAA4BD,SAAU,GAAjD,CAAN;AACH,GAjc4B;;AAmc7BnE,EAAAA,MAAM,EAAE,YAAW;AAEf,SAAKqE,cAAL;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAc/K,MAAAA;AAAd,QAA0B,IAAhC;AACA,UAAM;AAAEmF,MAAAA,GAAF;AAAO6B,MAAAA,KAAP;AAAc5B,MAAAA,IAAd;AAAoBC,MAAAA,KAApB;AAA2BE,MAAAA,MAA3B;AAAmCyF,MAAAA,IAAnC;AAAyCC,MAAAA,KAAzC;AAAgDnK,MAAAA,UAAhD;AAA4DoK,MAAAA;AAA5D,QAAqEH,UAA3E;AAEA,SAAK5F,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAK2B,KAAL,GAAaA,KAAb;AACA,SAAKzB,MAAL,GAAcA,MAAd;AACA,SAAKD,WAAL,GAAmB1G,CAAC,CAACkC,UAAD,CAApB;AACA,SAAK0E,KAAL,GAAa5G,CAAC,CAACsM,IAAD,CAAd;AAEA9O,IAAAA,MAAM,CAAC,KAAK0J,OAAN,EAAe;AACjB,OAAC5G,WAAW,CAACE,IAAb,GAAoB4L,IADH;AAEjB,OAAC9L,WAAW,CAACC,KAAb,GAAqB6H,KAFJ;AAGjB,OAAC9H,WAAW,CAACG,KAAb,GAAqB4L,KAHJ;AAIjB,OAAC/L,WAAW,CAACI,KAAb,GAAqB+F;AAJJ,KAAf,CAAN;AAOAnJ,IAAAA,CAAC,CAACiP,QAAF,CAAWhG,GAAX,EArBe,CAuBf;;AACA,SAAKR,QAAL,GAAgBqC,KAAhB;;AAEA,QAAIhH,OAAO,CAACc,UAAZ,EAAwB;AACpB,WAAKsK,cAAL,CAAoBpL,OAAO,CAACc,UAA5B;AACH;;AAED,QAAId,OAAO,CAACa,QAAZ,EAAsB;AAClB,WAAKA,QAAL;AACH;;AAED,WAAO,IAAP;AACH,GAte4B;AAwe7B6H,EAAAA,MAAM,EAAE,YAAW;AAEf,QAAI,KAAK1I,OAAL,CAAaa,QAAjB,EAA2B;AACvB,WAAKA,QAAL;AACH;;AAED,QAAI,KAAKwK,WAAT,EAAsB;AAClB,WAAKC,qBAAL,CAA2B,KAAKD,WAAhC;AACH;;AAED,WAAO,IAAP;AACH,GAnf4B;AAqf7BE,EAAAA,MAAM,EAAE,UAASC,GAAT,EAAc;AAElB,QAAI7G,QAAQ,GAAG,KAAKY,MAApB,CAFkB,CAIlB;;AACA,QAAIiG,GAAG,KAAKC,SAAZ,EAAuB;AAEnB,UAAIC,eAAe,GAAG/G,QAAQ,CAACnC,YAAT,CAAsB,WAAtB,CAAtB;;AAEA,UAAI,CAAC,KAAKoD,wBAAL,IAAiC,IAAlC,MAA4C8F,eAAhD,EAAiE;AAC7D;AACA;AACAF,QAAAA,GAAG,GAAG,KAAK7F,eAAX;AACH,OAJD,MAIO;AACH;AACA6F,QAAAA,GAAG,GAAG7G,QAAQ,CAACgH,MAAT,EAAN;AACA,aAAKhG,eAAL,GAAuB6F,GAAvB;AACA,aAAK5F,wBAAL,GAAgC8F,eAAhC;AACH,OAbkB,CAenB;AACA;;;AACA,aAAOxP,CAAC,CAAC0P,eAAF,CAAkBJ,GAAlB,CAAP;AACH,KAvBiB,CAyBlB;;;AACAA,IAAAA,GAAG,GAAGtP,CAAC,CAAC0P,eAAF,CAAkBJ,GAAlB,CAAN;AACA,QAAIK,SAAS,GAAG3P,CAAC,CAAC4P,uBAAF,CAA0BN,GAA1B,CAAhB;AACA7G,IAAAA,QAAQ,CAACoH,YAAT,CAAsB,WAAtB,EAAmCF,SAAnC;AAEA,SAAKlG,eAAL,GAAuB6F,GAAvB;AACA,SAAK5F,wBAAL,GAAgCjB,QAAQ,CAACnC,YAAT,CAAsB,WAAtB,CAAhC;AAEA,WAAO,IAAP;AACH,GAvhB4B;AAyhB7BwJ,EAAAA,YAAY,EAAE,YAAW;AAErB,WAAO9P,CAAC,CAAC0P,eAAF,CAAkB,KAAK5E,KAAL,CAAWiF,YAAX,EAAlB,CAAP;AACH,GA5hB4B;AA8hB7B3H,EAAAA,2BAA2B,EAAE,UAAS/C,IAAT,EAAe0C,QAAf,EAAyBC,GAAzB,EAA8B;AACvD,QAAI3C,IAAI,YAAYrD,QAApB,EAA8B;AAC1B,UAAIoI,KAAK,GAAG/E,IAAI,CAAC+E,KAAjB;AACA,UAAI4F,KAAK,GAAG,KAAK5F,KAAL,CAAW6F,iBAAX,CAA6B7F,KAA7B,CAAZ;;AACA,WAAK,IAAI8F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAIG,IAAI,GAAGL,KAAK,CAACE,CAAD,CAAhB;AACA,YAAInL,QAAQ,GAAG,KAAKkI,eAAL,CAAqBoD,IAArB,CAAf;AACA,YAAI,CAACtL,QAAL,EAAe;AACf,YAAIuL,UAAU,GAAG,CAAC,QAAD,CAAjB;AACA,YAAID,IAAI,CAACE,aAAL,OAAyBnG,KAA7B,EAAoCkG,UAAU,CAACE,IAAX,CAAgB,QAAhB;AACpC,YAAIH,IAAI,CAACI,aAAL,OAAyBrG,KAA7B,EAAoCkG,UAAU,CAACE,IAAX,CAAgB,QAAhB;AACpC,YAAIE,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS7I,QAAQ,GAAG,CAApB,EAAuBhD,QAAQ,CAACqI,eAAhC,CAAnB;AACA,aAAKyD,kBAAL,CAAwB9L,QAAxB,EAAkCA,QAAQ,CAAC+L,OAAT,CAAiBR,UAAjB,CAAlC,EAAgEI,YAAhE,EAA8E1I,GAA9E;AACH;AACJ;AACJ,GA7iB4B;AA+iB7BM,EAAAA,wBAAwB,EAAE,UAASjD,IAAT,EAAeyC,IAAf,EAAqB;AAC3C,QAAI,CAACzC,IAAD,IAAS,EAAEA,IAAI,YAAYrD,QAAlB,CAAb,EAA0C,OAAO,KAAP;AAC1C,QAAIoI,KAAK,GAAG/E,IAAI,CAAC+E,KAAjB;AACA,QAAIA,KAAK,CAAC2G,SAAN,EAAJ,EAAuB,OAAO,KAAP;;AACvB,QAAI,CAACjJ,IAAI,GAAGzC,IAAI,CAACyL,OAAL,CAAa,CAAC,QAAD,EAAW,QAAX,CAAb,CAAR,MAAgD,CAApD,EAAuD;AACnD;AACA;AACA,UAAIE,UAAU,GAAG,CAAjB;AACA,UAAIC,UAAU,GAAG,KAAKhE,eAAL,CAAqB7C,KAAK,CAACqG,aAAN,EAArB,CAAjB;;AACA,UAAIQ,UAAU,IAAI,CAAC,KAAKC,aAAL,CAAmBD,UAAnB,CAAnB,EAAmD;AAC/CD,QAAAA,UAAU,GAAG,KAAKG,QAAL,CAAcF,UAAd,CAAb;AACA5L,QAAAA,IAAI,CAAC+L,eAAL,CAAqB,QAArB;AACH;;AACD,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,UAAU,GAAG,KAAKrE,eAAL,CAAqB7C,KAAK,CAACmG,aAAN,EAArB,CAAjB;;AACA,UAAIe,UAAU,IAAI,CAAC,KAAKJ,aAAL,CAAmBI,UAAnB,CAAnB,EAAmD;AAC/CD,QAAAA,UAAU,GAAG,KAAKF,QAAL,CAAcG,UAAd,CAAb;AACAjM,QAAAA,IAAI,CAAC+L,eAAL,CAAqB,QAArB;AACH;;AACD,UAAIJ,UAAU,KAAK,CAAf,IAAoBK,UAAU,KAAK,CAAvC,EAA0C;AACtC;AACA,eAAO,CAAC,KAAKF,QAAL,CAAc9L,IAAd,CAAR;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAxkB4B;AA0kB7B6H,EAAAA,iBAAiB,EAAE,UAAS7H,IAAT,EAAeyC,IAAf,EAAqBC,QAArB,EAA+BC,GAA/B,EAAoC;AACnDA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA,SAAK6I,kBAAL,CAAwBxL,IAAxB,EAA8ByC,IAA9B,EAAoCC,QAApC,EAA8CC,GAA9C;AACA,QAAIiD,OAAO,GAAG,KAAKA,OAAL,EAAd;AACA,QAAI,KAAKD,QAAL,MAAoBC,OAAO,IAAIjD,GAAG,CAACuJ,KAAJ,KAAc,KAAjD,EAAyD;AACzD,QAAI,KAAKnH,KAAL,CAAWoD,cAAX,CAA0B,KAAK1D,uBAA/B,CAAJ,EAA6D;AAC7D,QAAI0H,KAAK,GAAG,KAAKzD,WAAL,CAAiB/F,GAAjB,CAAZ;AACA,QAAIiD,OAAJ,EAAa,KAAKwG,iBAAL,CAAuBD,KAAvB,EAA8BxJ,GAA9B;AAChB,GAllB4B;AAolB7B6I,EAAAA,kBAAkB,EAAE,UAASxL,IAAT,EAAeqM,IAAf,EAAqB3J,QAArB,EAA+BC,GAA/B,EAAoC;AACpD,UAAM;AAAE2B,MAAAA,QAAQ,EAAEgI,OAAZ;AAAqB7N,MAAAA;AAArB,QAAiC,IAAvC;AACA,UAAM;AAAEqJ,MAAAA,WAAF;AAAejF,MAAAA,WAAf;AAA4BkF,MAAAA,eAA5B;AAA6CwE,MAAAA;AAA7C,QAAqDvM,IAA3D;AACA,QAAIwM,eAAe,GAAGF,OAAO,CAACtG,UAAR,CAAmBtD,QAAnB,CAAtB;AACA,QAAI,CAAC8J,eAAL,EAAsBA,eAAe,GAAGF,OAAO,CAACtG,UAAR,CAAmBtD,QAAnB,IAA+B,EAAjD,CAJ8B,CAKpD;;AACA,QAAIA,QAAQ,GAAGqF,eAAf,EAAgC;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAK,IAAI0E,CAAC,GAAG/J,QAAQ,GAAG,CAAxB,EAA2B+J,CAAC,IAAI1E,eAAhC,EAAiD0E,CAAC,EAAlD,EAAsD;AAClD,cAAMC,mBAAmB,GAAGJ,OAAO,CAACtG,UAAR,CAAmByG,CAAnB,CAA5B;AACA,YAAI,CAACC,mBAAD,IAAwB,EAAEH,GAAG,IAAIG,mBAAT,CAA5B,EAA2D;AAC3DF,QAAAA,eAAe,CAACD,GAAD,CAAf,IAAwBG,mBAAmB,CAACH,GAAD,CAA3C;AACA,eAAOG,mBAAmB,CAACH,GAAD,CAA1B;AACH;AACJ;;AACD,QAAII,WAAW,GAAGH,eAAe,CAACD,GAAD,CAAf,IAAwB,CAA1C,CAnBoD,CAoBpD;;AACA,QAAI,CAACI,WAAW,GAAGN,IAAf,MAAyBA,IAA7B,EAAmC;AACnC,QAAI,CAACM,WAAL,EAAkBL,OAAO,CAACjG,KAAR;;AAClB,QAAIgG,IAAI,GAAGvE,WAAP,IAAsB6E,WAAW,GAAG9J,WAAxC,EAAqD;AACjD;AACA2J,MAAAA,eAAe,CAACD,GAAD,CAAf,IAAwB1J,WAAxB;AACH,KAHD,MAGO,IAAIwJ,IAAI,GAAGxJ,WAAP,IAAsB8J,WAAW,GAAG7E,WAAxC,EAAqD;AACxD;AACA0E,MAAAA,eAAe,CAACD,GAAD,CAAf,IAAwBzE,WAAxB;AACH;;AACD0E,IAAAA,eAAe,CAACD,GAAD,CAAf,IAAwBF,IAAxB;AACA,UAAMO,YAAY,GAAGnO,OAAO,CAAC+D,YAA7B;AACA,QAAI,OAAOoK,YAAP,KAAwB,UAA5B,EAAwCA,YAAY,CAACC,IAAb,CAAkB,IAAlB,EAAwB7M,IAAxB,EAA8BqM,IAA9B,EAAoC3J,QAApC,EAA8CC,GAAG,IAAI,EAArD,EAAyD,IAAzD;AAC3C,GArnB4B;AAunB7BmK,EAAAA,cAAc,EAAE,UAAS9M,IAAT,EAAe;AAC3B,QAAI,CAACA,IAAL,EAAW,OAAO,CAAP;AACX,QAAIsM,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIiI,GAAG,GAAGvM,IAAI,CAACuM,GAAf;AACA,QAAIC,eAAe,GAAGF,OAAO,CAACtG,UAAR,CAAmBhG,IAAI,CAAC+H,eAAxB,CAAtB;AACA,QAAItF,IAAI,GAAG,KAAKsK,mBAAL,CAAyB/M,IAAzB,IAAiCwM,eAAe,CAACD,GAAD,CAA3D;AACA,WAAOC,eAAe,CAACD,GAAD,CAAtB;AACA,WAAO9J,IAAP;AACH,GA/nB4B;AAioB7BqJ,EAAAA,QAAQ,EAAE,UAAS9L,IAAT,EAAe2C,GAAf,EAAoB;AAC1B,QAAIF,IAAI,GAAG,KAAKqK,cAAL,CAAoB9M,IAApB,CAAX;AACA,QAAI,CAACyC,IAAL,EAAW,OAAO,CAAP;AACX,WAAO,KAAKuK,UAAL,CAAgBhN,IAAhB,EAAsByC,IAAtB,EAA4BE,GAA5B,CAAP;AACH,GAroB4B;AAuoB7BqK,EAAAA,UAAU,EAAE,UAAShN,IAAT,EAAeyC,IAAf,EAAqBE,GAArB,EAA0B;AAClC,QAAI,CAAC3C,IAAL,EAAW,OAAO,CAAP;AACX,UAAM;AAAE8H,MAAAA,WAAF;AAAejF,MAAAA,WAAf;AAA4BkC,MAAAA;AAA5B,QAAsC/E,IAA5C;;AACA,QAAIA,IAAI,YAAYrD,QAApB,EAA8B;AAC1B,UAAI8F,IAAI,GAAGqF,WAAX,EAAwB;AACpB,aAAKmF,UAAL,CAAgBlI,KAAhB;AACA,eAAO,CAAP;AACH;;AACD,UAAItC,IAAI,GAAGI,WAAX,EAAwB;AACpB,aAAKqK,UAAL,CAAgBlN,IAAhB;AACAyC,QAAAA,IAAI,IAAII,WAAR;AACH;AACJ;;AACD,QAAI,CAACJ,IAAL,EAAW,OAAO,CAAP;AACX,WAAOzC,IAAI,CAACmN,aAAL,CAAmB1K,IAAnB,EAAyBE,GAAG,IAAI,EAAhC,CAAP;AACH,GAtpB4B;AAwpB7ByK,EAAAA,WAAW,EAAE,UAASrI,KAAT,EAAgBpC,GAAhB,EAAqB;AAC9B,QAAI3C,IAAI,GAAG,KAAK4H,eAAL,CAAqB7C,KAArB,CAAX;AACA,QAAI,CAAC/E,IAAL,EAAW,OAAO,IAAP;AACX,SAAK8L,QAAL,CAAc9L,IAAd,EAAoB2C,GAApB;AACA,WAAO3C,IAAP;AACH,GA7pB4B;AA+pB7BqN,EAAAA,qBAAqB,EAAE,UAASrN,IAAT,EAAe;AAClC,QAAIuM,GAAG,GAAGvM,IAAI,CAACuM,GAAf;AACA,QAAID,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIiI,GAAG,IAAID,OAAO,CAACnG,SAAnB,EAA8B,OAAO,CAAP;AAC9B,QAAI1D,IAAI,GAAG6J,OAAO,CAACnG,SAAR,CAAkBoG,GAAlB,KAA0BvM,IAAI,CAAC6C,WAA1C;AACAyJ,IAAAA,OAAO,CAACrG,aAAR,CAAsBkF,IAAtB,CAA2BoB,GAA3B;AACA,WAAOD,OAAO,CAAClG,OAAR,CAAgBmG,GAAhB,CAAP;AACA,WAAO9J,IAAP;AACH,GAvqB4B;AAyqB7BsK,EAAAA,mBAAmB,EAAE,UAAS/M,IAAT,EAAe;AAChC,QAAIuM,GAAG,GAAGvM,IAAI,CAACuM,GAAf;AACA,QAAID,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIiI,GAAG,IAAID,OAAO,CAAClG,OAAnB,EAA4B,OAAO,CAAP;AAC5BkG,IAAAA,OAAO,CAAClG,OAAR,CAAgBmG,GAAhB,IAAuB,IAAvB;AACAD,IAAAA,OAAO,CAACpG,WAAR,CAAoBiF,IAApB,CAAyBoB,GAAzB;AACA,QAAI9J,IAAI,GAAG6J,OAAO,CAACnG,SAAR,CAAkBoG,GAAlB,KAA0B,CAArC;AACA,WAAOD,OAAO,CAACnG,SAAR,CAAkBoG,GAAlB,CAAP;AACA,WAAO9J,IAAP;AACH,GAlrB4B;AAorB7BoJ,EAAAA,aAAa,EAAE,UAAS7L,IAAT,EAAe;AAC1B,QAAI,CAACA,IAAL,EAAW,OAAO,KAAP;AACX,QAAIuM,GAAG,GAAGvM,IAAI,CAACuM,GAAf;AACA,QAAID,OAAO,GAAG,KAAKhI,QAAnB;AACA,WAAQiI,GAAG,IAAID,OAAO,CAAClG,OAAvB;AACH,GAzrB4B;AA2rB7BkH,EAAAA,SAAS,EAAE,UAAS3K,GAAT,EAAc;AACrB,QAAI4K,UAAU,GAAGtS,QAAQ,CAAC,EAAD,EAAK0H,GAAL,EAAU;AAAES,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAzB;AACA,SAAKoK,aAAL,CAAmBD,UAAnB;AACA,SAAK7E,WAAL,CAAiB6E,UAAjB;AACH,GA/rB4B;AAisB7B;AACA7E,EAAAA,WAAW,EAAE,UAAS/F,GAAT,EAAc;AACvB,SAAK8K,kBAAL,CAAwB9K,GAAxB;AACA,QAAI+K,UAAJ;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIlL,QAAQ,GAAGvE,YAAf;;AACA,OAAG;AACCyP,MAAAA,UAAU;AACVF,MAAAA,UAAU,GAAG,KAAKG,gBAAL,CAAsBlL,GAAtB,CAAb;AACAgL,MAAAA,WAAW,IAAID,UAAU,CAACI,OAA1B;AACApL,MAAAA,QAAQ,GAAG4I,IAAI,CAACyC,GAAL,CAASL,UAAU,CAAChL,QAApB,EAA8BA,QAA9B,CAAX;AACH,KALD,QAKS,CAACgL,UAAU,CAACM,KALrB;;AAMA,UAAM7B,KAAK,GAAG;AAAE2B,MAAAA,OAAO,EAAEH,WAAX;AAAwBM,MAAAA,OAAO,EAAEL,UAAjC;AAA6ClL,MAAAA;AAA7C,KAAd;AACA,SAAK0J,iBAAL,CAAuBD,KAAvB,EAA8BxJ,GAA9B;AACA,WAAOwJ,KAAP;AACH,GAjtB4B;AAmtB7B+B,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,UAAMlI,UAAU,GAAG,KAAK1B,QAAL,CAAc0B,UAAjC;AACA,UAAMmI,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYrI,UAAZ,CAAxB,CAF4B,CAEqB;;AACjD,QAAIyG,CAAC,GAAG0B,eAAe,CAACpD,MAAxB;;AACA,WAAO0B,CAAC,GAAG,CAAJ,IAASA,CAAC,EAAjB,EAAqB;AACjB;AACA,WAAK,IAAI6B,IAAT,IAAiBtI,UAAU,CAACmI,eAAe,CAAC1B,CAAD,CAAhB,CAA3B,EAAiD,OAAO,IAAP;AACpD;;AACD,WAAO,KAAP;AACH,GA5tB4B;AA8tB7B5G,EAAAA,gBAAgB,EAAE,UAASlD,GAAT,EAAc0F,IAAd,EAAoB;AAClC1F,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA0F,IAAAA,IAAI,KAAKA,IAAI,GAAG;AAAEkG,MAAAA,SAAS,EAAE,CAAb;AAAgB7L,MAAAA,QAAQ,EAAEvE;AAA1B,KAAZ,CAAJ;AACA,QAAImO,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIyB,EAAE,GAAGuG,OAAO,CAACvG,EAAjB;;AACA,QAAIA,EAAJ,EAAQ;AACJ/K,MAAAA,WAAW,CAAC+K,EAAD,CAAX;;AACA,UAAIsC,IAAI,CAACkG,SAAL,KAAmB,CAAnB,IAAwB,KAAKL,mBAAL,EAA5B,EAAwD;AACpD,aAAKT,kBAAL,CAAwB9K,GAAxB;AACH;;AACD,UAAIwJ,KAAK,GAAG,KAAK0B,gBAAL,CAAsBlL,GAAtB,CAAZ;AACA,UAAI4K,UAAU,GAAGtS,QAAQ,CAAC,EAAD,EAAK0H,GAAL,EAAU;AAC/B6L,QAAAA,cAAc,EAAExQ,gBAAgB,GAAGmO,KAAK,CAAC/F,OADV;AAE/BqI,QAAAA,gBAAgB,EAAEzQ,gBAAgB,GAAGmO,KAAK,CAAChG;AAFZ,OAAV,CAAzB;AAIA,UAAIuI,UAAU,GAAG,KAAKlB,aAAL,CAAmBD,UAAnB,CAAjB;AACA,UAAIoB,YAAY,GAAGD,UAAU,CAACvI,SAA9B;AACA,UAAIyI,UAAU,GAAGF,UAAU,CAACtI,OAA5B;AACA,UAAImI,SAAS,GAAGlG,IAAI,CAACkG,SAArB;AACA,UAAIM,KAAK,GAAGvC,OAAO,CAACjG,KAApB;;AACA,UAAI8F,KAAK,CAAC2B,OAAN,GAAgB,CAApB,EAAuB;AACnB;AACAS,QAAAA,SAAS,IAAIpC,KAAK,CAAC2B,OAAN,GAAgB3B,KAAK,CAAChG,SAAnC;AACAgG,QAAAA,KAAK,CAACoC,SAAN,GAAkBA,SAAlB;AACAlG,QAAAA,IAAI,CAAC3F,QAAL,GAAgB4I,IAAI,CAACyC,GAAL,CAAS5B,KAAK,CAACzJ,QAAf,EAAyB2F,IAAI,CAAC3F,QAA9B,CAAhB;;AACA,YAAIyJ,KAAK,CAAC6B,KAAN,IAAeY,UAAU,KAAK,CAAlC,EAAqC;AACjCzC,UAAAA,KAAK,CAAChG,SAAN,IAAmBwI,YAAnB;AACAxC,UAAAA,KAAK,CAAC/F,OAAN,IAAiBwI,UAAjB;AACAzC,UAAAA,KAAK,CAACzJ,QAAN,GAAiB2F,IAAI,CAAC3F,QAAtB;AACA,eAAK0J,iBAAL,CAAuBD,KAAvB,EAA8BxJ,GAA9B;AACA0F,UAAAA,IAAI,CAACkG,SAAL,GAAiB,CAAjB;AACAjC,UAAAA,OAAO,CAACjG,KAAR,GAAgB,CAAhB;AACH,SAPD,MAOO;AACHgC,UAAAA,IAAI,CAACkG,SAAL,GAAiBA,SAAjB;AACH;AACJ,OA9BG,CA+BJ;;;AACA,UAAIO,UAAU,GAAGnM,GAAG,CAACoM,QAArB;;AACA,UAAIF,KAAK,IAAI,OAAOC,UAAP,KAAsB,UAAnC,EAA+C;AAC3CA,QAAAA,UAAU,CAACjC,IAAX,CAAgB,IAAhB,EAAsBV,KAAK,CAAC6B,KAA5B,EAAmCO,SAAnC,EAA8CM,KAA9C,EAAqD1C,KAArD,EAA4D,IAA5D;AACH,OAnCG,CAoCJ;;;AACA,UAAIG,OAAO,CAACvG,EAAR,KAAeA,EAAnB,EAAuB;AAC1B;;AACDuG,IAAAA,OAAO,CAACvG,EAAR,GAAajL,SAAS,CAAC,KAAK+K,gBAAN,EAAwB,IAAxB,EAA8BlD,GAA9B,EAAmC0F,IAAnC,CAAtB;AACH,GA3wB4B;AA6wB7BoF,EAAAA,kBAAkB,EAAE,UAAS9K,GAAG,GAAG,EAAf,EAAmB;AACnC,QAAIqM,QAAQ,GAAGrM,GAAG,CAACO,YAAnB;;AACA,QAAI,OAAO8L,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,MAAAA,QAAQ,GAAG,KAAKvQ,OAAL,CAAayE,YAAxB;AACA,UAAI,OAAO8L,QAAP,KAAoB,UAAxB,EAAoC;AACvC;;AACDA,IAAAA,QAAQ,CAACnC,IAAT,CAAc,IAAd,EAAoBlK,GAApB,EAAyB,IAAzB;AACH,GApxB4B;AAsxB7ByJ,EAAAA,iBAAiB,EAAE,UAASD,KAAT,EAAgBxJ,GAAG,GAAG,EAAtB,EAA0B;AACzC,QAAIsM,OAAO,GAAGtM,GAAG,CAACQ,WAAlB;;AACA,QAAI,OAAO8L,OAAP,KAAmB,UAAvB,EAAmC;AAC/BA,MAAAA,OAAO,GAAG,KAAKxQ,OAAL,CAAa0E,WAAvB;AACH;;AACD,QAAI,OAAO8L,OAAP,KAAmB,UAAvB,EAAmC;AAC/BA,MAAAA,OAAO,CAACpC,IAAR,CAAa,IAAb,EAAmBV,KAAnB,EAA0BxJ,GAA1B,EAA+B,IAA/B;AACH;;AACD,SAAKuM,OAAL,CAAa,aAAb,EAA4B/C,KAA5B,EAAmCxJ,GAAnC;AACH,GA/xB4B;AAiyB7BkL,EAAAA,gBAAgB,EAAE,UAASlL,GAAT,EAAc;AAC5BA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA,QAAIwM,SAAS,GAAGxM,GAAG,CAACwM,SAAJ,IAAiBlR,iBAAjC;AACA,QAAIqO,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIqJ,WAAW,GAAG,CAAlB;AACA,QAAIyB,aAAa,GAAG,CAApB;AACA,QAAIT,YAAY,GAAG,CAAnB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIS,WAAW,GAAGlR,YAAlB;AACA,QAAI6P,KAAK,GAAG,IAAZ;AACA,QAAIvP,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIuH,UAAU,GAAGsG,OAAO,CAACtG,UAAzB;AACA,QAAIsJ,UAAU,GAAG,cAAc3M,GAAd,GAAoBA,GAAG,CAACS,QAAxB,GAAmC3E,OAAO,CAAC2E,QAA5D;AACA,QAAI,OAAOkM,UAAP,KAAsB,UAA1B,EAAsCA,UAAU,GAAG,IAAb;AACtC,QAAIC,cAAc,GAAG9Q,OAAO,CAACuE,eAA7B;AACA,QAAI,OAAOuM,cAAP,KAA0B,UAA9B,EAA0CA,cAAc,GAAG,IAAjB;AAC1C,QAAIpB,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYrI,UAAZ,CAAtB,CAhB4B,CAgBmB;;AAC/CwJ,IAAAA,IAAI,EAAE,KAAK,IAAI/C,CAAC,GAAG,CAAR,EAAW3B,CAAC,GAAGqD,eAAe,CAACpD,MAApC,EAA4C0B,CAAC,GAAG3B,CAAhD,EAAmD2B,CAAC,EAApD,EAAwD;AAC1D,UAAI/J,QAAQ,GAAGyL,eAAe,CAAC1B,CAAD,CAA9B;AACA,UAAID,eAAe,GAAGxG,UAAU,CAACtD,QAAD,CAAhC;;AACA,WAAK,IAAI6J,GAAT,IAAgBC,eAAhB,EAAiC;AAC7B,YAAImB,WAAW,IAAIwB,SAAnB,EAA8B;AAC1BnB,UAAAA,KAAK,GAAG,KAAR;AACA,gBAAMwB,IAAN;AACH;;AACD,YAAIxP,IAAI,GAAGtD,KAAK,CAAC6P,GAAD,CAAhB;;AACA,YAAI,CAACvM,IAAL,EAAW;AACP;AACA,iBAAOwM,eAAe,CAACD,GAAD,CAAtB;AACA;AACH;;AACD,YAAIkD,WAAW,GAAGjD,eAAe,CAACD,GAAD,CAAjC;;AACA,YAAI,CAACkD,WAAW,GAAGzP,IAAI,CAAC8H,WAApB,MAAqC,CAAzC,EAA4C;AACxC;AACA,cAAI4H,UAAU,IAAGnD,GAAG,IAAID,OAAO,CAACnG,SAAlB,CAAd;;AACA,cAAInG,IAAI,CAAC2P,UAAL,IAAmBL,UAAnB,IAAiC,CAACA,UAAU,CAACzC,IAAX,CAAgB,IAAhB,EAAsB7M,IAAtB,EAA4B,CAAC0P,UAA7B,EAAyC,IAAzC,CAAtC,EAAsF;AAClF;AACA,gBAAI,CAACA,UAAL,EAAiB;AACb,mBAAKrC,qBAAL,CAA2BrN,IAA3B;AACAA,cAAAA,IAAI,CAAC4P,OAAL;AACH;;AACDtD,YAAAA,OAAO,CAACnG,SAAR,CAAkBoG,GAAlB,KAA0BkD,WAA1B;AACA,mBAAOjD,eAAe,CAACD,GAAD,CAAtB;AACAoC,YAAAA,YAAY;AACZ;AACH,WAbuC,CAcxC;;;AACA,cAAIe,UAAJ,EAAgB;AACZD,YAAAA,WAAW,IAAIzP,IAAI,CAAC6C,WAApB;AACA+L,YAAAA,UAAU;AACb;;AACDa,UAAAA,WAAW,IAAI,KAAK1C,mBAAL,CAAyB/M,IAAzB,CAAf;AACH;;AACD,YAAI6P,YAAY,GAAG,KAAK7C,UAAL,CAAgBhN,IAAhB,EAAsByP,WAAtB,EAAmC9M,GAAnC,CAAnB;;AACA,YAAIkN,YAAY,GAAG,CAAnB,EAAsB;AAClB;AACArD,UAAAA,eAAe,CAACD,GAAD,CAAf,GAAuBsD,YAAvB;;AACA,cAAI,CAACN,cAAD,IAAmB,CAACA,cAAc,CAAC1C,IAAf,CAAoB,IAApB,EAA0B7M,IAA1B,EAAgC6P,YAAhC,EAA8C,IAA9C,CAApB,IAA2ErD,eAAe,CAACD,GAAD,CAA9F,EAAqG;AACjG6C,YAAAA,aAAa;AACbpB,YAAAA,KAAK,GAAG,KAAR;AACA;AACH;AACJ;;AACD,YAAIqB,WAAW,GAAG3M,QAAlB,EAA4B2M,WAAW,GAAG3M,QAAd;AAC5BiL,QAAAA,WAAW;AACX,eAAOnB,eAAe,CAACD,GAAD,CAAtB;AACH;AACJ;;AACD,WAAO;AACH7J,MAAAA,QAAQ,EAAE2M,WADP;AAEHvB,MAAAA,OAAO,EAAEH,WAFN;AAGHmC,MAAAA,SAAS,EAAEV,aAHR;AAIHjJ,MAAAA,SAAS,EAAEwI,YAJR;AAKHvI,MAAAA,OAAO,EAAEwI,UALN;AAMHZ,MAAAA,KAAK,EAAEA;AANJ,KAAP;AAQH,GA72B4B;AA+2B7B+B,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,UAAMzD,OAAO,GAAG,KAAKhI,QAArB;AACA,UAAM2B,aAAa,GAAGmI,MAAM,CAACC,IAAP,CAAY/B,OAAO,CAACnG,SAApB,CAAtB;AACA,UAAM2E,CAAC,GAAG7E,aAAa,CAAC8E,MAAxB;AACA,UAAMiF,cAAc,GAAG,IAAIC,KAAJ,CAAUnF,CAAV,CAAvB;;AACA,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,CAApB,EAAuB2B,CAAC,EAAxB,EAA4B;AACxBuD,MAAAA,cAAc,CAACvD,CAAD,CAAd,GAAoB/P,KAAK,CAACuJ,aAAa,CAACwG,CAAD,CAAd,CAAzB;AACH;;AACD,WAAOuD,cAAP;AACH,GAx3B4B;AA03B7BE,EAAAA,eAAe,EAAE,YAAW;AACxB,UAAM5D,OAAO,GAAG,KAAKhI,QAArB;AACA,UAAM4B,WAAW,GAAGkI,MAAM,CAACC,IAAP,CAAY/B,OAAO,CAAClG,OAApB,CAApB;AACA,UAAM0E,CAAC,GAAG5E,WAAW,CAAC6E,MAAtB;AACA,UAAMoF,YAAY,GAAG,IAAIF,KAAJ,CAAUnF,CAAV,CAArB;;AACA,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,CAApB,EAAuB2B,CAAC,EAAxB,EAA4B;AACxB0D,MAAAA,YAAY,CAAC1D,CAAD,CAAZ,GAAkB/P,KAAK,CAACwJ,WAAW,CAACuG,CAAD,CAAZ,CAAvB;AACH;;AACD,WAAO0D,YAAP;AACH,GAn4B4B;AAq4B7BC,EAAAA,mBAAmB,EAAE,UAASd,UAAT,EAAqB3M,GAArB,EAA0B;AAC3CA,IAAAA,GAAG,KAAKA,GAAG,GAAI,EAAZ,CAAH;AACA,QAAIiM,UAAU,GAAG,CAAjB;AACA,QAAI,OAAOU,UAAP,KAAsB,UAA1B,EAAsCA,UAAU,GAAG,IAAb;AACtC,QAAIH,SAAS,GAAG,oBAAoBxM,GAApB,GAA0BA,GAAG,CAAC6L,cAA9B,GAA+CtQ,QAA/D;AACA,QAAIoO,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAI2B,aAAa,GAAGqG,OAAO,CAACrG,aAA5B;AACA,QAAIE,SAAS,GAAGmG,OAAO,CAACnG,SAAxB;;AACA,SAAK,IAAIsG,CAAC,GAAG,CAAR,EAAW3B,CAAC,GAAGQ,IAAI,CAACyC,GAAL,CAAS9H,aAAa,CAAC8E,MAAvB,EAA+BoE,SAA/B,CAApB,EAA+D1C,CAAC,GAAG3B,CAAnE,EAAsE2B,CAAC,EAAvE,EAA2E;AACvE,UAAIF,GAAG,GAAGtG,aAAa,CAACwG,CAAD,CAAvB;AACA,UAAI,EAAEF,GAAG,IAAIpG,SAAT,CAAJ,EAAyB;AACzB,UAAInG,IAAI,GAAGtD,KAAK,CAAC6P,GAAD,CAAhB;AACA,UAAI,CAACvM,IAAL,EAAW;;AACX,UAAIA,IAAI,CAAC2P,UAAL,IAAmBL,UAAnB,IAAiC,CAACA,UAAU,CAACzC,IAAX,CAAgB,IAAhB,EAAsB7M,IAAtB,EAA4B,KAA5B,EAAmC,IAAnC,CAAtC,EAAgF;AAC5E;AACAiG,QAAAA,aAAa,CAACkF,IAAd,CAAmBoB,GAAnB;AACA;AACH;;AACDqC,MAAAA,UAAU;AACV,UAAInM,IAAI,GAAG,KAAKsK,mBAAL,CAAyB/M,IAAzB,CAAX;AACA,UAAIyC,IAAJ,EAAU,KAAK+I,kBAAL,CAAwBxL,IAAxB,EAA8ByC,IAA9B,EAAoCzC,IAAI,CAAC+H,eAAzC,EAA0D;AAAEjF,QAAAA,QAAQ,EAAE;AAAZ,OAA1D;AACb,KArB0C,CAsB3C;;;AACAmD,IAAAA,aAAa,CAACoK,MAAd,CAAqB,CAArB,EAAwB5D,CAAxB;AACA,WAAOmC,UAAP;AACH,GA95B4B;AAg6B7B0B,EAAAA,iBAAiB,EAAE,UAAShB,UAAT,EAAqB3M,GAArB,EAA0B;AACzCA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA,QAAIgM,YAAY,GAAG,CAAnB;AACA,QAAI,OAAOW,UAAP,KAAsB,UAA1B,EAAsC,OAAOX,YAAP;AACtC,QAAIQ,SAAS,GAAG,sBAAsBxM,GAAtB,GAA4BA,GAAG,CAAC8L,gBAAhC,GAAmDvQ,QAAnE;AACA,QAAIoO,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAI4B,WAAW,GAAGoG,OAAO,CAACpG,WAA1B;AACA,QAAIE,OAAO,GAAGkG,OAAO,CAAClG,OAAtB;;AACA,SAAK,IAAIqG,CAAC,GAAG,CAAR,EAAW3B,CAAC,GAAGQ,IAAI,CAACyC,GAAL,CAAS7H,WAAW,CAAC6E,MAArB,EAA6BoE,SAA7B,CAApB,EAA6D1C,CAAC,GAAG3B,CAAjE,EAAoE2B,CAAC,EAArE,EAAyE;AACrE,UAAIF,GAAG,GAAGrG,WAAW,CAACuG,CAAD,CAArB;AACA,UAAI,EAAEF,GAAG,IAAInG,OAAT,CAAJ,EAAuB;AACvB,UAAIpG,IAAI,GAAGtD,KAAK,CAAC6P,GAAD,CAAhB;AACA,UAAI,CAACvM,IAAL,EAAW;;AACX,UAAI,CAACA,IAAI,CAAC2P,UAAN,IAAoBL,UAAU,CAACzC,IAAX,CAAgB,IAAhB,EAAsB7M,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,CAAxB,EAAiE;AAC7D;AACAkG,QAAAA,WAAW,CAACiF,IAAZ,CAAiBoB,GAAjB;AACA;AACH;;AACDoC,MAAAA,YAAY;AACZ,UAAIlM,IAAI,GAAG,KAAK4K,qBAAL,CAA2BrN,IAA3B,CAAX;AACA,UAAIyC,IAAJ,EAAUzC,IAAI,CAAC4P,OAAL;AACb,KArBwC,CAsBzC;;;AACA1J,IAAAA,WAAW,CAACmK,MAAZ,CAAmB,CAAnB,EAAsB5D,CAAtB;AACA,WAAOkC,YAAP;AACH,GAz7B4B;AA27B7BnB,EAAAA,aAAa,EAAE,UAAS7K,GAAT,EAAc;AACzB,QAAI4K,UAAU,GAAGtS,QAAQ,CAAC,EAAD,EAAK0H,GAAL,EAAU;AAC/B6L,MAAAA,cAAc,EAAEtQ,QADe;AAE/BuQ,MAAAA,gBAAgB,EAAEvQ;AAFa,KAAV,CAAzB;AAIA,QAAIoR,UAAU,GAAG,cAAc/B,UAAd,GAA2BA,UAAU,CAACnK,QAAtC,GAAiD,KAAK3E,OAAL,CAAa2E,QAA/E;AACA,QAAImN,cAAc,GAAG,KAAKD,iBAAL,CAAuBhB,UAAvB,EAAmC/B,UAAnC,CAArB;;AACA,QAAIgD,cAAc,GAAG,CAArB,EAAwB;AACpB;AACA,UAAItK,aAAa,GAAG,KAAK3B,QAAL,CAAc2B,aAAlC;AACAsH,MAAAA,UAAU,CAACiB,cAAX,GAA4BlD,IAAI,CAACyC,GAAL,CAAS9H,aAAa,CAAC8E,MAAd,GAAuBwF,cAAhC,EAAgDhD,UAAU,CAACiB,cAA3D,CAA5B;AACH;;AACD,QAAIgC,YAAY,GAAG,KAAKJ,mBAAL,CAAyBd,UAAzB,EAAqC/B,UAArC,CAAnB;AACA,WAAO;AACHnH,MAAAA,OAAO,EAAEoK,YADN;AAEHrK,MAAAA,SAAS,EAAEoK;AAFR,KAAP;AAIH,GA58B4B;AA88B7B9I,EAAAA,MAAM,EAAE,UAAS9E,GAAT,EAAc;AAClBA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA,QAAI2J,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIoD,GAAG,GAAG/E,GAAG,CAAC+E,GAAd;AACA,QAAI/B,QAAQ,GAAG,KAAKlH,OAAL,CAAa8D,MAA5B;AACA,QAAIgE,SAAS,GAAG+F,OAAO,CAAC/F,SAAxB;;AACA,QAAImB,GAAG,IAAIA,GAAG,KAAKnB,SAAnB,EAA+B;AAC3B;AACA,UAAIZ,QAAQ,IAAIY,SAAhB,EAA2B;AAC3B+F,MAAAA,OAAO,CAAC/F,SAAR,GAAoBmB,GAApB;AACA4E,MAAAA,OAAO,CAAChG,SAAR,GAAoBX,QAApB;AACH;;AACD,SAAKlH,OAAL,CAAa8D,MAAb,GAAsB,IAAtB;AACA,QAAIwD,EAAE,GAAGuG,OAAO,CAACvG,EAAjB;AACAuG,IAAAA,OAAO,CAACvG,EAAR,GAAa,IAAb;AACA,QAAI,KAAKH,OAAL,MAAkBG,EAAtB,EAA0B/K,WAAW,CAAC+K,EAAD,CAAX;AAC7B,GA99B4B;AAg+B7B4B,EAAAA,QAAQ,EAAE,UAAShF,GAAT,EAAc;AACpBA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA,QAAI2J,OAAO,GAAG,KAAKhI,QAAnB;AACA,QAAIoD,GAAG,GAAG/E,GAAG,CAAC+E,GAAd;AACA,QAAInB,SAAS,GAAG+F,OAAO,CAAC/F,SAAxB,CAJoB,CAKpB;;AACA,QAAImB,GAAG,IAAInB,SAAP,IAAoBmB,GAAG,KAAKnB,SAAhC,EAA2C;AAC3C+F,IAAAA,OAAO,CAAC/F,SAAR,GAAoB,IAApB,CAPoB,CAQpB;;AACA,QAAImB,GAAG,IAAIA,GAAG,KAAKnB,SAAf,IAA4B+F,OAAO,CAAChG,SAAxC,EAAmD;;AACnD,QAAI,KAAKV,OAAL,EAAJ,EAAoB;AAChB,WAAK6B,MAAL;AACA,WAAK5B,gBAAL,CAAsBlD,GAAtB;AACH,KAHD,MAGO;AACH,WAAK+F,WAAL,CAAiB/F,GAAjB;AACH;;AACD,SAAKlE,OAAL,CAAa8D,MAAb,GAAsB+J,OAAO,CAAChG,SAAR,GAAoB,KAA1C;;AACA,QAAIgG,OAAO,CAAC9F,IAAZ,EAAkB;AACd,WAAK4B,SAAL;AACAkE,MAAAA,OAAO,CAAC9F,IAAR,GAAe,KAAf;AACH;AACJ,GAr/B4B;AAu/B7BZ,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,CAAC,CAAC,KAAKnH,OAAL,CAAayN,KAAtB;AACH,GAz/B4B;AA2/B7BvG,EAAAA,QAAQ,EAAE,YAAW;AACjB,WAAO,CAAC,CAAC,KAAKlH,OAAL,CAAa8D,MAAtB;AACH,GA7/B4B;AA+/B7BkO,EAAAA,cAAc,EAAE,YAAW;AACvB,WAAO,KAAKhS,OAAL,CAAa6D,OAAb,KAAyB/E,YAAY,CAACG,KAA7C;AACH,GAjgC4B;AAmgC7BgT,EAAAA,QAAQ,EAAE,YAAW;AAEjB,SAAKjJ,MAAL,GAFiB,CAGjB;;AACA,SAAKkJ,WAAL;AACH,GAxgC4B;AA0gC7BC,EAAAA,eAAe,EAAE,YAAW;AAExB,QAAInS,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIoS,CAAC,GAAGpS,OAAO,CAACO,KAAhB;AACA,QAAI8R,CAAC,GAAGrS,OAAO,CAACQ,MAAhB;AACA,QAAI,CAACrE,QAAQ,CAACiW,CAAD,CAAb,EAAkBA,CAAC,GAAG,KAAKjM,EAAL,CAAQmM,WAAZ;AAClB,QAAI,CAACnW,QAAQ,CAACkW,CAAD,CAAb,EAAkBA,CAAC,GAAG,KAAKlM,EAAL,CAAQoM,YAAZ;AAClB,WAAO;AAAEhS,MAAAA,KAAK,EAAE6R,CAAT;AAAY5R,MAAAA,MAAM,EAAE6R;AAApB,KAAP;AACH,GAlhC4B;AAohC7B3L,EAAAA,aAAa,EAAE,UAASnG,KAAT,EAAgBC,MAAhB,EAAwB;AAEnC,QAAIR,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIoS,CAAC,GAAI7R,KAAK,KAAKkL,SAAX,GAAwBzL,OAAO,CAACO,KAAhC,GAAwCA,KAAhD;AACA,QAAI8R,CAAC,GAAI7R,MAAM,KAAKiL,SAAZ,GAAyBzL,OAAO,CAACQ,MAAjC,GAA0CA,MAAlD;AACA,SAAKR,OAAL,CAAaO,KAAb,GAAqB6R,CAArB;AACA,SAAKpS,OAAL,CAAaQ,MAAb,GAAsB6R,CAAtB;AACA,QAAIlW,QAAQ,CAACiW,CAAD,CAAZ,EAAiBA,CAAC,GAAGvF,IAAI,CAAC2F,KAAL,CAAWJ,CAAX,CAAJ;AACjB,QAAIjW,QAAQ,CAACkW,CAAD,CAAZ,EAAiBA,CAAC,GAAGxF,IAAI,CAAC2F,KAAL,CAAWH,CAAX,CAAJ;AACjB,SAAKI,GAAL,CAASC,GAAT,CAAa;AACTnS,MAAAA,KAAK,EAAG6R,CAAC,KAAK,IAAP,GAAe,EAAf,GAAoBA,CADlB;AAET5R,MAAAA,MAAM,EAAG6R,CAAC,KAAK,IAAP,GAAe,EAAf,GAAoBA;AAFnB,KAAb;AAIA,QAAIM,YAAY,GAAG,KAAKR,eAAL,EAAnB;AACA,SAAK1B,OAAL,CAAa,QAAb,EAAuBkC,YAAY,CAACpS,KAApC,EAA2CoS,YAAY,CAACnS,MAAxD;AACH,GAniC4B;AAqiC7BoS,EAAAA,SAAS,EAAE,UAASC,EAAT,EAAaC,EAAb,EAAiB;AAExB,WAAO,KAAKC,SAAL,CAAeF,EAAE,IAAI,CAArB,EAAwBC,EAAE,IAAI,CAA9B,EAAiC;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAjC,CAAP;AACH,GAxiC4B;AA0iC7B;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,UAASC,SAAT,EAAoBC,UAApB,EAAgClT,OAAhC,EAAyCiE,GAAzC,EAA8C;AAAE;AAE1D,QAAI5H,QAAQ,CAAC4W,SAAD,CAAZ,EAAyB;AACrB;AACAhP,MAAAA,GAAG,GAAGgP,SAAN;AACAA,MAAAA,SAAS,GAAGhP,GAAG,CAACgP,SAAJ,IAAiB,CAA7B;AACAC,MAAAA,UAAU,GAAGjP,GAAG,CAACiP,UAAJ,IAAkB,CAA/B;AACAlT,MAAAA,OAAO,GAAGiE,GAAG,CAACjE,OAAJ,IAAe,CAAzB;AAEH,KAPD,MAOO;AAEHiE,MAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACAgP,MAAAA,SAAS,GAAGA,SAAS,IAAI,CAAzB;AACAC,MAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;AACAlT,MAAAA,OAAO,GAAGA,OAAO,IAAI,CAArB;AACH,KAfuD,CAiBxD;;;AAEAA,IAAAA,OAAO,GAAGtD,cAAc,CAACsD,OAAD,CAAxB;AAEA,QAAImT,IAAI,GAAI,iBAAiBlP,GAAlB,GAAyB,IAAIrG,IAAJ,CAASqG,GAAG,CAACmP,WAAb,CAAzB,GAAqD,KAAKC,cAAL,CAAoBpP,GAApB,CAAhE;AAEA,QAAIqP,YAAY,GAAG,KAAKC,KAAL,EAAnB;AACA,QAAIC,gBAAgB,GAAG,KAAKV,SAAL,EAAvB;AACA,QAAIW,EAAE,GAAGH,YAAY,CAACG,EAAtB;AACA,QAAIC,EAAE,GAAGJ,YAAY,CAACI,EAAtB;AAEAP,IAAAA,IAAI,CAAC1S,CAAL,IAAUgT,EAAV;AACAN,IAAAA,IAAI,CAACzS,CAAL,IAAUgT,EAAV;AACAP,IAAAA,IAAI,CAAC7S,KAAL,IAAcmT,EAAd;AACAN,IAAAA,IAAI,CAAC5S,MAAL,IAAemT,EAAf;AAEA,QAAIC,SAAS,GAAG/G,IAAI,CAACC,GAAL,CAASD,IAAI,CAACgH,IAAL,CAAU,CAACT,IAAI,CAAC7S,KAAL,GAAa6S,IAAI,CAAC1S,CAAnB,IAAwBwS,SAAlC,CAAT,EAAuD,CAAvD,IAA4DA,SAA5E;AACA,QAAIY,UAAU,GAAGjH,IAAI,CAACC,GAAL,CAASD,IAAI,CAACgH,IAAL,CAAU,CAACT,IAAI,CAAC5S,MAAL,GAAc4S,IAAI,CAACzS,CAApB,IAAyBwS,UAAnC,CAAT,EAAyD,CAAzD,IAA8DA,UAA/E;AAEA,QAAIY,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT;;AAEA,QAAK9P,GAAG,CAAC+P,cAAJ,IAAsB,UAAtB,IAAoCb,IAAI,CAAC1S,CAAL,GAAS,CAA9C,IAAqDwD,GAAG,CAAC+P,cAAJ,IAAsB,UAAtB,IAAoCb,IAAI,CAAC1S,CAAL,IAAU,CAAnG,IAAyGwD,GAAG,CAAC+P,cAAJ,IAAsB,KAAnI,EAA0I;AACtIF,MAAAA,EAAE,GAAGlH,IAAI,CAACgH,IAAL,CAAU,CAACT,IAAI,CAAC1S,CAAN,GAAUwS,SAApB,IAAiCA,SAAtC;AACAa,MAAAA,EAAE,IAAI9T,OAAO,CAACiU,IAAd;AACAN,MAAAA,SAAS,IAAIG,EAAb;AACH;;AAED,QAAK7P,GAAG,CAAC+P,cAAJ,IAAsB,UAAtB,IAAoCb,IAAI,CAACzS,CAAL,GAAS,CAA9C,IAAqDuD,GAAG,CAAC+P,cAAJ,IAAsB,UAAtB,IAAoCb,IAAI,CAACzS,CAAL,IAAU,CAAnG,IAAyGuD,GAAG,CAAC+P,cAAJ,IAAsB,KAAnI,EAA0I;AACtID,MAAAA,EAAE,GAAGnH,IAAI,CAACgH,IAAL,CAAU,CAACT,IAAI,CAACzS,CAAN,GAAUwS,UAApB,IAAkCA,UAAvC;AACAa,MAAAA,EAAE,IAAI/T,OAAO,CAACkU,GAAd;AACAL,MAAAA,UAAU,IAAIE,EAAd;AACH;;AAEDJ,IAAAA,SAAS,IAAI3T,OAAO,CAACmU,KAArB;AACAN,IAAAA,UAAU,IAAI7T,OAAO,CAACoU,MAAtB,CApDwD,CAsDxD;;AACAT,IAAAA,SAAS,GAAG/G,IAAI,CAACC,GAAL,CAAS8G,SAAT,EAAoB1P,GAAG,CAACoQ,QAAJ,IAAgB,CAApC,CAAZ;AACAR,IAAAA,UAAU,GAAGjH,IAAI,CAACC,GAAL,CAASgH,UAAT,EAAqB5P,GAAG,CAACqQ,SAAJ,IAAiB,CAAtC,CAAb,CAxDwD,CA0DxD;;AACAX,IAAAA,SAAS,GAAG/G,IAAI,CAACyC,GAAL,CAASsE,SAAT,EAAoB1P,GAAG,CAACsQ,QAAJ,IAAgBC,MAAM,CAACC,SAA3C,CAAZ;AACAZ,IAAAA,UAAU,GAAGjH,IAAI,CAACyC,GAAL,CAASwE,UAAT,EAAqB5P,GAAG,CAACyQ,SAAJ,IAAiBF,MAAM,CAACC,SAA7C,CAAb;AAEA,QAAI/B,YAAY,GAAG,KAAKR,eAAL,EAAnB;AACA,QAAIyC,eAAe,GAAGhB,SAAS,IAAIjB,YAAY,CAACpS,KAA1B,IAAmCuT,UAAU,IAAInB,YAAY,CAACnS,MAApF;AACA,QAAIqU,YAAY,GAAGd,EAAE,IAAIN,gBAAgB,CAACM,EAAvB,IAA6BC,EAAE,IAAIP,gBAAgB,CAACO,EAAvE,CAhEwD,CAkExD;;AACA,QAAIa,YAAJ,EAAkB;AACd,WAAK9B,SAAL,CAAegB,EAAf,EAAmBC,EAAnB;AACH;;AACD,QAAIY,eAAJ,EAAqB;AACjB,WAAKlO,aAAL,CAAmBkN,SAAnB,EAA8BE,UAA9B;AACH;;AAED,WAAO,IAAIjW,IAAJ,CAAS,CAACkW,EAAD,GAAML,EAAf,EAAmB,CAACM,EAAD,GAAML,EAAzB,EAA6BC,SAAS,GAAGF,EAAzC,EAA6CI,UAAU,GAAGH,EAA1D,CAAP;AACH,GAznC4B;AA2nC7BmB,EAAAA,iBAAiB,EAAE,UAAS5Q,GAAT,EAAc;AAE7BA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AAEA,QAAI6Q,WAAJ,EAAiBC,kBAAjB;;AACA,QAAI,iBAAiB9Q,GAArB,EAA0B;AACtB,UAAImP,WAAW,GAAGnP,GAAG,CAACmP,WAAtB;AACA0B,MAAAA,WAAW,GAAG,KAAKE,gBAAL,CAAsB5B,WAAtB,CAAd;AACA2B,MAAAA,kBAAkB,GAAG,IAAIlX,KAAJ,CAAUuV,WAAV,CAArB;AACH,KAJD,MAIO;AACH0B,MAAAA,WAAW,GAAG,KAAKG,cAAL,CAAoBhR,GAApB,CAAd;AACA8Q,MAAAA,kBAAkB,GAAG,KAAKG,iBAAL,CAAuBJ,WAAvB,CAArB;AACH;;AAED,QAAI,CAACA,WAAW,CAACxU,KAAb,IAAsB,CAACwU,WAAW,CAACvU,MAAvC,EAA+C;AAE/ChE,IAAAA,QAAQ,CAAC0H,GAAD,EAAM;AACVjE,MAAAA,OAAO,EAAE,CADC;AAEVmV,MAAAA,mBAAmB,EAAE,IAFX;AAGVC,MAAAA,SAAS,EAAE,IAHD;AAIVC,MAAAA,QAAQ,EAAE,CAJA;AAKVC,MAAAA,QAAQ,EAAEd,MAAM,CAACC,SALP,CAMV;AACA;AACA;AACA;AACA;;AAVU,KAAN,CAAR;AAaA,QAAIzU,OAAO,GAAGtD,cAAc,CAACuH,GAAG,CAACjE,OAAL,CAA5B;AAEA,QAAIuV,SAAS,GAAGtR,GAAG,CAACsR,SAAJ,IAAiBtR,GAAG,CAACoR,QAArC;AACA,QAAIG,SAAS,GAAGvR,GAAG,CAACuR,SAAJ,IAAiBvR,GAAG,CAACqR,QAArC;AACA,QAAIG,SAAS,GAAGxR,GAAG,CAACwR,SAAJ,IAAiBxR,GAAG,CAACoR,QAArC;AACA,QAAIK,SAAS,GAAGzR,GAAG,CAACyR,SAAJ,IAAiBzR,GAAG,CAACqR,QAArC;AAEA,QAAIK,WAAJ;;AACA,QAAI1R,GAAG,CAAC0R,WAAR,EAAqB;AACjBA,MAAAA,WAAW,GAAG1R,GAAG,CAAC0R,WAAlB;AACH,KAFD,MAEO;AACH,UAAInC,gBAAgB,GAAG,KAAKV,SAAL,EAAvB;AACA,UAAIJ,YAAY,GAAG,KAAKR,eAAL,EAAnB;AACAyD,MAAAA,WAAW,GAAG;AACVlV,QAAAA,CAAC,EAAE+S,gBAAgB,CAACM,EADV;AAEVpT,QAAAA,CAAC,EAAE8S,gBAAgB,CAACO,EAFV;AAGVzT,QAAAA,KAAK,EAAEoS,YAAY,CAACpS,KAHV;AAIVC,QAAAA,MAAM,EAAEmS,YAAY,CAACnS;AAJX,OAAd;AAMH;;AAEDoV,IAAAA,WAAW,GAAG,IAAI/X,IAAJ,CAAS+X,WAAT,EAAsBC,aAAtB,CAAoC;AAC9CnV,MAAAA,CAAC,EAAET,OAAO,CAACiU,IADmC;AAE9CvT,MAAAA,CAAC,EAAEV,OAAO,CAACkU,GAFmC;AAG9C5T,MAAAA,KAAK,EAAE,CAACN,OAAO,CAACiU,IAAT,GAAgBjU,OAAO,CAACmU,KAHe;AAI9C5T,MAAAA,MAAM,EAAE,CAACP,OAAO,CAACkU,GAAT,GAAelU,OAAO,CAACoU;AAJe,KAApC,CAAd;AAOA,QAAId,YAAY,GAAG,KAAKC,KAAL,EAAnB;AAEA,QAAIsC,KAAK,GAAGF,WAAW,CAACrV,KAAZ,GAAoBwU,WAAW,CAACxU,KAAhC,GAAwCgT,YAAY,CAACG,EAAjE;AACA,QAAIqC,KAAK,GAAGH,WAAW,CAACpV,MAAZ,GAAqBuU,WAAW,CAACvU,MAAjC,GAA0C+S,YAAY,CAACI,EAAnE;;AAEA,QAAIzP,GAAG,CAACkR,mBAAR,EAA6B;AACzBU,MAAAA,KAAK,GAAGC,KAAK,GAAGlJ,IAAI,CAACyC,GAAL,CAASwG,KAAT,EAAgBC,KAAhB,CAAhB;AACH,KAhE4B,CAkE7B;;;AACA,QAAI7R,GAAG,CAACmR,SAAR,EAAmB;AAEf,UAAIzU,QAAQ,GAAGsD,GAAG,CAACmR,SAAnB;AAEAS,MAAAA,KAAK,GAAGlV,QAAQ,GAAGiM,IAAI,CAACmJ,KAAL,CAAWF,KAAK,GAAGlV,QAAnB,CAAnB;AACAmV,MAAAA,KAAK,GAAGnV,QAAQ,GAAGiM,IAAI,CAACmJ,KAAL,CAAWD,KAAK,GAAGnV,QAAnB,CAAnB;AACH,KAzE4B,CA2E7B;;;AACAkV,IAAAA,KAAK,GAAGjJ,IAAI,CAACyC,GAAL,CAASmG,SAAT,EAAoB5I,IAAI,CAACC,GAAL,CAAS0I,SAAT,EAAoBM,KAApB,CAApB,CAAR;AACAC,IAAAA,KAAK,GAAGlJ,IAAI,CAACyC,GAAL,CAASqG,SAAT,EAAoB9I,IAAI,CAACC,GAAL,CAAS4I,SAAT,EAAoBK,KAApB,CAApB,CAAR;AAEA,QAAItV,MAAM,GAAG,KAAKT,OAAL,CAAaS,MAA1B;AACA,QAAIwV,KAAK,GAAGL,WAAW,CAAClV,CAAZ,GAAgBsU,kBAAkB,CAACtU,CAAnB,GAAuBoV,KAAvC,GAA+CrV,MAAM,CAACC,CAAlE;AACA,QAAIwV,KAAK,GAAGN,WAAW,CAACjV,CAAZ,GAAgBqU,kBAAkB,CAACrU,CAAnB,GAAuBoV,KAAvC,GAA+CtV,MAAM,CAACE,CAAlE;AAEA,SAAK6S,KAAL,CAAWsC,KAAX,EAAkBC,KAAlB;AACA,SAAKhD,SAAL,CAAekD,KAAf,EAAsBC,KAAtB;AACH,GAhtC4B;AAktC7B;AACA5C,EAAAA,cAAc,EAAE,UAASpP,GAAT,EAAc;AAE1B,QAAIA,GAAG,IAAIA,GAAG,CAACiS,gBAAf,EAAiC;AAC7B,aAAO,KAAK7P,KAAL,CAAW8P,OAAX,MAAwB,IAAIvY,IAAJ,EAA/B;AACH;;AAED,WAAO3B,CAAC,CAAC,KAAK8K,KAAN,CAAD,CAAcoP,OAAd,EAAP;AACH,GA1tC4B;AA4tC7B;AACAlB,EAAAA,cAAc,EAAE,UAAShR,GAAT,EAAc;AAE1B,WAAO,KAAK+Q,gBAAL,CAAsB,KAAK3B,cAAL,CAAoBpP,GAApB,CAAtB,CAAP;AACH,GAhuC4B;AAkuC7B;AACA;AACA;AACAmS,EAAAA,OAAO,EAAE,YAAW;AAEhB,WAAO,KAAKC,gBAAL,CAAsB,KAAKnE,eAAL,EAAtB,CAAP;AACH,GAxuC4B;AA0uC7BoE,EAAAA,iBAAiB,EAAE,UAAS,GAAGC,IAAZ,EAAkB;AAEjC,UAAM;AAAE7U,MAAAA;AAAF,QAAwB,KAAK3B,OAAnC;AAEA,QAAIyW,cAAJ;;AACA,QAAI7Z,UAAU,CAAC+E,iBAAD,CAAd,EAAmC;AAC/B;AACA8U,MAAAA,cAAc,GAAG9U,iBAAiB,CAAC+U,KAAlB,CAAwB,IAAxB,EAA8BF,IAA9B,CAAjB;AACH,KAHD,MAGO,IAAI7U,iBAAiB,KAAK,IAA1B,EAAgC;AACnC;AACA8U,MAAAA,cAAc,GAAG,KAAKJ,OAAL,EAAjB;AACH,KAHM,MAGA,IAAI,CAAC1U,iBAAL,EAAwB;AAC3B;AACA8U,MAAAA,cAAc,GAAG,IAAjB;AACH,KAHM,MAGA;AACH;AACAA,MAAAA,cAAc,GAAG,IAAI5Y,IAAJ,CAAS8D,iBAAT,CAAjB;AACH;;AAED,WAAO8U,cAAP;AACH,GA9vC4B;AAgwC7BE,EAAAA,kBAAkB,EAAE,UAAShO,IAAT,EAAe;AAE/B;AACA,QAAIiO,iBAAJ,CAH+B,CAK/B;;AACA,QAAIC,gBAAJ,CAN+B,CAQ/B;AACA;;AACA,QAAIxM,SAAS,GAAG,KAAKrK,OAAL,CAAa4E,iBAA7B;AACA,QAAIgJ,IAAI,GAAGjF,IAAI,CAACmO,GAAL,CAAS,MAAT,IAAmB,MAA9B;AACA,QAAIC,kBAAkB,GAAGja,SAAS,CAACuN,SAAD,EAAYuD,IAAZ,EAAkB,GAAlB,CAAlC;;AAEA,QAAIjF,IAAI,CAACqO,MAAL,EAAJ,EAAmB;AACfJ,MAAAA,iBAAiB,GAAG,KAAK5W,OAAL,CAAaiB,QAAjC;AACA4V,MAAAA,gBAAgB,GAAGzY,QAAnB;AACH,KAHD,MAGO;AACHwY,MAAAA,iBAAiB,GAAG,KAAK5W,OAAL,CAAagB,WAAjC;AACA6V,MAAAA,gBAAgB,GAAG1Y,WAAnB;AACH,KApB8B,CAsB/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAI8Y,SAAS,GAAIL,iBAAiB,CAACM,SAAlB,YAAuCrY,QAAQ,CAACb,IAAjD,GACV+Y,kBAAkB,IAAIH,iBADZ,GAEVA,iBAAiB,CAACxI,IAAlB,CAAuB,IAAvB,EAA6BzF,IAA7B,KAAsCoO,kBAAtC,IAA4DF,gBAFlE;AAIA,WAAO,IAAII,SAAJ,CAAc;AACjB3Q,MAAAA,KAAK,EAAEqC,IADU;AAEjBrF,MAAAA,WAAW,EAAE,KAAKtD,OAAL,CAAasD;AAFT,KAAd,CAAP;AAIH,GAryC4B;AAuyC7BkL,EAAAA,UAAU,EAAE,UAAS7F,IAAT,EAAe;AAEvB,UAAM;AAAErB,MAAAA;AAAF,QAASqB,IAAf;AACA,UAAM;AAAE/B,MAAAA,MAAF;AAAUf,MAAAA;AAAV,QAAuB,IAA7B;AACA,UAAMtE,IAAI,GAAGqF,MAAM,CAACU,EAAD,CAAnB;;AACA,QAAI/F,IAAJ,EAAU;AACN,UAAI;AAAEuM,QAAAA;AAAF,UAAUvM,IAAd;AACA,YAAM;AAAEoG,QAAAA,OAAF;AAAWD,QAAAA;AAAX,UAAyB7B,QAA/B;AACAtE,MAAAA,IAAI,CAAC4V,MAAL;AACA,aAAOvQ,MAAM,CAACU,EAAD,CAAb;AACA,aAAOK,OAAO,CAACmG,GAAD,CAAd;AACA,aAAOpG,SAAS,CAACoG,GAAD,CAAhB;AACH;;AACD,WAAOvM,IAAP;AACH,GArzC4B;AAuzC7BuH,EAAAA,UAAU,EAAE,UAASH,IAAT,EAAezE,GAAf,EAAoB;AAE5B,QAAIoD,EAAE,GAAGqB,IAAI,CAACrB,EAAd;AACA,QAAIrJ,KAAK,GAAG,KAAK2I,MAAjB;AACA,QAAIrF,IAAJ,EAAUyC,IAAV;;AACA,QAAIsD,EAAE,IAAIrJ,KAAV,EAAiB;AACbsD,MAAAA,IAAI,GAAGtD,KAAK,CAACqJ,EAAD,CAAZ;AACAtD,MAAAA,IAAI,GAAGzC,IAAI,CAAC6C,WAAZ;AACH,KAHD,MAGO;AACH7C,MAAAA,IAAI,GAAGtD,KAAK,CAAC0K,IAAI,CAACrB,EAAN,CAAL,GAAiB,KAAKqP,kBAAL,CAAwBhO,IAAxB,CAAxB;AACApH,MAAAA,IAAI,CAAC4C,KAAL,GAAa,IAAb;AACAH,MAAAA,IAAI,GAAG,KAAK4K,qBAAL,CAA2BrN,IAA3B,IAAmCA,IAAI,CAACyL,OAAL,CAAazL,IAAI,CAAC6V,QAAlB,CAA1C;AACH;;AACD,SAAKhO,iBAAL,CAAuB7H,IAAvB,EAA6ByC,IAA7B,EAAmCzC,IAAI,CAAC+H,eAAxC,EAAyDpF,GAAzD;AACA,WAAO3C,IAAP;AACH,GAt0C4B;AAw0C7B8V,EAAAA,gBAAgB,EAAE,YAAW;AACzB;AACA;AAEA,WAAO,KAAP;AACH,GA70C4B;AA+0C7BvQ,EAAAA,UAAU,EAAE,UAASE,KAAT,EAAgB9C,GAAhB,EAAqB;AAC7BA,IAAAA,GAAG,KAAKA,GAAG,GAAG,EAAX,CAAH;AACA8C,IAAAA,KAAK,KAAKA,KAAK,GAAG,EAAb,CAAL;;AACA,SAAKK,aAAL,GAH6B,CAI7B;;;AACA,SAAK6K,WAAL;AACA,SAAKlJ,MAAL,CAAY;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAZ;;AACA,SAAK,IAAI+E,CAAC,GAAG,CAAR,EAAW3B,CAAC,GAAGrF,KAAK,CAACsF,MAA1B,EAAkC0B,CAAC,GAAG3B,CAAtC,EAAyC2B,CAAC,EAA1C,EAA8C;AAC1C,WAAKlF,UAAL,CAAgB9B,KAAK,CAACgH,CAAD,CAArB,EAA0B9J,GAA1B;AACH;;AACD,SAAKgF,QAAL,CAAc;AAAED,MAAAA,GAAG,EAAE;AAAP,KAAd;AACA,SAAKU,SAAL;AACH,GA31C4B;AA61C7BuI,EAAAA,WAAW,EAAE,YAAW;AAEpB5U,IAAAA,MAAM,CAAC,KAAKsJ,MAAN,EAAc,QAAd,CAAN;AAEA,SAAKA,MAAL,GAAc,EAAd;AACH,GAl2C4B;AAo2C7B+C,EAAAA,SAAS,EAAE,YAAW;AAElB,QAAI,CAAC,KAAKqI,cAAL,EAAL,EAA4B;AACxB;AACA;AACH;;AACD,QAAI,KAAK9K,QAAL,EAAJ,EAAqB;AACjB;AACA,WAAKrB,QAAL,CAAckC,IAAd,GAAqB,IAArB;AACA;AACH;;AACD,SAAKuP,cAAL;AACH,GAh3C4B;AAk3C7BA,EAAAA,cAAc,EAAE,YAAW;AAEvB;AACA;AAEA,QAAIC,MAAM,GAAG3Y,CAAC,CAAC,KAAKoI,KAAN,CAAD,CAAcmD,QAAd,CAAuB,YAAvB,CAAb;AACA,QAAInD,KAAK,GAAG,KAAKV,KAAL,CAAWwQ,GAAX,CAAe,OAAf,CAAZ;AAEA/Z,IAAAA,YAAY,CAACwa,MAAD,EAAS,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChC,UAAIC,KAAK,GAAG1Q,KAAK,CAAC8P,GAAN,CAAUU,CAAC,CAAChV,YAAF,CAAe,UAAf,CAAV,CAAZ;AACA,UAAImV,KAAK,GAAG3Q,KAAK,CAAC8P,GAAN,CAAUW,CAAC,CAACjV,YAAF,CAAe,UAAf,CAAV,CAAZ;AACA,UAAIoV,EAAE,GAAGF,KAAK,CAAC3Q,UAAN,CAAiB8Q,CAAjB,IAAsB,CAA/B;AACA,UAAIC,EAAE,GAAGH,KAAK,CAAC5Q,UAAN,CAAiB8Q,CAAjB,IAAsB,CAA/B;AACA,aAAQD,EAAE,KAAKE,EAAR,GAAc,CAAd,GAAmBF,EAAE,GAAGE,EAAN,GAAY,CAAC,CAAb,GAAiB,CAA1C;AACH,KANW,CAAZ;AAOH,GAj4C4B;AAo4C7BrJ,EAAAA,UAAU,EAAE,UAASlN,IAAT,EAAe;AACvB,QAAIwW,KAAK,GAAG,KAAK/Q,KAAjB;;AACA,YAAQ,KAAKhH,OAAL,CAAa6D,OAArB;AACI,WAAK/E,YAAY,CAACE,MAAlB;AACI,YAAI6Y,CAAC,GAAGtW,IAAI,CAAC+E,KAAL,CAAWwQ,GAAX,CAAe,GAAf,CAAR;AACA,YAAIkB,KAAK,GAAG,KAAKC,SAAL,CAAeJ,CAAf,CAAZ;AACAE,QAAAA,KAAK,CAACG,YAAN,CAAmB3W,IAAI,CAAC4E,EAAxB,EAA4B6R,KAA5B;AACA;;AACJ,WAAKlZ,YAAY,CAACG,KAAlB;AACA;AACI8Y,QAAAA,KAAK,CAACI,WAAN,CAAkB5W,IAAI,CAAC4E,EAAvB;AACA;AATR;AAWH,GAj5C4B;AAm5C7B8R,EAAAA,SAAS,EAAE,UAASJ,CAAT,EAAY;AACnBA,IAAAA,CAAC,GAAG,CAACA,CAAL;AACAA,IAAAA,CAAC,KAAKA,CAAC,GAAG,CAAT,CAAD;AACA,QAAIO,MAAM,GAAG,KAAK1S,QAAlB;AACA,QAAIsS,KAAK,GAAGI,MAAM,CAACP,CAAD,CAAlB;AACA,QAAIG,KAAJ,EAAW,OAAOA,KAAP;AACXA,IAAAA,KAAK,GAAGI,MAAM,CAACP,CAAD,CAAN,GAAYQ,QAAQ,CAACC,aAAT,CAAuB,cAAcT,CAAC,GAAG,CAAlB,CAAvB,CAApB;AACA,QAAIU,SAAS,GAAG,CAAC9Y,QAAjB;;AACA,SAAK,IAAI+Y,QAAT,IAAqBJ,MAArB,EAA6B;AACzBI,MAAAA,QAAQ,GAAG,CAACA,QAAZ;;AACA,UAAIA,QAAQ,GAAGX,CAAX,IAAgBW,QAAQ,GAAGD,SAA/B,EAA0C;AACtCA,QAAAA,SAAS,GAAGC,QAAZ;AACA,YAAID,SAAS,KAAKV,CAAC,GAAG,CAAtB,EAAyB;AAC5B;AACJ;;AACD,QAAIE,KAAK,GAAG,KAAK/Q,KAAjB;;AACA,QAAIuR,SAAS,KAAK,CAAC9Y,QAAnB,EAA6B;AACzB,UAAIgZ,aAAa,GAAGL,MAAM,CAACG,SAAD,CAA1B,CADyB,CAEzB;;AACAR,MAAAA,KAAK,CAACG,YAAN,CAAmBF,KAAnB,EAA0BS,aAAa,CAACC,WAAxC;AACH,KAJD,MAIO;AACH;AACAX,MAAAA,KAAK,CAACG,YAAN,CAAmBF,KAAnB,EAA0BD,KAAK,CAACY,UAAhC;AACH;;AACD,WAAOX,KAAP;AACH,GA56C4B;AA86C7BvO,EAAAA,aAAa,EAAE,YAAW;AACtB,QAAI;AAAE/D,MAAAA,QAAQ,EAAE0S,MAAZ;AAAoBzT,MAAAA;AAApB,QAAiC,IAArC;;AACA,SAAK,IAAIkT,CAAT,IAAcO,MAAd,EAAsBzT,QAAQ,CAACiU,WAAT,CAAqBR,MAAM,CAACP,CAAD,CAA3B;;AACtB,SAAKnS,QAAL,GAAgB,EAAhB;AACH,GAl7C4B;AAo7C7B8N,EAAAA,KAAK,EAAE,UAASE,EAAT,EAAaC,EAAb,EAAiBd,EAAjB,EAAqBC,EAArB,EAAyB;AAE5B;AACA,QAAIY,EAAE,KAAKjI,SAAX,EAAsB;AAClB,aAAOvP,CAAC,CAAC2c,aAAF,CAAgB,KAAKtN,MAAL,EAAhB,CAAP;AACH,KAL2B,CAO5B;;;AACA,QAAIoI,EAAE,KAAKlI,SAAX,EAAsB;AAClBkI,MAAAA,EAAE,GAAGD,EAAL;AACH;;AACD,QAAIb,EAAE,KAAKpH,SAAX,EAAsB;AAClBoH,MAAAA,EAAE,GAAG,CAAL;AACAC,MAAAA,EAAE,GAAG,CAAL;AACH;;AAED,QAAIC,SAAS,GAAG,KAAKA,SAAL,EAAhB;;AAEA,QAAIF,EAAE,IAAIC,EAAN,IAAYC,SAAS,CAACgB,EAAtB,IAA4BhB,SAAS,CAACiB,EAA1C,EAA8C;AAC1C,UAAI8E,KAAK,GAAG/F,SAAS,CAACgB,EAAV,GAAelB,EAAE,IAAIa,EAAE,GAAG,CAAT,CAA7B;AACA,UAAIqF,KAAK,GAAGhG,SAAS,CAACiB,EAAV,GAAelB,EAAE,IAAIa,EAAE,GAAG,CAAT,CAA7B;AACA,WAAKZ,SAAL,CAAe+F,KAAf,EAAsBC,KAAtB;AACH;;AAEDrF,IAAAA,EAAE,GAAG7G,IAAI,CAACC,GAAL,CAAS4G,EAAE,IAAI,CAAf,EAAkB,KAAKzN,SAAvB,CAAL;AACA0N,IAAAA,EAAE,GAAG9G,IAAI,CAACC,GAAL,CAAS6G,EAAE,IAAI,CAAf,EAAkB,KAAK1N,SAAvB,CAAL;AAEA,QAAIuF,GAAG,GAAG,KAAKD,MAAL,EAAV;AACAC,IAAAA,GAAG,CAACgM,CAAJ,GAAQ9D,EAAR;AACAlI,IAAAA,GAAG,CAACwN,CAAJ,GAAQrF,EAAR;AAEA,SAAKpI,MAAL,CAAYC,GAAZ;AAEA,SAAKiF,OAAL,CAAa,OAAb,EAAsBiD,EAAtB,EAA0BC,EAA1B,EAA8Bd,EAA9B,EAAkCC,EAAlC;AAEA,WAAO,IAAP;AACH,GAx9C4B;AA09C7B;AACAmG,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AAE5B;AACA,QAAIF,KAAK,KAAKzN,SAAd,EAAyB;AACrB,aAAOvP,CAAC,CAACmd,cAAF,CAAiB,KAAK9N,MAAL,EAAjB,CAAP;AACH,KAL2B,CAO5B;AAEA;AACA;AACA;;;AACA,QAAI4N,EAAE,KAAK1N,SAAX,EAAsB;AAClB,UAAI6N,IAAI,GAAG,KAAKtS,KAAL,CAAWoP,OAAX,EAAX;AACA+C,MAAAA,EAAE,GAAGG,IAAI,CAAC/Y,KAAL,GAAa,CAAlB;AACA6Y,MAAAA,EAAE,GAAGE,IAAI,CAAC9Y,MAAL,GAAc,CAAnB;AACH;;AAED,QAAIgL,GAAG,GAAG,KAAKD,MAAL,GAAcwH,SAAd,CAAwBoG,EAAxB,EAA4BC,EAA5B,EAAgCH,MAAhC,CAAuCC,KAAvC,EAA8CnG,SAA9C,CAAwD,CAACoG,EAAzD,EAA6D,CAACC,EAA9D,CAAV;AACA,SAAK7N,MAAL,CAAYC,GAAZ;AAEA,WAAO,IAAP;AACH,GAj/C4B;AAm/C7BuH,EAAAA,SAAS,EAAE,UAASgB,EAAT,EAAaC,EAAb,EAAiB;AAExB;AACA,QAAID,EAAE,KAAKtI,SAAX,EAAsB;AAClB,aAAOvP,CAAC,CAACqd,iBAAF,CAAoB,KAAKhO,MAAL,EAApB,CAAP;AACH,KALuB,CAOxB;;;AAEA,QAAIC,GAAG,GAAG,KAAKD,MAAL,EAAV;AACAC,IAAAA,GAAG,CAACgO,CAAJ,GAAQzF,EAAE,IAAI,CAAd;AACAvI,IAAAA,GAAG,CAACiO,CAAJ,GAAQzF,EAAE,IAAI,CAAd;AAEA,SAAKzI,MAAL,CAAYC,GAAZ;AAEA,QAAIkO,YAAY,GAAG,KAAK3G,SAAL,EAAnB;AACA,QAAItS,MAAM,GAAG,KAAKT,OAAL,CAAaS,MAA1B;AACAA,IAAAA,MAAM,CAACC,CAAP,GAAWgZ,YAAY,CAAC3F,EAAxB;AACAtT,IAAAA,MAAM,CAACE,CAAP,GAAW+Y,YAAY,CAAC1F,EAAxB;AAEA,SAAKvD,OAAL,CAAa,WAAb,EAA0BiJ,YAAY,CAAC3F,EAAvC,EAA2C2F,YAAY,CAAC1F,EAAxD;;AAEA,QAAI,KAAKhU,OAAL,CAAaa,QAAjB,EAA2B;AACvB,WAAKA,QAAL;AACH;;AAED,WAAO,IAAP;AACH,GA9gD4B;AAghD7B;AACA;AACA8Y,EAAAA,QAAQ,EAAE,UAASlH,GAAT,EAAc;AAEpB,QAAItM,EAAE,GAAGnJ,QAAQ,CAACyV,GAAD,CAAR,GACH,KAAKzL,KAAL,CAAW4S,aAAX,CAAyBnH,GAAzB,CADG,GAEHA,GAAG,YAAY7T,CAAf,GAAmB6T,GAAG,CAAC,CAAD,CAAtB,GAA4BA,GAFlC;AAIA,QAAInL,EAAE,GAAG,KAAKuS,aAAL,CAAmB,UAAnB,EAA+B1T,EAA/B,CAAT;AACA,QAAImB,EAAJ,EAAQ,OAAO,KAAKV,MAAL,CAAYU,EAAZ,CAAP;AAER,WAAOmE,SAAP;AACH,GA5hD4B;AA8hD7B;AACAtC,EAAAA,eAAe,EAAE,UAASR,IAAT,EAAe;AAE5B,QAAIrB,EAAE,GAAItK,QAAQ,CAAC2L,IAAD,CAAR,IAAkBxM,QAAQ,CAACwM,IAAD,CAA3B,GAAqCA,IAArC,GAA6CA,IAAI,IAAIA,IAAI,CAACrB,EAAnE;AAEA,WAAO,KAAKV,MAAL,CAAYU,EAAZ,CAAP;AACH,GApiD4B;AAsiD7B;AACAwS,EAAAA,kBAAkB,EAAE,UAASC,CAAT,EAAY;AAE5BA,IAAAA,CAAC,GAAG,IAAIjc,KAAJ,CAAUic,CAAV,CAAJ;AAEA,QAAI9b,KAAK,GAAG,KAAKqI,KAAL,CAAW0T,WAAX,GAAyBC,GAAzB,CAA6B,KAAK9Q,eAAlC,EAAmD,IAAnD,CAAZ;AAEA,WAAOlL,KAAK,CAACT,MAAN,CAAa,UAAS+D,IAAT,EAAe;AAC/B,aAAOA,IAAI,IAAIA,IAAI,CAAC2Y,GAAL,CAAS9D,OAAT,CAAiB;AAAE+D,QAAAA,MAAM,EAAE,KAAKnT;AAAf,OAAjB,EAAyCoT,aAAzC,CAAuDL,CAAvD,CAAf;AACH,KAFM,EAEJ,IAFI,CAAP;AAGH,GAhjD4B;AAkjD7B;AACAM,EAAAA,eAAe,EAAE,UAASC,IAAT,EAAepW,GAAf,EAAoB;AAEjCA,IAAAA,GAAG,GAAG1H,QAAQ,CAAC0H,GAAG,IAAI,EAAR,EAAY;AAAEqW,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAd;AACAD,IAAAA,IAAI,GAAG,IAAIzc,IAAJ,CAASyc,IAAT,CAAP;AAEA,QAAIrc,KAAK,GAAG,KAAKqI,KAAL,CAAW0T,WAAX,GAAyBC,GAAzB,CAA6B,KAAK9Q,eAAlC,EAAmD,IAAnD,CAAZ;AACA,QAAIqR,MAAM,GAAGtW,GAAG,CAACqW,MAAJ,GAAa,cAAb,GAA8B,WAA3C;AAEA,WAAOtc,KAAK,CAACT,MAAN,CAAa,UAAS+D,IAAT,EAAe;AAC/B,aAAOA,IAAI,IAAI+Y,IAAI,CAACE,MAAD,CAAJ,CAAajZ,IAAI,CAAC2Y,GAAL,CAAS9D,OAAT,CAAiB;AAAE+D,QAAAA,MAAM,EAAE,KAAKnT;AAAf,OAAjB,CAAb,CAAf;AACH,KAFM,EAEJ,IAFI,CAAP;AAGH,GA9jD4B;AAgkD7ByT,EAAAA,WAAW,EAAE,YAAW;AACpB,SAAKC,kBAAL,CAAwB,QAAxB;AACA,WAAO,IAAP;AACH,GAnkD4B;AAqkD7BC,EAAAA,SAAS,EAAE,YAAW;AAClB,SAAKD,kBAAL,CAAwB,MAAxB;AACA,WAAO,IAAP;AACH,GAxkD4B;AA0kD7BE,EAAAA,SAAS,EAAE,YAAW;AAClB,SAAKF,kBAAL,CAAwB,MAAxB;AACA,WAAO,IAAP;AACH,GA7kD4B;AA+kD7BA,EAAAA,kBAAkB,EAAE,UAASG,KAAT,EAAgB,GAAGrE,IAAnB,EAAyB;AACzC,QAAI,OAAOqE,KAAP,KAAiB,QAArB,EAA+B;AAC/B,SAAKpK,OAAL,CAAa,aAAb,EAA4BoK,KAA5B,EAAmC,GAAGrE,IAAtC;AACH,GAllD4B;AAqlD7BsE,EAAAA,YAAY,EAAE,UAASxT,EAAT,EAAa;AAEvB,WAAO,KAAKhB,KAAL,CAAWyU,OAAX,CAAmBzT,EAAnB,CAAP;AACH,GAxlD4B;AA0lD7B0T,EAAAA,UAAU,EAAE,UAASta,CAAT,EAAYC,CAAZ,EAAe;AAEvB;AACA;AACA,WAAO,KAAKsa,kBAAL,CAAwBva,CAAxB,EAA2BC,CAA3B,EAA8Bqa,UAA9B,CAAyC,KAAKhb,OAAL,CAAaY,QAAtD,CAAP;AACH,GA/lD4B;AAimD7Bsa,EAAAA,iBAAiB,EAAE,UAASxa,CAAT,EAAYC,CAAZ,EAAe;AAC9B;AACA,QAAIwa,UAAU,GAAG,IAAIrd,KAAJ,CAAU4C,CAAV,EAAaC,CAAb,CAAjB;AACA,QAAIya,UAAU,GAAGlf,CAAC,CAACmf,cAAF,CAAiBF,UAAjB,EAA6B,KAAK5P,MAAL,EAA7B,CAAjB;AACA,WAAO6P,UAAP;AACH,GAtmD4B;AAwmD7BnG,EAAAA,gBAAgB,EAAE,UAASvU,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAC5C;AACA,QAAI8a,SAAS,GAAG,IAAIzd,IAAJ,CAAS6C,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,CAAhB;AACA,QAAI+a,SAAS,GAAGrf,CAAC,CAACsf,aAAF,CAAgBF,SAAhB,EAA2B,KAAK/P,MAAL,EAA3B,CAAhB;AACA,WAAOgQ,SAAP;AACH,GA7mD4B;AA+mD7BpG,EAAAA,iBAAiB,EAAE,UAASzU,CAAT,EAAYC,CAAZ,EAAe;AAC9B;AACA,QAAIya,UAAU,GAAG,IAAItd,KAAJ,CAAU4C,CAAV,EAAaC,CAAb,CAAjB;AACA,QAAIwa,UAAU,GAAGjf,CAAC,CAACmf,cAAF,CAAiBD,UAAjB,EAA6B,KAAK7P,MAAL,GAAckQ,OAAd,EAA7B,CAAjB;AACA,WAAON,UAAP;AACH,GApnD4B;AAsnD7B7E,EAAAA,gBAAgB,EAAE,UAAS5V,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAC5C;AACA,QAAI+a,SAAS,GAAG,IAAI1d,IAAJ,CAAS6C,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,CAAhB;AACA,QAAI8a,SAAS,GAAGpf,CAAC,CAACsf,aAAF,CAAgBD,SAAhB,EAA2B,KAAKhQ,MAAL,GAAckQ,OAAd,EAA3B,CAAhB;AACA,WAAOH,SAAP;AACH,GA3nD4B;AA6nD7BI,EAAAA,kBAAkB,EAAE,UAAShb,CAAT,EAAYC,CAAZ,EAAe;AAC/B;AACA,QAAIwa,UAAU,GAAG,IAAIrd,KAAJ,CAAU4C,CAAV,EAAaC,CAAb,CAAjB;AACA,QAAIgb,WAAW,GAAGzf,CAAC,CAACmf,cAAF,CAAiBF,UAAjB,EAA6B,KAAKnP,YAAL,EAA7B,CAAlB;AACA,WAAO2P,WAAP;AACH,GAloD4B;AAooD7BC,EAAAA,iBAAiB,EAAE,UAASlb,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAC7C;AACA,QAAI8a,SAAS,GAAG,IAAIzd,IAAJ,CAAS6C,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,CAAhB;AACA,QAAIqb,UAAU,GAAG3f,CAAC,CAACsf,aAAF,CAAgBF,SAAhB,EAA2B,KAAKtP,YAAL,EAA3B,CAAjB;AACA,WAAO6P,UAAP;AACH,GAzoD4B;AA2oD7B;AACA;AACA;AACA;AACAZ,EAAAA,kBAAkB,EAAE,UAASva,CAAT,EAAYC,CAAZ,EAAe;AAC/B;AACA,QAAIgb,WAAW,GAAG,IAAI7d,KAAJ,CAAU4C,CAAV,EAAaC,CAAb,CAAlB;AACA,QAAIwa,UAAU,GAAGjf,CAAC,CAACmf,cAAF,CAAiBM,WAAjB,EAA8B,KAAK3P,YAAL,GAAoByP,OAApB,EAA9B,CAAjB;AACA,WAAON,UAAP;AACH,GAppD4B;AAspD7BW,EAAAA,iBAAiB,EAAE,UAASpb,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAC7C;AACA,QAAIqb,UAAU,GAAG,IAAIhe,IAAJ,CAAS6C,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,CAAjB;AACA,QAAI8a,SAAS,GAAGpf,CAAC,CAACsf,aAAF,CAAgBK,UAAhB,EAA4B,KAAK7P,YAAL,GAAoByP,OAApB,EAA5B,CAAhB;AACA,WAAOH,SAAP;AACH,GA3pD4B;AA6pD7BS,EAAAA,gBAAgB,EAAE,UAASrb,CAAT,EAAYC,CAAZ,EAAe;AAE7B,WAAO,KAAKua,iBAAL,CAAuBxa,CAAvB,EAA0BC,CAA1B,EAA6Bqb,MAA7B,CAAoC,KAAKC,UAAL,EAApC,CAAP;AACH,GAhqD4B;AAkqD7BC,EAAAA,eAAe,EAAE,UAASxb,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAE3C,WAAO,KAAKyU,gBAAL,CAAsBvU,CAAtB,EAAyBC,CAAzB,EAA4BJ,KAA5B,EAAmCC,MAAnC,EAA2Cwb,MAA3C,CAAkD,KAAKC,UAAL,EAAlD,CAAP;AACH,GArqD4B;AAuqD7BE,EAAAA,gBAAgB,EAAE,UAASzb,CAAT,EAAYC,CAAZ,EAAe;AAE7B,QAAIyb,SAAS,GAAG,IAAIte,KAAJ,CAAU4C,CAAV,EAAaC,CAAb,CAAhB;AACA,QAAIya,UAAU,GAAGgB,SAAS,CAACC,UAAV,CAAqB,KAAKJ,UAAL,EAArB,CAAjB;AACA,WAAO,KAAK9G,iBAAL,CAAuBiG,UAAvB,CAAP;AACH,GA5qD4B;AA8qD7BkB,EAAAA,eAAe,EAAE,UAAS5b,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,EAA8B;AAE3C,QAAIyb,UAAU,GAAG,KAAKA,UAAL,EAAjB;AACA,QAAIV,SAAS,GAAG,IAAI1d,IAAJ,CAAS6C,CAAT,EAAYC,CAAZ,EAAeJ,KAAf,EAAsBC,MAAtB,CAAhB;AACA+a,IAAAA,SAAS,CAAC7a,CAAV,IAAeub,UAAU,CAACvb,CAA1B;AACA6a,IAAAA,SAAS,CAAC5a,CAAV,IAAesb,UAAU,CAACtb,CAA1B;AACA,WAAO,KAAK2V,gBAAL,CAAsBiF,SAAtB,CAAP;AACH,GArrD4B;AAurD7BgB,EAAAA,YAAY,EAAE,YAAW;AAErB,QAAIV,UAAU,GAAG,KAAK1W,GAAL,CAASqX,qBAAT,EAAjB;AACA,WAAO,IAAI1e,KAAJ,CAAU+d,UAAU,CAAC3H,IAArB,EAA2B2H,UAAU,CAAC1H,GAAtC,CAAP;AACH,GA3rD4B;AA6rD7B8H,EAAAA,UAAU,EAAE,YAAW;AAEnB,WAAO,KAAKM,YAAL,GAAoBP,MAApB,CAA2BS,MAAM,CAACC,OAAlC,EAA2CD,MAAM,CAACE,OAAlD,CAAP;AACH,GAhsD4B;AAksD7BC,EAAAA,WAAW,EAAE,UAAS3b,QAAT,EAAmB;AAE5B,QAAI,EAAEA,QAAQ,YAAY7C,QAAtB,CAAJ,EAAqC;AACjC,YAAM,IAAIyM,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,QAAI0B,IAAI,GAAGtL,QAAQ,CAACqF,KAApB;AACA,QAAIuW,YAAY,GAAG,KAAK7c,OAAxB;AACA,QAAI8J,KAAK,GAAG,KAAKxD,KAAjB;AACA,QAAI8D,EAAE,GAAGN,KAAK,CAACgT,WAAN,CAAkBC,WAA3B;;AAEA,QAAI,CAACF,YAAY,CAACzb,UAAlB,EAA8B;AAC1B,UAAI,CAACgJ,EAAE,CAAChJ,UAAH,CAAcgN,IAAd,CAAmB,IAAnB,EAAyBtE,KAAzB,EAAgCyC,IAAhC,CAAL,EAA4C,OAAO,KAAP;AAC/C;;AAED,QAAI,CAACsQ,YAAY,CAACrZ,WAAlB,EAA+B;AAC3B;AACA,UAAI,CAAC4G,EAAE,CAAC5G,WAAH,CAAe4K,IAAf,CAAoB,IAApB,EAA0BtE,KAA1B,EAAiCyC,IAAjC,CAAL,EAA6C,OAAO,KAAP;AAChD;;AAED,QAAI,OAAOsQ,YAAY,CAACpZ,SAApB,KAAkC,UAAtC,EAAkD;AAC9C,UAAI,CAACoZ,YAAY,CAACpZ,SAAb,CAAuB2K,IAAvB,CAA4B,IAA5B,EAAkCnN,QAAlC,EAA4C,IAA5C,CAAL,EAAwD,OAAO,KAAP;AAC3D;;AAED,WAAO,IAAP;AACH,GA3tD4B;AA6tD7B+b,EAAAA,cAAc,EAAE,UAASC,QAAT,EAAmB3a,MAAnB,EAA2B;AAEvC,WAAO1F,UAAU,CAAC,KAAKoD,OAAL,CAAa6B,WAAd,CAAV,CACP;AADO,MAED,KAAK7B,OAAL,CAAa6B,WAAb,CAAyBuM,IAAzB,CAA8B,IAA9B,EAAoC6O,QAApC,EAA8C3a,MAA9C,CAFC,CAGP;AAHO,MAID,KAAKtC,OAAL,CAAa6B,WAAb,CAAyBqb,KAAzB,EAJN;AAKH,GApuD4B;AAsuD7B;AACA;AAEAC,EAAAA,kBAAkB,EAAE,UAASjZ,GAAG,GAAG,EAAf,EAAmB;AAEnC,QAAI;AAAEkZ,MAAAA,WAAW,EAAEC,cAAf;AAA+BzP,MAAAA;AAA/B,QAAwC1J,GAA5C;AACA,UAAM;AAAE1C,MAAAA,YAAF;AAAeqD,MAAAA;AAAf,QAAyC,KAAK7E,OAApD;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,QAAIqd,cAAc,KAAK5R,SAAvB,EAAkC;AAE9B;AACA,UAAI,CAACjK,YAAL,EAAmB,OAAO,KAAP,CAHW,CAI9B;;AACA,UAAIoM,IAAJ,EAAU;AACNyP,QAAAA,cAAc,GAAG7b,YAAY,CAACoM,IAAD,CAA7B,CADM,CAEN;;AACA,YAAIyP,cAAc,KAAK,KAAvB,EAA8B,OAAO,KAAP;AACjC;;AACD,UAAI,CAACA,cAAL,EAAqB;AACjB;AACAA,QAAAA,cAAc,GAAG7b,YAAY,CAAC,SAAD,CAA7B;AACH;AACJ,KA5BkC,CA8BnC;AACA;AACA;AACA;;;AACA,QAAI,CAAC6b,cAAL,EAAqB,OAAO,KAAP,CAlCc,CAoCnC;;AACA,QAAIrgB,QAAQ,CAACqgB,cAAD,CAAZ,EAA8B;AAC1BA,MAAAA,cAAc,GAAG;AACbtd,QAAAA,IAAI,EAAEsd;AADO,OAAjB;AAGH;;AAED,UAAMtd,IAAI,GAAGsd,cAAc,CAACtd,IAA5B;AACA,UAAMqd,WAAW,GAAGvY,oBAAoB,CAAC9E,IAAD,CAAxC,CA5CmC,CA8CnC;;AACA,QAAI,CAACqd,WAAL,EAAkB;AACd,YAAM,IAAIvS,KAAJ,CAAU,2BAA2B9K,IAA3B,GAAkC,IAA5C,CAAN;AACH;;AACD,QAAI,OAAOqd,WAAW,CAACE,SAAnB,KAAiC,UAArC,EAAiD;AAC7C,YAAM,IAAIzS,KAAJ,CAAU,mBAAmB9K,IAAnB,GAA0B,2CAApC,CAAN;AACH;;AACD,QAAI,OAAOqd,WAAW,CAACG,WAAnB,KAAmC,UAAvC,EAAmD;AAC/C,YAAM,IAAI1S,KAAJ,CAAU,mBAAmB9K,IAAnB,GAA0B,6CAApC,CAAN;AACH;;AAED,WAAO;AACHqd,MAAAA,WADG;AAEHpd,MAAAA,OAAO,EAAEqd,cAAc,CAACrd,OAAf,IAA0B,EAFhC;AAGHD,MAAAA;AAHG,KAAP;AAKH,GAvyD4B;AAyyD7ByI,EAAAA,eAAe,EAAE,UAASyU,QAAT,EAAmBO,QAAnB,EAA6BtZ,GAA7B,EAAkC;AAC/C,UAAMuZ,qBAAqB,GAAG,KAAKN,kBAAL,CAAwBjZ,GAAxB,CAA9B;AACA,QAAI,CAACuZ,qBAAL,EAA4B;AAC5B,UAAM;AAAEL,MAAAA,WAAF;AAAepd,MAAAA;AAAf,QAA2Byd,qBAAjC;AACAL,IAAAA,WAAW,CAACE,SAAZ,CAAsBL,QAAtB,EAAgCO,QAAhC,EAA0Cxd,OAA1C;AACH,GA9yD4B;AAgzD7ByI,EAAAA,iBAAiB,EAAE,UAASwU,QAAT,EAAmBO,QAAnB,EAA6BtZ,GAA7B,EAAkC;AACjD,UAAMuZ,qBAAqB,GAAG,KAAKN,kBAAL,CAAwBjZ,GAAxB,CAA9B;AACA,QAAI,CAACuZ,qBAAL,EAA4B;AAC5B,UAAM;AAAEL,MAAAA,WAAF;AAAepd,MAAAA;AAAf,QAA2Byd,qBAAjC;AACAL,IAAAA,WAAW,CAACG,WAAZ,CAAwBN,QAAxB,EAAkCO,QAAlC,EAA4Cxd,OAA5C;AACH,GArzD4B;AAuzD7B;AACA;AAEA0d,EAAAA,eAAe,EAAE,UAASpc,GAAT,EAAc;AAE3BA,IAAAA,GAAG,CAACqc,cAAJ,GAF2B,CAI3B;;AAEArc,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,QAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;;AAEA,QAAItc,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACmc,eAAL,CAAqBpc,GAArB,EAA0B6Z,UAAU,CAACza,CAArC,EAAwCya,UAAU,CAACxa,CAAnD;AAEH,KAHD,MAGO;AACH,WAAK8P,OAAL,CAAa,uBAAb,EAAsCnP,GAAtC,EAA2C6Z,UAAU,CAACza,CAAtD,EAAyDya,UAAU,CAACxa,CAApE;AACH;AACJ,GA70D4B;AA+0D7Bmd,EAAAA,YAAY,EAAE,UAASxc,GAAT,EAAc;AAExB;AAEA,QAAIsI,IAAI,GAAG,KAAKmU,SAAL,CAAezc,GAAf,CAAX,CAJwB,CAKxB;;AACA,QAAIsI,IAAI,CAACoU,UAAL,IAAmB,KAAKhe,OAAL,CAAa0D,cAApC,EAAoD;AAEhDpC,MAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,UAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,UAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,UAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;;AAEA,UAAItc,IAAJ,EAAU;AACNA,QAAAA,IAAI,CAACuc,YAAL,CAAkBxc,GAAlB,EAAuB6Z,UAAU,CAACza,CAAlC,EAAqCya,UAAU,CAACxa,CAAhD;AAEH,OAHD,MAGO;AACH,aAAK8P,OAAL,CAAa,oBAAb,EAAmCnP,GAAnC,EAAwC6Z,UAAU,CAACza,CAAnD,EAAsDya,UAAU,CAACxa,CAAjE;AACH;AACJ;AACJ,GAr2D4B;AAu2D7Bsd,EAAAA,WAAW,EAAE,UAAS3c,GAAT,EAAc;AAEvB,QAAI,KAAKtB,OAAL,CAAayB,kBAAjB,EAAqCH,GAAG,CAACqc,cAAJ;AAErCrc,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,QAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;;AAEA,QAAItc,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAAC0c,WAAL,CAAiB3c,GAAjB,EAAsB6Z,UAAU,CAACza,CAAjC,EAAoCya,UAAU,CAACxa,CAA/C;AAEH,KAHD,MAGO;AACH,WAAK8P,OAAL,CAAa,mBAAb,EAAkCnP,GAAlC,EAAuC6Z,UAAU,CAACza,CAAlD,EAAqDya,UAAU,CAACxa,CAAhE;AACH;AACJ,GAx3D4B;AA03D7Bud,EAAAA,WAAW,EAAE,UAAS5c,GAAT,EAAc;AAEvB;AACA;AAEAA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,QAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;;AAEA,QAAItc,IAAJ,EAAU;AAEND,MAAAA,GAAG,CAACqc,cAAJ;AACApc,MAAAA,IAAI,CAAC2c,WAAL,CAAiB5c,GAAjB,EAAsB6Z,UAAU,CAACza,CAAjC,EAAoCya,UAAU,CAACxa,CAA/C;AAEH,KALD,MAKO;AAEH,UAAI,KAAKX,OAAL,CAAa0B,yBAAjB,EAA4CJ,GAAG,CAACqc,cAAJ;AAE5C,WAAKlN,OAAL,CAAa,mBAAb,EAAkCnP,GAAlC,EAAuC6Z,UAAU,CAACza,CAAlD,EAAqDya,UAAU,CAACxa,CAAhE;AACH;;AAED,SAAKwd,kBAAL,CAAwB5c,IAAxB,EAA8BD,GAAG,CAACsI,IAAlC;AACH,GAn5D4B;AAq5D7BwU,EAAAA,WAAW,EAAE,UAAS9c,GAAT,EAAc;AAEvB;AACA,QAAIsI,IAAI,GAAG,KAAKmU,SAAL,CAAezc,GAAf,CAAX;AACAsI,IAAAA,IAAI,CAACoU,UAAL,KAAoBpU,IAAI,CAACoU,UAAL,GAAkB,CAAtC;AACA,QAAIA,UAAU,GAAG,EAAEpU,IAAI,CAACoU,UAAxB;AAEA,QAAIA,UAAU,IAAI,KAAKhe,OAAL,CAAa2D,aAA/B,EAA8C;AAE9CrC,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAI6Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;AAEA,QAAItc,IAAI,GAAGqI,IAAI,CAACuD,UAAhB;;AACA,QAAI5L,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAAC6c,WAAL,CAAiB9c,GAAjB,EAAsB6Z,UAAU,CAACza,CAAjC,EAAoCya,UAAU,CAACxa,CAA/C;AACH,KAFD,MAEO;AACH,WAAK8P,OAAL,CAAa,mBAAb,EAAkCnP,GAAlC,EAAuC6Z,UAAU,CAACza,CAAlD,EAAqDya,UAAU,CAACxa,CAAhE;AACH;;AAED,SAAKod,SAAL,CAAezc,GAAf,EAAoBsI,IAApB;AACH,GA16D4B;AA46D7ByU,EAAAA,SAAS,EAAE,UAAS/c,GAAT,EAAc;AAErB,SAAKgd,wBAAL;AAEA,QAAIC,aAAa,GAAGthB,cAAc,CAACqE,GAAD,CAAlC;AAEA,QAAI6Z,UAAU,GAAG,KAAKH,UAAL,CAAgBuD,aAAa,CAACX,OAA9B,EAAuCW,aAAa,CAACV,OAArD,CAAjB;AAEA,QAAItc,IAAI,GAAG,KAAKwc,SAAL,CAAezc,GAAf,EAAoB6L,UAA/B;;AACA,QAAI5L,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAAC8c,SAAL,CAAeE,aAAf,EAA8BpD,UAAU,CAACza,CAAzC,EAA4Cya,UAAU,CAACxa,CAAvD;AACH,KAFD,MAEO;AACH,WAAK8P,OAAL,CAAa,iBAAb,EAAgC8N,aAAhC,EAA+CpD,UAAU,CAACza,CAA1D,EAA6Dya,UAAU,CAACxa,CAAxE;AACH;;AAED,QAAI,CAAC4d,aAAa,CAACC,oBAAd,EAAL,EAA2C;AACvC,WAAKV,YAAL,CAAkBlf,CAAC,CAAC6f,KAAF,CAAQnd,GAAR,EAAa;AAAEsM,QAAAA,IAAI,EAAE,OAAR;AAAiBhE,QAAAA,IAAI,EAAEtI,GAAG,CAACsI;AAA3B,OAAb,CAAlB;AACH;;AAEDtI,IAAAA,GAAG,CAACod,wBAAJ;AACA,SAAKC,cAAL;AACH,GAj8D4B;AAm8D7BC,EAAAA,SAAS,EAAE,UAAStd,GAAT,EAAc;AAErBA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;;AAE3B,QAAIA,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACqd,SAAL,CAAetd,GAAf;AAEH,KAHD,MAGO;AACH,UAAI,KAAK6E,EAAL,KAAY7E,GAAG,CAAC6Y,MAApB,EAA4B,OADzB,CACiC;;AACpC,WAAK1J,OAAL,CAAa,iBAAb,EAAgCnP,GAAhC;AACH;AACJ,GAj9D4B;AAm9D7Bud,EAAAA,QAAQ,EAAE,UAASvd,GAAT,EAAc;AAEpBA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;;AAE3B,QAAIA,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACsd,QAAL,CAAcvd,GAAd;AAEH,KAHD,MAGO;AACH,UAAI,KAAK6E,EAAL,KAAY7E,GAAG,CAAC6Y,MAApB,EAA4B,OADzB,CACiC;;AACpC,WAAK1J,OAAL,CAAa,gBAAb,EAA+BnP,GAA/B;AACH;AACJ,GAj+D4B;AAm+D7Bwd,EAAAA,UAAU,EAAE,UAASxd,GAAT,EAAc;AAEtBA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAC3B,QAAIwd,WAAW,GAAG,KAAKpF,QAAL,CAAcrY,GAAG,CAAC0d,aAAlB,CAAlB;;AACA,QAAIzd,IAAJ,EAAU;AACN;AACA,UAAIwd,WAAW,KAAKxd,IAApB,EAA0B;AAC1BA,MAAAA,IAAI,CAACud,UAAL,CAAgBxd,GAAhB;AACH,KAJD,MAIO;AACH,UAAIyd,WAAJ,EAAiB,OADd,CAEH;;AACA,WAAKtO,OAAL,CAAa,kBAAb,EAAiCnP,GAAjC;AACH;AACJ,GAn/D4B;AAq/D7B2d,EAAAA,UAAU,EAAE,UAAS3d,GAAT,EAAc;AAEtBA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAC3B,QAAIwd,WAAW,GAAG,KAAKpF,QAAL,CAAcrY,GAAG,CAAC0d,aAAlB,CAAlB;;AACA,QAAIzd,IAAJ,EAAU;AACN;AACA,UAAIwd,WAAW,KAAKxd,IAApB,EAA0B;AAC1BA,MAAAA,IAAI,CAAC0d,UAAL,CAAgB3d,GAAhB;AACH,KAJD,MAIO;AACH,UAAIyd,WAAJ,EAAiB,OADd,CAEH;;AACA,WAAKtO,OAAL,CAAa,kBAAb,EAAiCnP,GAAjC;AACH;AACJ,GArgE4B;AAugE7B4d,EAAAA,UAAU,EAAE,UAAS5d,GAAT,EAAc;AAEtBA,IAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AAEA,QAAIC,IAAI,GAAG,KAAKoY,QAAL,CAAcrY,GAAG,CAAC6Y,MAAlB,CAAX;AACA,QAAI,KAAK9Y,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,QAAI4d,aAAa,GAAG7d,GAAG,CAAC6d,aAAxB;AACA,QAAIhE,UAAU,GAAG,KAAKH,UAAL,CAAgBmE,aAAa,CAACvB,OAA9B,EAAuCuB,aAAa,CAACtB,OAArD,CAAjB;AACA,QAAIuB,KAAK,GAAGvS,IAAI,CAACC,GAAL,CAAS,CAAC,CAAV,EAAaD,IAAI,CAACyC,GAAL,CAAS,CAAT,EAAa6P,aAAa,CAACE,UAAd,IAA4B,CAACF,aAAa,CAACG,MAAxD,CAAb,CAAZ;;AAEA,QAAI/d,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAAC2d,UAAL,CAAgB5d,GAAhB,EAAqB6Z,UAAU,CAACza,CAAhC,EAAmCya,UAAU,CAACxa,CAA9C,EAAiDye,KAAjD;AAEH,KAHD,MAGO;AACH,WAAK3O,OAAL,CAAa,kBAAb,EAAiCnP,GAAjC,EAAsC6Z,UAAU,CAACza,CAAjD,EAAoDya,UAAU,CAACxa,CAA/D,EAAkEye,KAAlE;AACH;AACJ,GAxhE4B;AA0hE7BG,EAAAA,OAAO,EAAE,UAASje,GAAT,EAAc;AAEnB,QAAIke,SAAS,GAAGle,GAAG,CAACme,aAApB;AACA,QAAIC,SAAS,GAAGF,SAAS,CAAChd,YAAV,CAAuB,OAAvB,CAAhB;;AACA,QAAIkd,SAAJ,EAAe;AACX,UAAIne,IAAI,GAAG,KAAKoY,QAAL,CAAc6F,SAAd,CAAX;;AACA,UAAIje,IAAJ,EAAU;AAEND,QAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AACA,YAAI,KAAKD,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,YAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;AACAtc,QAAAA,IAAI,CAACge,OAAL,CAAaje,GAAb,EAAkBoe,SAAlB,EAA6BvE,UAAU,CAACza,CAAxC,EAA2Cya,UAAU,CAACxa,CAAtD;AACH;AACJ;AACJ,GAziE4B;AA2iE7Bgf,EAAAA,WAAW,EAAE,UAASre,GAAT,EAAcse,OAAd,EAAuB;AAEhC,QAAIC,UAAU,GAAGve,GAAG,CAACme,aAArB;AACA,QAAIK,WAAW,GAAGD,UAAU,CAACrd,YAAX,CAAwB,QAAxB,CAAlB;;AACA,QAAIsd,WAAJ,EAAiB;AACb,UAAIve,IAAI,GAAG,KAAKoY,QAAL,CAAckG,UAAd,CAAX;;AACA,UAAIte,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AACA,YAAI,KAAKD,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAC3B,YAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;AACA+B,QAAAA,OAAO,CAACxR,IAAR,CAAa,IAAb,EAAmB7M,IAAnB,EAAyBD,GAAzB,EAA8Bue,UAA9B,EAA0C1E,UAAU,CAACza,CAArD,EAAwDya,UAAU,CAACxa,CAAnE;AACH;AACJ;AACJ,GAxjE4B;AA0jE7Bof,EAAAA,QAAQ,EAAE,UAASze,GAAT,EAAc;AAEpB,SAAKqe,WAAL,CAAiBre,GAAjB,EAAsB,UAASC,IAAT,EAAeD,GAAf,EAAoBsH,CAApB,EAAuBlI,CAAvB,EAA0BC,CAA1B,EAA6B;AAC/CY,MAAAA,IAAI,CAACwe,QAAL,CAAcze,GAAd,EAAmBZ,CAAnB,EAAsBC,CAAtB;AACH,KAFD;AAGH,GA/jE4B;AAkkE7Bqf,EAAAA,qBAAqB,EAAE,UAAS1e,GAAT,EAAc;AAEjC,SAAKqe,WAAL,CAAiBre,GAAjB,EAAsB,UAASC,IAAT,EAAeD,GAAf,EAAoBgB,MAApB,EAA4B5B,CAA5B,EAA+BC,CAA/B,EAAkC;AACpDY,MAAAA,IAAI,CAACye,qBAAL,CAA2B1e,GAA3B,EAAgCgB,MAAhC,EAAwC5B,CAAxC,EAA2CC,CAA3C;AACH,KAFD;AAGH,GAvkE4B;AAykE7Bsf,EAAAA,iBAAiB,EAAE,UAAS3e,GAAT,EAAc;AAE7B,QAAI,KAAKtB,OAAL,CAAayB,kBAAjB,EAAqCH,GAAG,CAACqc,cAAJ;AACrC,SAAKgC,WAAL,CAAiBre,GAAjB,EAAsB,UAASC,IAAT,EAAeD,GAAf,EAAoBgB,MAApB,EAA4B5B,CAA5B,EAA+BC,CAA/B,EAAkC;AACpDY,MAAAA,IAAI,CAAC0e,iBAAL,CAAuB3e,GAAvB,EAA4BgB,MAA5B,EAAoC5B,CAApC,EAAuCC,CAAvC;AACH,KAFD;AAGH,GA/kE4B;AAilE7Buf,EAAAA,OAAO,EAAE,UAAS5e,GAAT,EAAc;AAEnB,QAAI6e,SAAS,GAAG7e,GAAG,CAACme,aAApB;AACA,QAAIle,IAAI,GAAG,KAAKoY,QAAL,CAAcwG,SAAd,CAAX;;AACA,QAAI5e,IAAJ,EAAU;AAEND,MAAAA,GAAG,GAAGrE,cAAc,CAACqE,GAAD,CAApB;AACA,UAAI,KAAKD,KAAL,CAAWC,GAAX,EAAgBC,IAAhB,CAAJ,EAA2B;AAE3B,UAAI4Z,UAAU,GAAG,KAAKH,UAAL,CAAgB1Z,GAAG,CAACsc,OAApB,EAA6Btc,GAAG,CAACuc,OAAjC,CAAjB;AACAtc,MAAAA,IAAI,CAAC2e,OAAL,CAAa5e,GAAb,EAAkB6Z,UAAU,CAACza,CAA7B,EAAgCya,UAAU,CAACxa,CAA3C;AACH;AACJ,GA7lE4B;;AA+lE7Byf,EAAAA,cAAc,CAAC9e,GAAD,EAAM;AAChB,UAAMid,aAAa,GAAGthB,cAAc,CAACqE,GAAD,CAApC;AACA,UAAM;AAAEZ,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAW,KAAKqa,UAAL,CAAgBuD,aAAa,CAACX,OAA9B,EAAuCW,aAAa,CAACV,OAArD,CAAjB;AACA,WAAO,CAACU,aAAD,EAAgB7d,CAAhB,EAAmBC,CAAnB,CAAP;AACH,GAnmE4B;;AAqmE7Bwd,EAAAA,kBAAkB,EAAE,UAAS5c,IAAT,EAAeqI,IAAf,EAAqB;AAErCA,IAAAA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;AACA,SAAKmU,SAAL,CAAe;AAAEnU,MAAAA,IAAI,EAAEA;AAAR,KAAf,EAA+B;AAAEuD,MAAAA,UAAU,EAAE5L,IAAI,IAAI,IAAtB;AAA4Byc,MAAAA,UAAU,EAAE;AAAxC,KAA/B;AACA,SAAKqC,sBAAL,CAA4B,IAA5B,EAAkCzW,IAAlC;AACA,SAAK0W,gBAAL;AACH,GA3mE4B;AA6mE7B;AACA;AACAjf,EAAAA,KAAK,EAAE,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAEvB,QAAID,GAAG,CAACsM,IAAJ,KAAa,WAAb,IAA4BtM,GAAG,CAACif,MAAJ,KAAe,CAA/C,EAAkD;AAC9C;AACA,aAAO,IAAP;AACH;;AAED,QAAI,KAAKvgB,OAAL,CAAaqB,KAAb,IAAsB,KAAKrB,OAAL,CAAaqB,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,CAA1B,EAAyD;AACrD,aAAO,IAAP;AACH;;AAED,QAAID,GAAG,CAACsI,IAAJ,IAAYtI,GAAG,CAACsI,IAAJ,CAAS4W,OAAT,KAAqB/U,SAArC,EAAgD;AAC5C,aAAOnK,GAAG,CAACsI,IAAJ,CAAS4W,OAAhB;AACH;;AAED,QAAIjf,IAAI,IAAIA,IAAI,CAAC+E,KAAb,IAAuB/E,IAAI,CAAC+E,KAAL,YAAsBhI,IAAjD,EAAwD;AACpD,aAAO,KAAP;AACH;;AAED,QAAI,KAAK6G,GAAL,KAAa7D,GAAG,CAAC6Y,MAAjB,IAA2B,KAAKhU,EAAL,KAAY7E,GAAG,CAAC6Y,MAA3C,IAAqDvb,CAAC,CAAC6hB,QAAF,CAAW,KAAKtb,GAAhB,EAAqB7D,GAAG,CAAC6Y,MAAzB,CAAzD,EAA2F;AACvF,aAAO,KAAP;AACH;;AAED,WAAO,IAAP,CAvBuB,CAuBP;AACnB,GAvoE4B;AAyoE7BuG,EAAAA,WAAW,EAAE,UAAS9f,QAAT,EAAmB;AAE5B,SAAKZ,OAAL,CAAaY,QAAb,GAAwBA,QAAxB;;AAEA,QAAI,KAAKZ,OAAL,CAAaa,QAAjB,EAA2B;AACvB,WAAKA,QAAL;AACH;;AAED,WAAO,IAAP;AACH,GAlpE4B;AAopE7B8f,EAAAA,SAAS,EAAE,YAAW;AAElB,QAAI,KAAKnb,KAAT,EAAgB;AACZ,WAAKA,KAAL,CAAWkN,GAAX,CAAe,iBAAf,EAAkC,MAAlC;AACH;;AACD,WAAO,IAAP;AACH,GA1pE4B;AA4pE7BkO,EAAAA,YAAY,EAAE,YAAW;AAErB,QAAI,CAAC,KAAKC,UAAV,EAAsB;AAElB,WAAKA,UAAL,GAAkB;AACdC,QAAAA,IAAI,EAAE5kB,CAAC,CAAC,KAAD,EAAQ;AAAEqE,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAR,EAA2CtE,CAAC,CAAC,MAAD,CAA5C,CADO;AAEd6kB,QAAAA,QAAQ,EAAE,EAFI;AAGdC,QAAAA,GAAG,EAAE,UAAS1Z,EAAT,EAAa4S,GAAb,EAAkB;AACnBhe,UAAAA,CAAC,CAAC,KAAK4kB,IAAL,CAAUG,IAAV,CAAelW,UAAf,CAA0B,CAA1B,CAAD,CAAD,CAAgCmW,MAAhC,CAAuChH,GAAvC;AACA,eAAK6G,QAAL,CAAczZ,EAAd,IAAoB4S,GAApB;AACA,eAAK4G,IAAL,CAAUI,MAAV,CAAiBhlB,CAAC,CAAC,MAAD,EAAS;AAAEqE,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE,MAAzB;AAAiC2gB,YAAAA,IAAI,EAAE,UAAU7Z,EAAV,GAAe;AAAtD,WAAT,CAAlB;AACH,SAPa;AAQdwP,QAAAA,GAAG,EAAE,UAASxP,EAAT,EAAa;AACd,iBAAO,KAAKyZ,QAAL,CAAczZ,EAAd,CAAP;AACH,SAVa;AAWd8Z,QAAAA,KAAK,EAAE,UAAS9Z,EAAT,EAAa;AAChB,iBAAO,KAAKyZ,QAAL,CAAczZ,EAAd,MAAsBmE,SAA7B;AACH;AAba,OAAlB;AAeH;;AAED,WAAO,KAAKoV,UAAZ;AACH,GAlrE4B;AAorE7Bta,EAAAA,OAAO,EAAE,UAAS1F,QAAT,EAAmB;AAExB,SAAK8f,SAAL;AAEA,SAAKE,UAAL,GAAkB,IAAlB;AACA,SAAKQ,aAAL,GAAqB,EAArB;AAEA,QAAIC,WAAW,GAAG9P,KAAK,CAAC+P,OAAN,CAAc1gB,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAQ,IAAI,EAAb,CAAvD;AACAygB,IAAAA,WAAW,CAACE,OAAZ,CAAoB,UAASC,IAAT,EAAe;AAC/B,WAAKJ,aAAL,CAAmB3U,IAAnB,CAAwBgK,KAAxB,CAA8B,KAAK2K,aAAnC,EAAkD,KAAKK,sBAAL,CAA4BD,IAA5B,CAAlD;AACH,KAFD,EAEG,IAFH;AAGA,WAAO,IAAP;AACH,GAhsE4B;AAksE7BC,EAAAA,sBAAsB,EAAE,UAASxd,GAAT,EAAc;AAElC,QAAImG,SAAS,GAAG,KAAKyS,WAAL,CAAiB6E,YAAjC;;AACA,QAAI3kB,QAAQ,CAACkH,GAAD,CAAR,IAAiBsN,KAAK,CAAC+P,OAAN,CAAclX,SAAS,CAACnG,GAAD,CAAvB,CAArB,EAAoD;AAChD,aAAOmG,SAAS,CAACnG,GAAD,CAAT,CAAe+V,GAAf,CAAmB,UAASwH,IAAT,EAAe;AACrC,eAAOrlB,MAAM,CAAC,EAAD,EAAKqlB,IAAL,CAAb;AACH,OAFM,CAAP;AAGH;;AAED,QAAIzhB,OAAO,GAAGkE,GAAG,IAAI;AAAEsS,MAAAA,IAAI,EAAE,CAAC,EAAD;AAAR,KAArB;AACA,QAAI+K,OAAO,GAAG/P,KAAK,CAAC+P,OAAN,CAAcvhB,OAAd,CAAd;AACA,QAAID,IAAI,GAAGC,OAAO,CAACD,IAAnB;;AAEA,QAAI,CAACwhB,OAAD,IAAY,CAACxhB,IAAb,IAAqB,CAACC,OAAO,CAAC4hB,MAAlC,EAA0C;AACtC7hB,MAAAA,IAAI,GAAG,KAAP;AACH;;AAED,QAAIA,IAAI,IAAIyR,KAAK,CAAC+P,OAAN,CAAclX,SAAS,CAACtK,IAAD,CAAvB,CAAZ,EAA4C;AACxC,UAAI8hB,OAAO,GAAGxX,SAAS,CAACtK,IAAD,CAAT,CAAgBka,GAAhB,CAAoB,UAASwH,IAAT,EAAe;AAC7C,eAAOrlB,MAAM,CAAC,EAAD,EAAKqlB,IAAL,CAAb;AACH,OAFa,CAAd;AAIA,UAAIjL,IAAI,GAAGhF,KAAK,CAAC+P,OAAN,CAAcvhB,OAAO,CAACwW,IAAtB,IAA8BxW,OAAO,CAACwW,IAAtC,GAA6C,CAACxW,OAAO,CAACwW,IAAR,IAAgB,EAAjB,CAAxD;AAEAha,MAAAA,QAAQ,CAACga,IAAI,CAAC,CAAD,CAAL,EAAUtZ,IAAI,CAACgH,GAAD,EAAM,MAAN,CAAd,CAAR;;AACA,WAAK,IAAI8J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,IAAI,CAAClK,MAAzB,EAAiC0B,CAAC,EAAlC,EAAsC;AAClC,YAAI6T,OAAO,CAAC7T,CAAD,CAAX,EAAgB;AACZ5R,UAAAA,MAAM,CAACylB,OAAO,CAAC7T,CAAD,CAAR,EAAawI,IAAI,CAACxI,CAAD,CAAjB,CAAN;AACH;AACJ;;AACD,aAAO6T,OAAP;AACH;;AAED,WAAON,OAAO,GAAGvhB,OAAH,GAAa,CAACA,OAAD,CAA3B;AACH,GApuE4B;AAsuE7Ba,EAAAA,QAAQ,EAAE,UAASqD,GAAT,EAAc;AAEpB,QAAItD,QAAQ,GAAG,KAAKZ,OAAL,CAAaY,QAA5B;;AACA,QAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACf,aAAO,KAAK+f,SAAL,EAAP;AACH;;AAED,QAAImB,YAAY,GAAGtQ,KAAK,CAAC+P,OAAN,CAAcrd,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAA9C;AAEA,QAAIsH,GAAG,GAAG,KAAKD,MAAL,EAAV;;AACA,QAAIwW,IAAI,GAAG,KAAKnB,YAAL,EAAX;;AAEA,SAAKS,aAAL,CAAmBG,OAAnB,CAA2B,UAASQ,gBAAT,EAA2BC,KAA3B,EAAkC;AAEzD,UAAI3a,EAAE,GAAG,aAAa2a,KAAtB;AACA,UAAIjiB,OAAO,GAAG7C,KAAK,CAAC6kB,gBAAD,EAAmBF,YAAY,CAACG,KAAD,CAA/B,EAAwC;AACvDvO,QAAAA,EAAE,EAAElI,GAAG,CAACgM,CAAJ,IAAS,CAD0C;AAEvD7D,QAAAA,EAAE,EAAEnI,GAAG,CAACwN,CAAJ,IAAS,CAF0C;AAGvDnG,QAAAA,EAAE,EAAErH,GAAG,CAACgO,CAAJ,IAAS,CAH0C;AAIvD1G,QAAAA,EAAE,EAAEtH,GAAG,CAACiO,CAAJ,IAAS;AAJ0C,OAAxC,CAAnB;AAOAzZ,MAAAA,OAAO,CAACO,KAAR,GAAgBK,QAAQ,IAAI4K,GAAG,CAACgM,CAAJ,IAAS,CAAb,CAAR,IAA2BxX,OAAO,CAACkiB,WAAR,IAAuB,CAAlD,CAAhB;AACAliB,MAAAA,OAAO,CAACQ,MAAR,GAAiBI,QAAQ,IAAI4K,GAAG,CAACwN,CAAJ,IAAS,CAAb,CAAR,IAA2BhZ,OAAO,CAACkiB,WAAR,IAAuB,CAAlD,CAAjB;;AAEA,UAAI,CAACH,IAAI,CAACX,KAAL,CAAW9Z,EAAX,CAAL,EAAqB;AACjBya,QAAAA,IAAI,CAACf,GAAL,CAAS1Z,EAAT,EAAapL,CAAC,CAAC,SAAD,EAAY;AAAEoL,UAAAA,EAAE,EAAEA,EAAN;AAAU6a,UAAAA,YAAY,EAAE;AAAxB,SAAZ,EAAwDjmB,CAAC,CAAC8D,OAAO,CAAC4hB,MAAT,CAAzD,CAAd;AACH;;AAED,UAAIQ,aAAa,GAAGL,IAAI,CAACjL,GAAL,CAASxP,EAAT,CAApB;;AAEA,UAAI1K,UAAU,CAACoD,OAAO,CAAC0I,MAAT,CAAd,EAAgC;AAC5B1I,QAAAA,OAAO,CAAC0I,MAAR,CAAe0Z,aAAa,CAACnB,IAAd,CAAmBlW,UAAnB,CAA8B,CAA9B,CAAf,EAAiD/K,OAAjD;AACH;;AAED,UAAIU,CAAC,GAAGV,OAAO,CAAC6S,EAAR,GAAa7S,OAAO,CAACO,KAA7B;AACA,UAAIG,CAAC,GAAG,CAAR,EAAWA,CAAC,IAAIV,OAAO,CAACO,KAAb;AAEX,UAAII,CAAC,GAAGX,OAAO,CAAC8S,EAAR,GAAa9S,OAAO,CAACQ,MAA7B;AACA,UAAIG,CAAC,GAAG,CAAR,EAAWA,CAAC,IAAIX,OAAO,CAACQ,MAAb;AAEX4hB,MAAAA,aAAa,CAACC,IAAd,CAAmB;AACf3hB,QAAAA,CAAC,EAAEA,CADY;AAEfC,QAAAA,CAAC,EAAEA,CAFY;AAGfJ,QAAAA,KAAK,EAAEP,OAAO,CAACO,KAHA;AAIfC,QAAAA,MAAM,EAAER,OAAO,CAACQ;AAJD,OAAnB;AAMH,KAnCD;;AAqCA,QAAI8hB,UAAU,GAAG,IAAIC,aAAJ,GAAoBC,iBAApB,CAAsCT,IAAI,CAACjB,IAAL,CAAUG,IAAhD,CAAjB;AACAqB,IAAAA,UAAU,GAAG,mCAAmCG,IAAI,CAACH,UAAD,CAAvC,GAAsD,GAAnE;AAEA,SAAK9c,KAAL,CAAWkN,GAAX,CAAe,iBAAf,EAAkC4P,UAAlC;AAEA,WAAO,IAAP;AACH,GA7xE4B;AA+xE7BhX,EAAAA,qBAAqB,EAAE,UAASpH,GAAT,EAAc;AAEjCA,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AAEA,QAAIwe,kBAAkB,GAAGxe,GAAG,CAAC2E,QAAJ,IAAgB,QAAzC;AACA,QAAI8Z,cAAc,GAAGze,GAAG,CAAC0e,IAAJ,IAAY,WAAjC;AAEA,QAAIrP,YAAY,GAAG,KAAKC,KAAL,EAAnB;AACA,QAAIC,gBAAgB,GAAG,KAAKV,SAAL,EAAvB,CARiC,CAUjC;;AACA,QAAIzW,QAAQ,CAAComB,kBAAD,CAAZ,EAAkC;AAC9B,UAAIhiB,CAAC,GAAG+S,gBAAgB,CAACM,EAAjB,GAAuBR,YAAY,CAACG,EAAb,IAAmBgP,kBAAkB,CAAChiB,CAAnB,IAAwB,CAA3C,CAA/B;AACA,UAAIC,CAAC,GAAG8S,gBAAgB,CAACO,EAAjB,GAAuBT,YAAY,CAACI,EAAb,IAAmB+O,kBAAkB,CAAC/hB,CAAnB,IAAwB,CAA3C,CAA/B;AACA+hB,MAAAA,kBAAkB,GAAGhiB,CAAC,GAAG,KAAJ,GAAYC,CAAZ,GAAgB,IAArC;AACH,KAfgC,CAiBjC;;;AACA,QAAIrE,QAAQ,CAACqmB,cAAD,CAAZ,EAA8B;AAC1BA,MAAAA,cAAc,GAAG,IAAI9kB,IAAJ,CAAS8kB,cAAT,EAAyBnP,KAAzB,CAA+BD,YAAY,CAACG,EAA5C,EAAgDH,YAAY,CAACI,EAA7D,CAAjB;AACAgP,MAAAA,cAAc,GAAGA,cAAc,CAACpiB,KAAf,GAAuB,KAAvB,GAA+BoiB,cAAc,CAACniB,MAA9C,GAAuD,IAAxE;AACH;;AAED,SAAK8E,WAAL,CAAiBoN,GAAjB,CAAqB;AACjBiQ,MAAAA,cAAc,EAAEA,cADC;AAEjBD,MAAAA,kBAAkB,EAAEA;AAFH,KAArB;AAIH,GA1zE4B;AA4zE7BG,EAAAA,mBAAmB,EAAE,UAASC,GAAT,EAAc5e,GAAd,EAAmB;AAEpC;AACA,QAAI,EAAE4e,GAAG,YAAYC,gBAAjB,CAAJ,EAAwC;AACpC,WAAKzd,WAAL,CAAiBoN,GAAjB,CAAqB,iBAArB,EAAwC,EAAxC;AACA;AACH;;AAEDxO,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AAEA,QAAI8e,eAAJ;AACA,QAAIL,cAAc,GAAGze,GAAG,CAAC0e,IAAzB;AACA,QAAIK,gBAAgB,GAAG/e,GAAG,CAACgf,MAAJ,IAAc,WAArC;AACA,QAAIC,iBAAiB,GAAGjf,GAAG,CAACkf,OAAJ,IAAe,CAAvC;AACA,QAAIC,iBAAiB,GAAGxW,IAAI,CAACyW,GAAL,CAASpf,GAAG,CAACqf,OAAb,KAAyB,CAAjD;AACA,QAAIC,iBAAiB,GAAG,KAAK1G,WAAL,CAAiB2G,kBAAjB,CAAoCrmB,SAAS,CAAC6lB,gBAAD,CAA7C,CAAxB;;AAEA,QAAIrmB,UAAU,CAAC4mB,iBAAD,CAAd,EAAmC;AAC/B;AACAV,MAAAA,GAAG,CAACviB,KAAJ,IAAa8iB,iBAAb;AACAP,MAAAA,GAAG,CAACtiB,MAAJ,IAAc6iB,iBAAd;AACA,UAAIK,MAAM,GAAGF,iBAAiB,CAACV,GAAD,EAAM5e,GAAN,CAA9B;;AACA,UAAI,EAAEwf,MAAM,YAAYC,iBAApB,CAAJ,EAA4C;AACxC,cAAM,IAAI9Y,KAAJ,CAAU,mEAAV,CAAN;AACH;;AAEDmY,MAAAA,eAAe,GAAGU,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAlB;AACAX,MAAAA,gBAAgB,GAAG,QAAnB;;AACA,UAAI3mB,QAAQ,CAACqmB,cAAD,CAAZ,EAA8B;AAC1B;AACAA,QAAAA,cAAc,CAACpiB,KAAf,IAAwBmjB,MAAM,CAACnjB,KAAP,GAAeuiB,GAAG,CAACviB,KAA3C;AACAoiB,QAAAA,cAAc,CAACniB,MAAf,IAAyBkjB,MAAM,CAACljB,MAAP,GAAgBsiB,GAAG,CAACtiB,MAA7C;AACH,OAJD,MAIO,IAAImiB,cAAc,KAAKlX,SAAvB,EAAkC;AACrC;AACAvH,QAAAA,GAAG,CAAC0e,IAAJ,GAAW;AACPriB,UAAAA,KAAK,EAAEmjB,MAAM,CAACnjB,KAAP,GAAe8iB,iBADf;AAEP7iB,UAAAA,MAAM,EAAEkjB,MAAM,CAACljB,MAAP,GAAgB6iB;AAFjB,SAAX;AAIH;AACJ,KAtBD,MAsBO;AACH;AACA;AACAL,MAAAA,eAAe,GAAGF,GAAG,CAACe,GAAtB;;AACA,UAAIlB,cAAc,KAAKlX,SAAvB,EAAkC;AAC9B;AACAvH,QAAAA,GAAG,CAAC0e,IAAJ,GAAW;AACPriB,UAAAA,KAAK,EAAEuiB,GAAG,CAACviB,KADJ;AAEPC,UAAAA,MAAM,EAAEsiB,GAAG,CAACtiB;AAFL,SAAX;AAIH;AACJ;;AAED,SAAK8E,WAAL,CAAiBoN,GAAjB,CAAqB;AACjB0Q,MAAAA,OAAO,EAAED,iBADQ;AAEjBF,MAAAA,gBAAgB,EAAEA,gBAFD;AAGjBD,MAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAH3B,KAArB;AAMA,SAAK1X,qBAAL,CAA2BpH,GAA3B;AACH,GAv3E4B;AAy3E7B4f,EAAAA,qBAAqB,EAAE,UAASC,KAAT,EAAgB;AAEnC,SAAKtR,GAAL,CAASC,GAAT,CAAa,iBAAb,EAAgCqR,KAAK,IAAI,EAAzC;AACH,GA53E4B;AA83E7B3Y,EAAAA,cAAc,EAAE,UAASlH,GAAT,EAAc;AAE1BA,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AAEA,SAAK4f,qBAAL,CAA2B5f,GAAG,CAAC6f,KAA/B;;AAEA,QAAI7f,GAAG,CAAC8f,KAAR,EAAe;AACX9f,MAAAA,GAAG,GAAG,KAAKmH,WAAL,GAAmBhO,SAAS,CAAC6G,GAAD,CAAlC;AACA,UAAI4e,GAAG,GAAGzK,QAAQ,CAAC4L,aAAT,CAAuB,KAAvB,CAAV;AACAnB,MAAAA,GAAG,CAACoB,MAAJ,GAAa,KAAKrB,mBAAL,CAAyBsB,IAAzB,CAA8B,IAA9B,EAAoCrB,GAApC,EAAyC5e,GAAzC,CAAb;AACA4e,MAAAA,GAAG,CAACe,GAAJ,GAAU3f,GAAG,CAAC8f,KAAd;AACH,KALD,MAKO;AACH,WAAKnB,mBAAL,CAAyB,IAAzB;AACA,WAAKxX,WAAL,GAAmB,IAAnB;AACH;;AAED,WAAO,IAAP;AACH,GA/4E4B;AAi5E7B+Y,EAAAA,gBAAgB,EAAE,UAASC,KAAT,EAAgB;AAE9B,SAAKrkB,OAAL,CAAasD,WAAb,GAA2B+gB,KAA3B;AAEA/mB,IAAAA,MAAM,CAAC,KAAKsJ,MAAN,EAAc,kBAAd,EAAkCyd,KAAlC,CAAN;AACH,GAt5E4B;AAw5E7B;AACA;AAEAC,EAAAA,SAAS,EAAE,UAASC,KAAT,EAAgB;AAEvB,WAAO,CAAC,CAAC,KAAKpf,GAAL,CAASqf,cAAT,CAAwBD,KAAxB,CAAT;AACH,GA95E4B;AAg6E7BE,EAAAA,YAAY,EAAE,UAASjnB,MAAT,EAAiB;AAE3B,QAAI,CAAClB,QAAQ,CAACkB,MAAD,CAAb,EAAuB;AACnB,YAAM,IAAIknB,SAAJ,CAAc,iEAAd,CAAN;AACH;;AAED,QAAIC,QAAQ,GAAGnnB,MAAM,CAAC8J,EAAtB;AACA,QAAIvH,IAAI,GAAGvC,MAAM,CAACuC,IAAlB,CAP2B,CAQ3B;AACA;;AACA,QAAI,CAAC4kB,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG5kB,IAAI,GAAG,KAAKoF,GAAL,CAASmC,EAAhB,GAAqB/J,QAAQ,CAACqnB,IAAI,CAACC,SAAL,CAAernB,MAAf,CAAD,CAAxC;AACH,KAZ0B,CAa3B;AACA;AACA;;;AACA,QAAI,CAAC,KAAK8mB,SAAL,CAAeK,QAAf,CAAL,EAA+B;AAE3B,UAAIta,SAAS,GAAG5M,OAAhB;AACA,UAAIqnB,eAAe,GAAGza,SAAS,CAACtK,IAAD,CAAT,IAAmBsK,SAAS,CAACtK,IAAD,CAAT,CAAgBvC,MAAM,CAACgZ,IAAP,IAAe,EAA/B,CAAzC;;AACA,UAAI,CAACsO,eAAL,EAAsB;AAClB,cAAM,IAAIja,KAAJ,CAAU,yBAAyB9K,IAAnC,CAAN;AACH,OAN0B,CAQ3B;AACA;;;AACA,UAAIglB,WAAW,GAAG3oB,MAAM,CAAC;AACrB4oB,QAAAA,WAAW,EAAE,mBADQ;AAErBtkB,QAAAA,CAAC,EAAE,CAAC,CAFiB;AAGrBC,QAAAA,CAAC,EAAE,CAAC,CAHiB;AAIrBJ,QAAAA,KAAK,EAAE,CAJc;AAKrBC,QAAAA,MAAM,EAAE;AALa,OAAD,EAMrBhD,MAAM,CAACynB,KANc,EAMP;AACb3d,QAAAA,EAAE,EAAEqd;AADS,OANO,CAAxB;AAUAzoB,MAAAA,CAAC,CAAC4oB,eAAD,EAAkBC,WAAlB,CAAD,CAAgCG,QAAhC,CAAyC,KAAK9f,IAA9C;AACH;;AAED,WAAOuf,QAAP;AACH,GAx8E4B;AA08E7BQ,EAAAA,cAAc,EAAE,UAASC,QAAT,EAAmB;AAE/B,QAAI,CAAC9oB,QAAQ,CAAC8oB,QAAD,CAAb,EAAyB;AACrB,YAAM,IAAIV,SAAJ,CAAc,mEAAd,CAAN;AACH;;AAED,QAAIW,UAAU,GAAGD,QAAQ,CAAC9d,EAA1B;AACA,QAAIsG,IAAI,GAAGwX,QAAQ,CAACxX,IAApB;AACA,QAAI0X,KAAK,GAAGF,QAAQ,CAACE,KAArB,CAR+B,CAS/B;AACA;;AACA,QAAI,CAACD,UAAL,EAAiB;AACbA,MAAAA,UAAU,GAAGzX,IAAI,GAAG,KAAKzI,GAAL,CAASmC,EAAhB,GAAqB/J,QAAQ,CAACqnB,IAAI,CAACC,SAAL,CAAeO,QAAf,CAAD,CAA1C;AACH,KAb8B,CAc/B;AACA;AACA;;;AACA,QAAI,CAAC,KAAKd,SAAL,CAAee,UAAf,CAAL,EAAiC;AAE7B,UAAIE,YAAY,GAAG7nB,QAAQ,CAAC,4EAAD,CAA3B;AACA,UAAI8nB,oBAAoB,GAAG7nB,OAAO,CAAC2nB,KAAD,CAAP,CAAerL,GAAf,CAAmB,UAASwL,IAAT,EAAe;AACzD,eAAOF,YAAY,CAAC;AAChBvJ,UAAAA,MAAM,EAAEyJ,IAAI,CAACzJ,MADG;AAEhB+H,UAAAA,KAAK,EAAE0B,IAAI,CAAC1B,KAFI;AAGhBX,UAAAA,OAAO,EAAE3O,MAAM,CAACiR,QAAP,CAAgBD,IAAI,CAACrC,OAArB,IAAgCqC,IAAI,CAACrC,OAArC,GAA+C;AAHxC,SAAD,CAAnB;AAKH,OAN0B,CAA3B;AAQA,UAAIuC,iBAAiB,GAAG,CACpB,MAAM/X,IAAN,GAAa,GADO,EAEpB4X,oBAAoB,CAACI,IAArB,CAA0B,EAA1B,CAFoB,EAGpB,OAAOhY,IAAP,GAAc,GAHM,EAItBgY,IAJsB,CAIjB,EAJiB,CAAxB;AAMA,UAAIC,aAAa,GAAGzpB,MAAM,CAAC;AAAEkL,QAAAA,EAAE,EAAE+d;AAAN,OAAD,EAAqBD,QAAQ,CAACH,KAA9B,CAA1B;AAEA/oB,MAAAA,CAAC,CAACypB,iBAAD,EAAoBE,aAApB,CAAD,CAAoCX,QAApC,CAA6C,KAAK9f,IAAlD;AACH;;AAED,WAAOigB,UAAP;AACH,GAl/E4B;AAo/E7BS,EAAAA,YAAY,EAAE,UAASC,MAAT,EAAiB;AAE3B,QAAI,CAACzpB,QAAQ,CAACypB,MAAD,CAAb,EAAuB;AACnB,YAAM,IAAIrB,SAAJ,CAAc,iEAAd,CAAN;AACH;;AAED,QAAIsB,QAAQ,GAAGD,MAAM,CAACze,EAAtB,CAN2B,CAQ3B;AACA;;AACA,QAAI,CAAC0e,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG,KAAK7gB,GAAL,CAASmC,EAAT,GAAc/J,QAAQ,CAACqnB,IAAI,CAACC,SAAL,CAAekB,MAAf,CAAD,CAAjC;AACH;;AAED,QAAI,CAAC,KAAKzB,SAAL,CAAe0B,QAAf,CAAL,EAA+B;AAE3B,UAAIf,KAAK,GAAG/nB,IAAI,CAAC6oB,MAAD,EAAS,MAAT,EAAiB,gBAAjB,CAAhB;AACA,UAAIE,UAAU,GAAG/pB,CAAC,CAAC,QAAD,EAAW;AACzBoL,QAAAA,EAAE,EAAE0e,QADqB;AAEzBE,QAAAA,MAAM,EAAE,MAFiB;AAGzBC,QAAAA,QAAQ,EAAE,SAHe;AAIzBC,QAAAA,WAAW,EAAEL,MAAM,CAACK,WAAP,IAAsB;AAJV,OAAX,EAKf,CACClqB,CAAC,CAAC6pB,MAAM,CAACnY,IAAP,IAAe,MAAhB,EAAwBqX,KAAxB,CADF,CALe,CAAlB;AASAgB,MAAAA,UAAU,CAACf,QAAX,CAAoB,KAAK9f,IAAzB;AACH;;AAED,WAAO4gB,QAAP;AACH;AAlhF4B,CAAZ,EAohFlB;AAECniB,EAAAA,OAAO,EAAE/E,YAFV;AAICunB,EAAAA,MAAM,EAAEnnB,WAJT;AAMCukB,EAAAA,kBAAkB,EAAE;AAEhB6C,IAAAA,MAAM,EAAE,UAASxD,GAAT,EAAc;AAClB;AACA;AAEA,UAAIY,MAAM,GAAGrL,QAAQ,CAAC4L,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAIsC,QAAQ,GAAGzD,GAAG,CAACviB,KAAnB;AACA,UAAIimB,SAAS,GAAG1D,GAAG,CAACtiB,MAApB;AAEAkjB,MAAAA,MAAM,CAACnjB,KAAP,GAAe,IAAIgmB,QAAnB;AACA7C,MAAAA,MAAM,CAACljB,MAAP,GAAgB,IAAIgmB,SAApB;AAEA,UAAIC,GAAG,GAAG/C,MAAM,CAACgD,UAAP,CAAkB,IAAlB,CAAV,CAXkB,CAYlB;;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC,EAbkB,CAclB;;AACAC,MAAAA,GAAG,CAACG,YAAJ,CAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAAC,CAA5B,EAA+BlD,MAAM,CAACnjB,KAAtC,EAA6CmjB,MAAM,CAACljB,MAApD;AACAimB,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC,EAhBkB,CAiBlB;;AACAC,MAAAA,GAAG,CAACG,YAAJ,CAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BlD,MAAM,CAACnjB,KAArC,EAA4C,CAA5C;AACAkmB,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC,EAnBkB,CAoBlB;;AACAC,MAAAA,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAA3B,EAA8B,CAA9B,EAAiClD,MAAM,CAACljB,MAAxC;AACAimB,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC;AAEA,aAAO9C,MAAP;AACH,KA3Be;AA6BhBmD,IAAAA,KAAK,EAAE,UAAS/D,GAAT,EAAc;AACjB;AACA;AAEA,UAAIY,MAAM,GAAGrL,QAAQ,CAAC4L,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAIsC,QAAQ,GAAGzD,GAAG,CAACviB,KAAnB;AACA,UAAIimB,SAAS,GAAG1D,GAAG,CAACtiB,MAApB;AAEAkjB,MAAAA,MAAM,CAACnjB,KAAP,GAAegmB,QAAQ,GAAG,CAA1B;AACA7C,MAAAA,MAAM,CAACljB,MAAP,GAAgBgmB,SAAhB;AAEA,UAAIC,GAAG,GAAG/C,MAAM,CAACgD,UAAP,CAAkB,IAAlB,CAAV,CAXiB,CAYjB;;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC,EAbiB,CAcjB;;AACAC,MAAAA,GAAG,CAAC1T,SAAJ,CAAc,IAAIwT,QAAlB,EAA4B,CAA5B;AACAE,MAAAA,GAAG,CAACjT,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;AACAiT,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC;AAEA,aAAO9C,MAAP;AACH,KAjDe;AAmDhBoD,IAAAA,KAAK,EAAE,UAAShE,GAAT,EAAc;AACjB;AACA;AAEA,UAAIY,MAAM,GAAGrL,QAAQ,CAAC4L,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAIsC,QAAQ,GAAGzD,GAAG,CAACviB,KAAnB;AACA,UAAIimB,SAAS,GAAG1D,GAAG,CAACtiB,MAApB;AAEAkjB,MAAAA,MAAM,CAACnjB,KAAP,GAAegmB,QAAf;AACA7C,MAAAA,MAAM,CAACljB,MAAP,GAAgBgmB,SAAS,GAAG,CAA5B;AAEA,UAAIC,GAAG,GAAG/C,MAAM,CAACgD,UAAP,CAAkB,IAAlB,CAAV,CAXiB,CAYjB;;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC,EAbiB,CAcjB;;AACAC,MAAAA,GAAG,CAAC1T,SAAJ,CAAc,CAAd,EAAiB,IAAIyT,SAArB;AACAC,MAAAA,GAAG,CAACjT,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd;AACAiT,MAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyByD,QAAzB,EAAmCC,SAAnC;AAEA,aAAO9C,MAAP;AACH,KAvEe;AAyEhBqD,IAAAA,SAAS,EAAE,UAASjE,GAAT,EAAc5e,GAAd,EAAmB;AAC1B;AACA;AAEAA,MAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AAEA,UAAIqiB,QAAQ,GAAGzD,GAAG,CAACviB,KAAnB;AACA,UAAIimB,SAAS,GAAG1D,GAAG,CAACtiB,MAApB;AAEA,UAAIkjB,MAAM,GAAGrL,QAAQ,CAAC4L,aAAT,CAAuB,QAAvB,CAAb;AACAP,MAAAA,MAAM,CAACnjB,KAAP,GAAegmB,QAAQ,GAAG,CAA1B;AACA7C,MAAAA,MAAM,CAACljB,MAAP,GAAgBgmB,SAAS,GAAG,CAA5B;AAEA,UAAIC,GAAG,GAAG/C,MAAM,CAACgD,UAAP,CAAkB,IAAlB,CAAV;AACA,UAAIxN,KAAK,GAAG/c,QAAQ,CAAC+H,GAAG,CAAC8iB,cAAL,CAAR,GAA+B,CAAC9iB,GAAG,CAAC8iB,cAApC,GAAqD,CAAC,EAAlE;AACA,UAAIC,OAAO,GAAGlpB,KAAK,CAACmb,KAAD,CAAnB;AACA,UAAIgO,KAAK,GAAGxD,MAAM,CAACnjB,KAAP,GAAe,CAA3B;AACA,UAAI4mB,KAAK,GAAGzD,MAAM,CAACljB,MAAP,GAAgB,CAA5B;;AAEA,WAAK,IAAIwN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,cAAI,CAAC4B,CAAC,GAAG5B,CAAL,IAAU,CAAV,GAAc,CAAlB,EAAqB;AACjB;AACAqa,YAAAA,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAAC,IAAI5Y,CAAJ,GAAQ,CAAT,IAAckZ,KAA3C,EAAkD,CAAC,IAAI9a,CAAJ,GAAQ,CAAT,IAAc+a,KAAhE;AACAV,YAAAA,GAAG,CAACxN,MAAJ,CAAWgO,OAAX;AACAR,YAAAA,GAAG,CAACE,SAAJ,CAAc7D,GAAd,EAAmB,CAACyD,QAAD,GAAY,CAA/B,EAAkC,CAACC,SAAD,GAAa,CAA/C,EAAkDD,QAAlD,EAA4DC,SAA5D;AACH;AACJ;AACJ;;AAED,aAAO9C,MAAP;AACH;AAxGe,GANrB;AAiHC/B,EAAAA,YAAY,EAAE;AACVyF,IAAAA,GAAG,EAAE,CAAC;AACFrD,MAAAA,KAAK,EAAE,SADL;AAEFsD,MAAAA,SAAS,EAAE,CAFT;AAGFzF,MAAAA,MAAM,EAAE,MAHN;AAIFlZ,MAAAA,MAAM,EAAE,UAASvC,EAAT,EAAajC,GAAb,EAAkB;AACtBhI,QAAAA,CAAC,CAACiK,EAAD,CAAD,CAAMkc,IAAN,CAAW;AACP9hB,UAAAA,KAAK,EAAE2D,GAAG,CAACmjB,SAAJ,GAAgBnjB,GAAG,CAACwP,EADpB;AAEPlT,UAAAA,MAAM,EAAE0D,GAAG,CAACmjB,SAAJ,GAAgBnjB,GAAG,CAACyP,EAFrB;AAGPwN,UAAAA,IAAI,EAAEjd,GAAG,CAAC6f;AAHH,SAAX;AAKH;AAVC,KAAD,CADK;AAaVuD,IAAAA,QAAQ,EAAE,CAAC;AACPvD,MAAAA,KAAK,EAAE,SADA;AAEPsD,MAAAA,SAAS,EAAE,CAFJ;AAGPzF,MAAAA,MAAM,EAAE,MAHD;AAIPlZ,MAAAA,MAAM,EAAE,UAASvC,EAAT,EAAajC,GAAb,EAAkB;AACtB,YAAI0e,IAAI,GAAG1e,GAAG,CAACwP,EAAJ,IAAU,CAAV,GAAcxP,GAAG,CAACmjB,SAAJ,GAAgBnjB,GAAG,CAACwP,EAAlC,GAAuCxP,GAAG,CAACmjB,SAAtD;AACAnrB,QAAAA,CAAC,CAACiK,EAAD,CAAD,CAAMkc,IAAN,CAAW;AAAE9hB,UAAAA,KAAK,EAAEqiB,IAAT;AAAepiB,UAAAA,MAAM,EAAEoiB,IAAvB;AAA6BzB,UAAAA,IAAI,EAAEjd,GAAG,CAAC6f;AAAvC,SAAX;AACH;AAPM,KAAD,CAbA;AAsBVwD,IAAAA,IAAI,EAAE,CAAC;AACHxD,MAAAA,KAAK,EAAE,SADJ;AAEHsD,MAAAA,SAAS,EAAE,CAFR;AAGHzF,MAAAA,MAAM,EAAE,MAHL;AAIHlZ,MAAAA,MAAM,EAAE,UAASvC,EAAT,EAAajC,GAAb,EAAkB;AAEtB,YAAI8U,CAAJ;AACA,YAAIzY,KAAK,GAAG2D,GAAG,CAAC3D,KAAhB;AACA,YAAIC,MAAM,GAAG0D,GAAG,CAAC1D,MAAjB;AACA,YAAI6mB,SAAS,GAAGnjB,GAAG,CAACmjB,SAApB;;AAEA,YAAI9mB,KAAK,GAAG8mB,SAAR,IAAqB,CAArB,IAA0B7mB,MAAM,GAAG6mB,SAAT,IAAsB,CAApD,EAAuD;AACnDrO,UAAAA,CAAC,GAAG,CAAC,GAAD,EAAMzY,KAAN,EAAa,CAAb,EAAgB,YAAhB,EAA8BC,MAA9B,EAAsColB,IAAtC,CAA2C,GAA3C,CAAJ;AACH,SAFD,MAEO;AACH5M,UAAAA,CAAC,GAAG,WAAJ;AACH;;AAED9c,QAAAA,CAAC,CAACiK,EAAD,CAAD,CAAMkc,IAAN,CAAW;AAAE,eAAKrJ,CAAP;AAAUwO,UAAAA,MAAM,EAAEtjB,GAAG,CAAC6f,KAAtB;AAA6B,0BAAgB7f,GAAG,CAACmjB;AAAjD,SAAX;AACH;AAlBE,KAAD,CAtBI;AA0CVI,IAAAA,UAAU,EAAE,CAAC;AACT1D,MAAAA,KAAK,EAAE,SADE;AAETsD,MAAAA,SAAS,EAAE,CAFF;AAGTzF,MAAAA,MAAM,EAAE,MAHC;AAITlZ,MAAAA,MAAM,EAAE,UAASvC,EAAT,EAAajC,GAAb,EAAkB;AAEtB,YAAI8U,CAAJ;AACA,YAAIzY,KAAK,GAAG2D,GAAG,CAAC3D,KAAhB;AACA,YAAIC,MAAM,GAAG0D,GAAG,CAAC1D,MAAjB;AACA,YAAI6mB,SAAS,GAAGnjB,GAAG,CAACmjB,SAApB;;AAEA,YAAI9mB,KAAK,GAAG8mB,SAAR,IAAqB,CAArB,IAA0B7mB,MAAM,GAAG6mB,SAAT,IAAsB,CAApD,EAAuD;AACnDrO,UAAAA,CAAC,GAAG,CAAC,GAAD,EAAMzY,KAAN,EAAa,CAAb,EAAgB,YAAhB,EAA8BC,MAA9B,EAAsColB,IAAtC,CAA2C,GAA3C,CAAJ;AACH,SAFD,MAEO;AACH5M,UAAAA,CAAC,GAAG,WAAJ;AACH;;AAED9c,QAAAA,CAAC,CAACiK,EAAD,CAAD,CAAMkc,IAAN,CAAW;AAAE,eAAKrJ,CAAP;AAAUwO,UAAAA,MAAM,EAAEtjB,GAAG,CAAC6f,KAAtB;AAA6B,0BAAgB7f,GAAG,CAACmjB;AAAjD,SAAX;AACH;AAlBQ,KAAD,EAmBT;AACCtD,MAAAA,KAAK,EAAE,SADR;AAECsD,MAAAA,SAAS,EAAE,CAFZ;AAGCnF,MAAAA,WAAW,EAAE,CAHd;AAICN,MAAAA,MAAM,EAAE,MAJT;AAKClZ,MAAAA,MAAM,EAAE,UAASvC,EAAT,EAAajC,GAAb,EAAkB;AAEtB,YAAI8U,CAAJ;AACA,YAAIzY,KAAK,GAAG2D,GAAG,CAAC3D,KAAhB;AACA,YAAIC,MAAM,GAAG0D,GAAG,CAAC1D,MAAjB;AACA,YAAI6mB,SAAS,GAAGnjB,GAAG,CAACmjB,SAApB;;AAEA,YAAI9mB,KAAK,GAAG8mB,SAAR,IAAqB,CAArB,IAA0B7mB,MAAM,GAAG6mB,SAAT,IAAsB,CAApD,EAAuD;AACnDrO,UAAAA,CAAC,GAAG,CAAC,GAAD,EAAMzY,KAAN,EAAa,CAAb,EAAgB,YAAhB,EAA8BC,MAA9B,EAAsColB,IAAtC,CAA2C,GAA3C,CAAJ;AACH,SAFD,MAEO;AACH5M,UAAAA,CAAC,GAAG,WAAJ;AACH;;AAED9c,QAAAA,CAAC,CAACiK,EAAD,CAAD,CAAMkc,IAAN,CAAW;AAAE,eAAKrJ,CAAP;AAAUwO,UAAAA,MAAM,EAAEtjB,GAAG,CAAC6f,KAAtB;AAA6B,0BAAgB7f,GAAG,CAACmjB;AAAjD,SAAX;AACH;AAnBF,KAnBS;AA1CF;AAjHf,CAphFkB,CAAd","sourcesContent":["import V from '../V/index.mjs';\nimport {\n    isNumber,\n    assign,\n    nextFrame,\n    isObject,\n    cancelFrame,\n    defaults,\n    defaultsDeep,\n    addClassNamePrefix,\n    normalizeSides,\n    isFunction,\n    isPlainObject,\n    getByPath,\n    sortElements,\n    isString,\n    normalizeEvent,\n    omit,\n    merge,\n    camelCase,\n    cloneDeep,\n    invoke,\n    hashCode,\n    filter as _filter,\n    template,\n    toArray,\n    has\n} from '../util/index.mjs';\nimport { Rect, Point, toRad } from '../g/index.mjs';\nimport { View, views } from '../mvc/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ElementView } from './ElementView.mjs';\nimport { LinkView } from './LinkView.mjs';\nimport { Link } from './Link.mjs';\nimport { Cell } from './Cell.mjs';\nimport { Graph } from './Graph.mjs';\nimport * as highlighters from '../highlighters/index.mjs';\nimport * as linkAnchors from '../linkAnchors/index.mjs';\nimport * as connectionPoints from '../connectionPoints/index.mjs';\nimport * as anchors from '../anchors/index.mjs';\n\nimport $ from 'jquery';\nimport Backbone from 'backbone';\n\nconst sortingTypes = {\n    NONE: 'sorting-none',\n    APPROX: 'sorting-approximate',\n    EXACT: 'sorting-exact'\n};\n\nconst LayersNames = {\n    CELLS: 'cells',\n    BACK: 'back',\n    FRONT: 'front',\n    TOOLS: 'tools'\n};\n\nconst MOUNT_BATCH_SIZE = 1000;\nconst UPDATE_BATCH_SIZE = Infinity;\nconst MIN_PRIORITY = 9007199254740991; // Number.MAX_SAFE_INTEGER\n\nconst HighlightingTypes = CellView.Highlighting;\n\nconst defaultHighlighting = {\n    [HighlightingTypes.DEFAULT]: {\n        name: 'stroke',\n        options: {\n            padding: 3\n        }\n    },\n    [HighlightingTypes.MAGNET_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-magnet'\n        }\n    },\n    [HighlightingTypes.ELEMENT_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-cell'\n        }\n    }\n};\n\nexport const Paper = View.extend({\n\n    className: 'paper',\n\n    options: {\n\n        width: 800,\n        height: 600,\n        origin: { x: 0, y: 0 }, // x,y coordinates in top-left corner\n        gridSize: 1,\n\n        // Whether or not to draw the grid lines on the paper's DOM element.\n        // e.g drawGrid: true, drawGrid: { color: 'red', thickness: 2 }\n        drawGrid: false,\n\n        // Whether or not to draw the background on the paper's DOM element.\n        // e.g. background: { color: 'lightblue', image: '/paper-background.png', repeat: 'flip-xy' }\n        background: false,\n\n        perpendicularLinks: false,\n        elementView: ElementView,\n        linkView: LinkView,\n        snapLabels: false, // false, true\n        snapLinks: false, // false, true, { radius: value }\n\n        // When set to FALSE, an element may not have more than 1 link with the same source and target element.\n        multiLinks: true,\n\n        // For adding custom guard logic.\n        guard: function(evt, view) {\n\n            // FALSE means the event isn't guarded.\n            return false;\n        },\n\n        highlighting: defaultHighlighting,\n\n        // Prevent the default context menu from being displayed.\n        preventContextMenu: true,\n\n        // Prevent the default action for blank:pointer<action>.\n        preventDefaultBlankAction: true,\n\n        // Restrict the translation of elements by given bounding box.\n        // Option accepts a boolean:\n        //  true - the translation is restricted to the paper area\n        //  false - no restrictions\n        // A method:\n        // restrictTranslate: function(elementView) {\n        //     var parentId = elementView.model.get('parent');\n        //     return parentId && this.model.getCell(parentId).getBBox();\n        // },\n        // Or a bounding box:\n        // restrictTranslate: { x: 10, y: 10, width: 790, height: 590 }\n        restrictTranslate: false,\n\n        // Marks all available magnets with 'available-magnet' class name and all available cells with\n        // 'available-cell' class name. Marks them when dragging a link is started and unmark\n        // when the dragging is stopped.\n        markAvailable: false,\n\n        // Defines what link model is added to the graph after an user clicks on an active magnet.\n        // Value could be the Backbone.model or a function returning the Backbone.model\n        // defaultLink: function(elementView, magnet) { return condition ? new customLink1() : new customLink2() }\n        defaultLink: new Link,\n\n        // A connector that is used by links with no connector defined on the model.\n        // e.g. { name: 'rounded', args: { radius: 5 }} or a function\n        defaultConnector: { name: 'normal' },\n\n        // A router that is used by links with no router defined on the model.\n        // e.g. { name: 'oneSide', args: { padding: 10 }} or a function\n        defaultRouter: { name: 'normal' },\n\n        defaultAnchor: { name: 'center' },\n\n        defaultLinkAnchor: { name: 'connectionRatio' },\n\n        defaultConnectionPoint: { name: 'bbox' },\n\n        /* CONNECTING */\n\n        connectionStrategy: null,\n\n        // Check whether to add a new link to the graph when user clicks on an a magnet.\n        validateMagnet: function(_cellView, magnet, _evt) {\n            return magnet.getAttribute('magnet') !== 'passive';\n        },\n\n        // Check whether to allow or disallow the link connection while an arrowhead end (source/target)\n        // being changed.\n        validateConnection: function(cellViewS, _magnetS, cellViewT, _magnetT, end, _linkView) {\n            return (end === 'target' ? cellViewT : cellViewS) instanceof ElementView;\n        },\n\n        /* EMBEDDING */\n\n        // Enables embedding. Re-parent the dragged element with elements under it and makes sure that\n        // all links and elements are visible taken the level of embedding into account.\n        embeddingMode: false,\n\n        // Check whether to allow or disallow the element embedding while an element being translated.\n        validateEmbedding: function(childView, parentView) {\n            // by default all elements can be in relation child-parent\n            return true;\n        },\n\n        // Determines the way how a cell finds a suitable parent when it's dragged over the paper.\n        // The cell with the highest z-index (visually on the top) will be chosen.\n        findParentBy: 'bbox', // 'bbox'|'center'|'origin'|'corner'|'topRight'|'bottomLeft'\n\n        // If enabled only the element on the very front is taken into account for the embedding.\n        // If disabled the elements under the dragged view are tested one by one\n        // (from front to back) until a valid parent found.\n        frontParentOnly: true,\n\n        // Interactive flags. See online docs for the complete list of interactive flags.\n        interactive: {\n            labelMove: false\n        },\n\n        // When set to true the links can be pinned to the paper.\n        // i.e. link source/target can be a point e.g. link.get('source') ==> { x: 100, y: 100 };\n        linkPinning: true,\n\n        // Custom validation after an interaction with a link ends.\n        // Recognizes a function. If `false` is returned, the link is disallowed (removed or reverted)\n        // (linkView, paper) => boolean\n        allowLink: null,\n\n        // Allowed number of mousemove events after which the pointerclick event will be still triggered.\n        clickThreshold: 0,\n\n        // Number of required mousemove events before the first pointermove event will be triggered.\n        moveThreshold: 0,\n\n        // Number of required mousemove events before the a link is created out of the magnet.\n        // Or string `onleave` so the link is created when the pointer leaves the magnet\n        magnetThreshold: 0,\n\n        // Rendering Options\n\n        sorting: sortingTypes.EXACT,\n\n        frozen: false,\n\n        // no docs yet\n        onViewUpdate: function(view, flag, priority, opt, paper) {\n            if ((flag & view.FLAG_INSERT) || opt.mounting) return;\n            paper.requestConnectedLinksUpdate(view, priority, opt);\n        },\n\n        // no docs yet\n        onViewPostponed: function(view, flag, paper) {\n            return paper.forcePostponedViewUpdate(view, flag);\n        },\n\n        beforeRender: null, // function(opt, paper) { },\n\n        afterRender: null, // function(stats, opt, paper) {\n\n        viewport: null,\n\n        // Default namespaces\n\n        cellViewNamespace: null,\n\n        highlighterNamespace: highlighters,\n\n        anchorNamespace: anchors,\n\n        linkAnchorNamespace: linkAnchors,\n\n        connectionPointNamespace: connectionPoints\n    },\n\n    events: {\n        'dblclick': 'pointerdblclick',\n        'contextmenu': 'contextmenu',\n        'mousedown': 'pointerdown',\n        'touchstart': 'pointerdown',\n        'mouseover': 'mouseover',\n        'mouseout': 'mouseout',\n        'mouseenter': 'mouseenter',\n        'mouseleave': 'mouseleave',\n        'mousewheel': 'mousewheel',\n        'DOMMouseScroll': 'mousewheel',\n        'mouseenter .joint-cell': 'mouseenter',\n        'mouseleave .joint-cell': 'mouseleave',\n        'mouseenter .joint-tools': 'mouseenter',\n        'mouseleave .joint-tools': 'mouseleave',\n        'mousedown .joint-cell [event]': 'onevent', // interaction with cell with `event` attribute set\n        'touchstart .joint-cell [event]': 'onevent',\n        'mousedown .joint-cell [magnet]': 'onmagnet', // interaction with cell with `magnet` attribute set\n        'touchstart .joint-cell [magnet]': 'onmagnet',\n        'dblclick .joint-cell [magnet]': 'magnetpointerdblclick',\n        'contextmenu .joint-cell [magnet]': 'magnetcontextmenu',\n        'mousedown .joint-link .label': 'onlabel', // interaction with link label\n        'touchstart .joint-link .label': 'onlabel',\n        'dragstart .joint-cell image': 'onImageDragStart' // firefox fix\n    },\n\n    documentEvents: {\n        'mousemove': 'pointermove',\n        'touchmove': 'pointermove',\n        'mouseup': 'pointerup',\n        'touchend': 'pointerup',\n        'touchcancel': 'pointerup'\n    },\n\n    svg: null,\n    viewport: null,\n    defs: null,\n    tools: null,\n    $background: null,\n    layers: null,\n    $grid: null,\n    $document: null,\n\n    _zPivots: null,\n    // For storing the current transformation matrix (CTM) of the paper's viewport.\n    _viewportMatrix: null,\n    // For verifying whether the CTM is up-to-date. The viewport transform attribute\n    // could have been manipulated directly.\n    _viewportTransformString: null,\n    // Updates data (priorities, unmounted views etc.)\n    _updates: null,\n    // Paper Layers\n    _layers: null,\n\n    SORT_DELAYING_BATCHES: ['add', 'to-front', 'to-back'],\n    UPDATE_DELAYING_BATCHES: ['translate'],\n    MIN_SCALE: 1e-6,\n\n    init: function() {\n\n        const { options, el } = this;\n        if (!options.cellViewNamespace) {\n            /* global joint: true */\n            options.cellViewNamespace = typeof joint !== 'undefined' && has(joint, 'shapes') ? joint.shapes : null;\n            /* global joint: false */\n        }\n\n        const model = this.model = options.model || new Graph;\n\n        // Layers (SVGGroups)\n        // TODO: layer classes\n        this._layers = {};\n\n        this.setGrid(options.drawGrid);\n        this.cloneOptions();\n        this.render();\n        this.setDimensions();\n        this.startListening();\n\n        // Hash of all cell views.\n        this._views = {};\n        // z-index pivots\n        this._zPivots = {};\n        // Reference to the paper owner document\n        this.$document = $(el.ownerDocument);\n        // Render existing cells in the graph\n        this.resetViews(model.attributes.cells.models);\n        // Start the Rendering Loop\n        if (!this.isFrozen() && this.isAsync()) this.updateViewsAsync();\n    },\n\n    _resetUpdates: function() {\n        return this._updates = {\n            id: null,\n            priorities: [{}, {}, {}],\n            unmountedCids: [],\n            mountedCids: [],\n            unmounted: {},\n            mounted: {},\n            count: 0,\n            keyFrozen: false,\n            freezeKey: null,\n            sort: false\n        };\n    },\n\n    startListening: function() {\n        var model = this.model;\n        this.listenTo(model, 'add', this.onCellAdded)\n            .listenTo(model, 'remove', this.onCellRemoved)\n            .listenTo(model, 'change', this.onCellChange)\n            .listenTo(model, 'reset', this.onGraphReset)\n            .listenTo(model, 'sort', this.onGraphSort)\n            .listenTo(model, 'batch:stop', this.onGraphBatchStop);\n        this.on('cell:highlight', this.onCellHighlight)\n            .on('cell:unhighlight', this.onCellUnhighlight)\n            .on('scale translate', this.update);\n    },\n\n    onCellAdded: function(cell, _, opt) {\n        var position = opt.position;\n        if (this.isAsync() || !isNumber(position)) {\n            this.renderView(cell, opt);\n        } else {\n            if (opt.maxPosition === position) this.freeze({ key: 'addCells' });\n            this.renderView(cell, opt);\n            if (position === 0) this.unfreeze({ key: 'addCells' });\n        }\n    },\n\n    onCellRemoved: function(cell, _, opt) {\n        const view = this.findViewByModel(cell);\n        if (view) this.requestViewUpdate(view, view.FLAG_REMOVE, view.UPDATE_PRIORITY, opt);\n    },\n\n    onCellChange: function(cell, opt) {\n        if (cell === this.model.attributes.cells) return;\n        if (cell.hasChanged('z') && this.options.sorting === sortingTypes.APPROX) {\n            const view = this.findViewByModel(cell);\n            if (view) this.requestViewUpdate(view, view.FLAG_INSERT, view.UPDATE_PRIORITY, opt);\n        }\n    },\n\n    onGraphReset: function(collection, opt) {\n        this.removeZPivots();\n        this.resetViews(collection.models, opt);\n    },\n\n    onGraphSort: function() {\n        if (this.model.hasActiveBatch(this.SORT_DELAYING_BATCHES)) return;\n        this.sortViews();\n    },\n\n    onGraphBatchStop: function(data) {\n        if (this.isFrozen()) return;\n        var name = data && data.batchName;\n        var graph = this.model;\n        if (!this.isAsync()) {\n            var updateDelayingBatches = this.UPDATE_DELAYING_BATCHES;\n            if (updateDelayingBatches.includes(name) && !graph.hasActiveBatch(updateDelayingBatches)) {\n                this.updateViews(data);\n            }\n        }\n        var sortDelayingBatches = this.SORT_DELAYING_BATCHES;\n        if (sortDelayingBatches.includes(name) && !graph.hasActiveBatch(sortDelayingBatches)) {\n            this.sortViews();\n        }\n    },\n\n    cloneOptions: function() {\n\n        const { options } = this;\n        const {\n            defaultConnector,\n            defaultRouter,\n            defaultConnectionPoint,\n            defaultAnchor,\n            defaultLinkAnchor,\n            origin,\n            highlighting,\n            cellViewNamespace,\n            interactive\n        } = options;\n\n        // Default cellView namespace for ES5\n        /* global joint: true */\n        if (!cellViewNamespace && typeof joint !== 'undefined' && has(joint, 'shapes')) {\n            options.cellViewNamespace = joint.shapes;\n        }\n        /* global joint: false */\n\n        // Here if a function was provided, we can not clone it, as this would result in loosing the function.\n        // If the default is used, the cloning is necessary in order to prevent modifying the options on prototype.\n        if (!isFunction(defaultConnector)) {\n            options.defaultConnector = cloneDeep(defaultConnector);\n        }\n        if (!isFunction(defaultRouter)) {\n            options.defaultRouter = cloneDeep(defaultRouter);\n        }\n        if (!isFunction(defaultConnectionPoint)) {\n            options.defaultConnectionPoint = cloneDeep(defaultConnectionPoint);\n        }\n        if (!isFunction(defaultAnchor)) {\n            options.defaultAnchor = cloneDeep(defaultAnchor);\n        }\n        if (!isFunction(defaultLinkAnchor)) {\n            options.defaultLinkAnchor = cloneDeep(defaultLinkAnchor);\n        }\n        if (isPlainObject(interactive)) {\n            options.interactive = assign({}, interactive);\n        }\n        if (isPlainObject(highlighting)) {\n            // Return the default highlighting options into the user specified options.\n            options.highlighting = defaultsDeep({}, highlighting, defaultHighlighting);\n        }\n        options.origin = assign({}, origin);\n    },\n\n    children: function() {\n        var ns = V.namespace;\n        return [{\n            namespaceURI: ns.xhtml,\n            tagName: 'div',\n            className: addClassNamePrefix('paper-background'),\n            selector: 'background'\n        }, {\n            namespaceURI: ns.xhtml,\n            tagName: 'div',\n            className: addClassNamePrefix('paper-grid'),\n            selector: 'grid'\n        }, {\n            namespaceURI: ns.svg,\n            tagName: 'svg',\n            attributes: {\n                'width': '100%',\n                'height': '100%',\n                'xmlns:xlink': ns.xlink\n            },\n            selector: 'svg',\n            children: [{\n                // Append `<defs>` element to the SVG document. This is useful for filters and gradients.\n                // It's desired to have the defs defined before the viewport (e.g. to make a PDF document pick up defs properly).\n                tagName: 'defs',\n                selector: 'defs'\n            }, {\n                tagName: 'g',\n                className: addClassNamePrefix('layers'),\n                selector: 'layers',\n                children: [{\n                    tagName: 'g',\n                    className: addClassNamePrefix('back-layer'),\n                    selector: 'back',\n                }, {\n                    tagName: 'g',\n                    className: addClassNamePrefix('cells-layer viewport'),\n                    selector: 'cells',\n                }, {\n                    tagName: 'g',\n                    className: addClassNamePrefix('front-layer'),\n                    selector: 'front',\n                }, {\n                    tagName: 'g',\n                    className: addClassNamePrefix('tools-layer'),\n                    selector: 'tools'\n                }]\n            }]\n        }];\n    },\n\n    getLayerNode(layerName) {\n        const { _layers } = this;\n        if (layerName in _layers) return _layers[layerName];\n        throw new Error(`dia.Paper: Unknown layer \"${layerName}\"`);\n    },\n\n    render: function() {\n\n        this.renderChildren();\n        const { childNodes, options } = this;\n        const { svg, cells, defs, tools, layers, back, front, background, grid } = childNodes;\n\n        this.svg = svg;\n        this.defs = defs;\n        this.tools = tools;\n        this.cells = cells;\n        this.layers = layers;\n        this.$background = $(background);\n        this.$grid = $(grid);\n\n        assign(this._layers, {\n            [LayersNames.BACK]: back,\n            [LayersNames.CELLS]: cells,\n            [LayersNames.FRONT]: front,\n            [LayersNames.TOOLS]: tools\n        });\n\n        V.ensureId(svg);\n\n        // backwards compatibility\n        this.viewport = cells;\n\n        if (options.background) {\n            this.drawBackground(options.background);\n        }\n\n        if (options.drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    update: function() {\n\n        if (this.options.drawGrid) {\n            this.drawGrid();\n        }\n\n        if (this._background) {\n            this.updateBackgroundImage(this._background);\n        }\n\n        return this;\n    },\n\n    matrix: function(ctm) {\n\n        var viewport = this.layers;\n\n        // Getter:\n        if (ctm === undefined) {\n\n            var transformString = viewport.getAttribute('transform');\n\n            if ((this._viewportTransformString || null) === transformString) {\n                // It's ok to return the cached matrix. The transform attribute has not changed since\n                // the matrix was stored.\n                ctm = this._viewportMatrix;\n            } else {\n                // The viewport transform attribute has changed. Measure the matrix and cache again.\n                ctm = viewport.getCTM();\n                this._viewportMatrix = ctm;\n                this._viewportTransformString = transformString;\n            }\n\n            // Clone the cached current transformation matrix.\n            // If no matrix previously stored the identity matrix is returned.\n            return V.createSVGMatrix(ctm);\n        }\n\n        // Setter:\n        ctm = V.createSVGMatrix(ctm);\n        var ctmString = V.matrixToTransformString(ctm);\n        viewport.setAttribute('transform', ctmString);\n\n        this._viewportMatrix = ctm;\n        this._viewportTransformString = viewport.getAttribute('transform');\n\n        return this;\n    },\n\n    clientMatrix: function() {\n\n        return V.createSVGMatrix(this.cells.getScreenCTM());\n    },\n\n    requestConnectedLinksUpdate: function(view, priority, opt) {\n        if (view instanceof CellView) {\n            var model = view.model;\n            var links = this.model.getConnectedLinks(model);\n            for (var j = 0, n = links.length; j < n; j++) {\n                var link = links[j];\n                var linkView = this.findViewByModel(link);\n                if (!linkView) continue;\n                var flagLabels = ['UPDATE'];\n                if (link.getTargetCell() === model) flagLabels.push('TARGET');\n                if (link.getSourceCell() === model) flagLabels.push('SOURCE');\n                var nextPriority = Math.max(priority + 1, linkView.UPDATE_PRIORITY);\n                this.scheduleViewUpdate(linkView, linkView.getFlag(flagLabels), nextPriority, opt);\n            }\n        }\n    },\n\n    forcePostponedViewUpdate: function(view, flag) {\n        if (!view || !(view instanceof CellView)) return false;\n        var model = view.model;\n        if (model.isElement()) return false;\n        if ((flag & view.getFlag(['SOURCE', 'TARGET'])) === 0) {\n            // LinkView is waiting for the target or the source cellView to be rendered\n            // This can happen when the cells are not in the viewport.\n            var sourceFlag = 0;\n            var sourceView = this.findViewByModel(model.getSourceCell());\n            if (sourceView && !this.isViewMounted(sourceView)) {\n                sourceFlag = this.dumpView(sourceView);\n                view.updateEndMagnet('source');\n            }\n            var targetFlag = 0;\n            var targetView = this.findViewByModel(model.getTargetCell());\n            if (targetView && !this.isViewMounted(targetView)) {\n                targetFlag = this.dumpView(targetView);\n                view.updateEndMagnet('target');\n            }\n            if (sourceFlag === 0 && targetFlag === 0) {\n                // If leftover flag is 0, all view updates were done.\n                return !this.dumpView(view);\n            }\n        }\n        return false;\n    },\n\n    requestViewUpdate: function(view, flag, priority, opt) {\n        opt || (opt = {});\n        this.scheduleViewUpdate(view, flag, priority, opt);\n        var isAsync = this.isAsync();\n        if (this.isFrozen() || (isAsync && opt.async !== false)) return;\n        if (this.model.hasActiveBatch(this.UPDATE_DELAYING_BATCHES)) return;\n        var stats = this.updateViews(opt);\n        if (isAsync) this.notifyAfterRender(stats, opt);\n    },\n\n    scheduleViewUpdate: function(view, type, priority, opt) {\n        const { _updates: updates, options } = this;\n        const { FLAG_REMOVE, FLAG_INSERT, UPDATE_PRIORITY, cid } = view;\n        let priorityUpdates = updates.priorities[priority];\n        if (!priorityUpdates) priorityUpdates = updates.priorities[priority] = {};\n        // Move higher priority updates to this priority\n        if (priority > UPDATE_PRIORITY) {\n            // Not the default priority for this view. It's most likely a link view\n            // connected to another link view, which triggered the update.\n            // TODO: If there is an update scheduled with a lower priority already, we should\n            // change the requested priority to the lowest one. Does not seem to be critical\n            // right now, as it \"only\" results in multiple updates on the same view.\n            for (let i = priority - 1; i >= UPDATE_PRIORITY; i--) {\n                const prevPriorityUpdates = updates.priorities[i];\n                if (!prevPriorityUpdates || !(cid in prevPriorityUpdates)) continue;\n                priorityUpdates[cid] |= prevPriorityUpdates[cid];\n                delete prevPriorityUpdates[cid];\n            }\n        }\n        let currentType = priorityUpdates[cid] || 0;\n        // Prevent cycling\n        if ((currentType & type) === type) return;\n        if (!currentType) updates.count++;\n        if (type & FLAG_REMOVE && currentType & FLAG_INSERT) {\n            // When a view is removed we need to remove the insert flag as this is a reinsert\n            priorityUpdates[cid] ^= FLAG_INSERT;\n        } else if (type & FLAG_INSERT && currentType & FLAG_REMOVE) {\n            // When a view is added we need to remove the remove flag as this is view was previously removed\n            priorityUpdates[cid] ^= FLAG_REMOVE;\n        }\n        priorityUpdates[cid] |= type;\n        const viewUpdateFn = options.onViewUpdate;\n        if (typeof viewUpdateFn === 'function') viewUpdateFn.call(this, view, type, priority, opt || {}, this);\n    },\n\n    dumpViewUpdate: function(view) {\n        if (!view) return 0;\n        var updates = this._updates;\n        var cid = view.cid;\n        var priorityUpdates = updates.priorities[view.UPDATE_PRIORITY];\n        var flag = this.registerMountedView(view) | priorityUpdates[cid];\n        delete priorityUpdates[cid];\n        return flag;\n    },\n\n    dumpView: function(view, opt) {\n        var flag = this.dumpViewUpdate(view);\n        if (!flag) return 0;\n        return this.updateView(view, flag, opt);\n    },\n\n    updateView: function(view, flag, opt) {\n        if (!view) return 0;\n        const { FLAG_REMOVE, FLAG_INSERT, model } = view;\n        if (view instanceof CellView) {\n            if (flag & FLAG_REMOVE) {\n                this.removeView(model);\n                return 0;\n            }\n            if (flag & FLAG_INSERT) {\n                this.insertView(view);\n                flag ^= FLAG_INSERT;\n            }\n        }\n        if (!flag) return 0;\n        return view.confirmUpdate(flag, opt || {});\n    },\n\n    requireView: function(model, opt) {\n        var view = this.findViewByModel(model);\n        if (!view) return null;\n        this.dumpView(view, opt);\n        return view;\n    },\n\n    registerUnmountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.unmounted) return 0;\n        var flag = updates.unmounted[cid] |= view.FLAG_INSERT;\n        updates.unmountedCids.push(cid);\n        delete updates.mounted[cid];\n        return flag;\n    },\n\n    registerMountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.mounted) return 0;\n        updates.mounted[cid] = true;\n        updates.mountedCids.push(cid);\n        var flag = updates.unmounted[cid] || 0;\n        delete updates.unmounted[cid];\n        return flag;\n    },\n\n    isViewMounted: function(view) {\n        if (!view) return false;\n        var cid = view.cid;\n        var updates = this._updates;\n        return (cid in updates.mounted);\n    },\n\n    dumpViews: function(opt) {\n        var passingOpt = defaults({}, opt, { viewport: null });\n        this.checkViewport(passingOpt);\n        this.updateViews(passingOpt);\n    },\n\n    // Synchronous views update\n    updateViews: function(opt) {\n        this.notifyBeforeRender(opt);\n        let batchStats;\n        let updateCount = 0;\n        let batchCount = 0;\n        let priority = MIN_PRIORITY;\n        do {\n            batchCount++;\n            batchStats = this.updateViewsBatch(opt);\n            updateCount += batchStats.updated;\n            priority = Math.min(batchStats.priority, priority);\n        } while (!batchStats.empty);\n        const stats = { updated: updateCount, batches: batchCount, priority };\n        this.notifyAfterRender(stats, opt);\n        return stats;\n    },\n\n    hasScheduledUpdates: function() {\n        const priorities = this._updates.priorities;\n        const priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        let i = priorityIndexes.length;\n        while (i > 0 && i--) {\n            // a faster way how to check if an object is empty\n            for (let _key in priorities[priorityIndexes[i]]) return true;\n        }\n        return false;\n    },\n\n    updateViewsAsync: function(opt, data) {\n        opt || (opt = {});\n        data || (data = { processed: 0, priority: MIN_PRIORITY });\n        var updates = this._updates;\n        var id = updates.id;\n        if (id) {\n            cancelFrame(id);\n            if (data.processed === 0 && this.hasScheduledUpdates()) {\n                this.notifyBeforeRender(opt);\n            }\n            var stats = this.updateViewsBatch(opt);\n            var passingOpt = defaults({}, opt, {\n                mountBatchSize: MOUNT_BATCH_SIZE - stats.mounted,\n                unmountBatchSize: MOUNT_BATCH_SIZE - stats.unmounted\n            });\n            var checkStats = this.checkViewport(passingOpt);\n            var unmountCount = checkStats.unmounted;\n            var mountCount = checkStats.mounted;\n            var processed = data.processed;\n            var total = updates.count;\n            if (stats.updated > 0) {\n                // Some updates have been just processed\n                processed += stats.updated + stats.unmounted;\n                stats.processed = processed;\n                data.priority = Math.min(stats.priority, data.priority);\n                if (stats.empty && mountCount === 0) {\n                    stats.unmounted += unmountCount;\n                    stats.mounted += mountCount;\n                    stats.priority = data.priority;\n                    this.notifyAfterRender(stats, opt);\n                    data.processed = 0;\n                    updates.count = 0;\n                } else {\n                    data.processed = processed;\n                }\n            }\n            // Progress callback\n            var progressFn = opt.progress;\n            if (total && typeof progressFn === 'function') {\n                progressFn.call(this, stats.empty, processed, total, stats, this);\n            }\n            // The current frame could have been canceled in a callback\n            if (updates.id !== id) return;\n        }\n        updates.id = nextFrame(this.updateViewsAsync, this, opt, data);\n    },\n\n    notifyBeforeRender: function(opt = {}) {\n        let beforeFn = opt.beforeRender;\n        if (typeof beforeFn !== 'function') {\n            beforeFn = this.options.beforeRender;\n            if (typeof beforeFn !== 'function') return;\n        }\n        beforeFn.call(this, opt, this);\n    },\n\n    notifyAfterRender: function(stats, opt = {}) {\n        let afterFn = opt.afterRender;\n        if (typeof afterFn !== 'function') {\n            afterFn = this.options.afterRender;\n        }\n        if (typeof afterFn === 'function') {\n            afterFn.call(this, stats, opt, this);\n        }\n        this.trigger('render:done', stats, opt);\n    },\n\n    updateViewsBatch: function(opt) {\n        opt || (opt = {});\n        var batchSize = opt.batchSize || UPDATE_BATCH_SIZE;\n        var updates = this._updates;\n        var updateCount = 0;\n        var postponeCount = 0;\n        var unmountCount = 0;\n        var mountCount = 0;\n        var maxPriority = MIN_PRIORITY;\n        var empty = true;\n        var options = this.options;\n        var priorities = updates.priorities;\n        var viewportFn = 'viewport' in opt ? opt.viewport : options.viewport;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var postponeViewFn = options.onViewPostponed;\n        if (typeof postponeViewFn !== 'function') postponeViewFn = null;\n        var priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        main: for (var i = 0, n = priorityIndexes.length; i < n; i++) {\n            var priority = priorityIndexes[i];\n            var priorityUpdates = priorities[priority];\n            for (var cid in priorityUpdates) {\n                if (updateCount >= batchSize) {\n                    empty = false;\n                    break main;\n                }\n                var view = views[cid];\n                if (!view) {\n                    // This should not occur\n                    delete priorityUpdates[cid];\n                    continue;\n                }\n                var currentFlag = priorityUpdates[cid];\n                if ((currentFlag & view.FLAG_REMOVE) === 0) {\n                    // We should never check a view for viewport if we are about to remove the view\n                    var isDetached = cid in updates.unmounted;\n                    if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, !isDetached, this)) {\n                        // Unmount View\n                        if (!isDetached) {\n                            this.registerUnmountedView(view);\n                            view.unmount();\n                        }\n                        updates.unmounted[cid] |= currentFlag;\n                        delete priorityUpdates[cid];\n                        unmountCount++;\n                        continue;\n                    }\n                    // Mount View\n                    if (isDetached) {\n                        currentFlag |= view.FLAG_INSERT;\n                        mountCount++;\n                    }\n                    currentFlag |= this.registerMountedView(view);\n                }\n                var leftoverFlag = this.updateView(view, currentFlag, opt);\n                if (leftoverFlag > 0) {\n                    // View update has not finished completely\n                    priorityUpdates[cid] = leftoverFlag;\n                    if (!postponeViewFn || !postponeViewFn.call(this, view, leftoverFlag, this) || priorityUpdates[cid]) {\n                        postponeCount++;\n                        empty = false;\n                        continue;\n                    }\n                }\n                if (maxPriority > priority) maxPriority = priority;\n                updateCount++;\n                delete priorityUpdates[cid];\n            }\n        }\n        return {\n            priority: maxPriority,\n            updated: updateCount,\n            postponed: postponeCount,\n            unmounted: unmountCount,\n            mounted: mountCount,\n            empty: empty\n        };\n    },\n\n    getUnmountedViews: function() {\n        const updates = this._updates;\n        const unmountedCids = Object.keys(updates.unmounted);\n        const n = unmountedCids.length;\n        const unmountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            unmountedViews[i] = views[unmountedCids[i]];\n        }\n        return unmountedViews;\n    },\n\n    getMountedViews: function() {\n        const updates = this._updates;\n        const mountedCids = Object.keys(updates.mounted);\n        const n = mountedCids.length;\n        const mountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            mountedViews[i] = views[mountedCids[i]];\n        }\n        return mountedViews;\n    },\n\n    checkUnmountedViews: function(viewportFn, opt) {\n        opt || (opt  = {});\n        var mountCount = 0;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var batchSize = 'mountBatchSize' in opt ? opt.mountBatchSize : Infinity;\n        var updates = this._updates;\n        var unmountedCids = updates.unmountedCids;\n        var unmounted = updates.unmounted;\n        for (var i = 0, n = Math.min(unmountedCids.length, batchSize); i < n; i++) {\n            var cid = unmountedCids[i];\n            if (!(cid in unmounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, false, this)) {\n                // Push at the end of all unmounted ids, so this can be check later again\n                unmountedCids.push(cid);\n                continue;\n            }\n            mountCount++;\n            var flag = this.registerMountedView(view);\n            if (flag) this.scheduleViewUpdate(view, flag, view.UPDATE_PRIORITY, { mounting: true });\n        }\n        // Get rid of views, that have been mounted\n        unmountedCids.splice(0, i);\n        return mountCount;\n    },\n\n    checkMountedViews: function(viewportFn, opt) {\n        opt || (opt = {});\n        var unmountCount = 0;\n        if (typeof viewportFn !== 'function') return unmountCount;\n        var batchSize = 'unmountBatchSize' in opt ? opt.unmountBatchSize : Infinity;\n        var updates = this._updates;\n        var mountedCids = updates.mountedCids;\n        var mounted = updates.mounted;\n        for (var i = 0, n = Math.min(mountedCids.length, batchSize); i < n; i++) {\n            var cid = mountedCids[i];\n            if (!(cid in mounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (!view.DETACHABLE || viewportFn.call(this, view, true, this)) {\n                // Push at the end of all mounted ids, so this can be check later again\n                mountedCids.push(cid);\n                continue;\n            }\n            unmountCount++;\n            var flag = this.registerUnmountedView(view);\n            if (flag) view.unmount();\n        }\n        // Get rid of views, that have been unmounted\n        mountedCids.splice(0, i);\n        return unmountCount;\n    },\n\n    checkViewport: function(opt) {\n        var passingOpt = defaults({}, opt, {\n            mountBatchSize: Infinity,\n            unmountBatchSize: Infinity\n        });\n        var viewportFn = 'viewport' in passingOpt ? passingOpt.viewport : this.options.viewport;\n        var unmountedCount = this.checkMountedViews(viewportFn, passingOpt);\n        if (unmountedCount > 0) {\n            // Do not check views, that have been just unmounted and pushed at the end of the cids array\n            var unmountedCids = this._updates.unmountedCids;\n            passingOpt.mountBatchSize = Math.min(unmountedCids.length - unmountedCount, passingOpt.mountBatchSize);\n        }\n        var mountedCount = this.checkUnmountedViews(viewportFn, passingOpt);\n        return {\n            mounted: mountedCount,\n            unmounted: unmountedCount\n        };\n    },\n\n    freeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var isFrozen = this.options.frozen;\n        var freezeKey = updates.freezeKey;\n        if (key && key !== freezeKey)  {\n            // key passed, but the paper is already freezed with another key\n            if (isFrozen && freezeKey) return;\n            updates.freezeKey = key;\n            updates.keyFrozen = isFrozen;\n        }\n        this.options.frozen = true;\n        var id = updates.id;\n        updates.id = null;\n        if (this.isAsync() && id) cancelFrame(id);\n    },\n\n    unfreeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var freezeKey = updates.freezeKey;\n        // key passed, but the paper is already freezed with another key\n        if (key && freezeKey && key !== freezeKey) return;\n        updates.freezeKey = null;\n        // key passed, but the paper is already freezed\n        if (key && key === freezeKey && updates.keyFrozen) return;\n        if (this.isAsync()) {\n            this.freeze();\n            this.updateViewsAsync(opt);\n        } else {\n            this.updateViews(opt);\n        }\n        this.options.frozen = updates.keyFrozen = false;\n        if (updates.sort) {\n            this.sortViews();\n            updates.sort = false;\n        }\n    },\n\n    isAsync: function() {\n        return !!this.options.async;\n    },\n\n    isFrozen: function() {\n        return !!this.options.frozen;\n    },\n\n    isExactSorting: function() {\n        return this.options.sorting === sortingTypes.EXACT;\n    },\n\n    onRemove: function() {\n\n        this.freeze();\n        //clean up all DOM elements/views to prevent memory leaks\n        this.removeViews();\n    },\n\n    getComputedSize: function() {\n\n        var options = this.options;\n        var w = options.width;\n        var h = options.height;\n        if (!isNumber(w)) w = this.el.clientWidth;\n        if (!isNumber(h)) h = this.el.clientHeight;\n        return { width: w, height: h };\n    },\n\n    setDimensions: function(width, height) {\n\n        var options = this.options;\n        var w = (width === undefined) ? options.width : width;\n        var h = (height === undefined) ? options.height : height;\n        this.options.width = w;\n        this.options.height = h;\n        if (isNumber(w)) w = Math.round(w);\n        if (isNumber(h)) h = Math.round(h);\n        this.$el.css({\n            width: (w === null) ? '' : w,\n            height: (h === null) ? '' : h\n        });\n        var computedSize = this.getComputedSize();\n        this.trigger('resize', computedSize.width, computedSize.height);\n    },\n\n    setOrigin: function(ox, oy) {\n\n        return this.translate(ox || 0, oy || 0, { absolute: true });\n    },\n\n    // Expand/shrink the paper to fit the content. Snap the width/height to the grid\n    // defined in `gridWidth`, `gridHeight`. `padding` adds to the resulting width/height of the paper.\n    // When options { fitNegative: true } it also translates the viewport in order to make all\n    // the content visible.\n    fitToContent: function(gridWidth, gridHeight, padding, opt) { // alternatively function(opt)\n\n        if (isObject(gridWidth)) {\n            // first parameter is an option object\n            opt = gridWidth;\n            gridWidth = opt.gridWidth || 1;\n            gridHeight = opt.gridHeight || 1;\n            padding = opt.padding || 0;\n\n        } else {\n\n            opt || (opt = {});\n            gridWidth = gridWidth || 1;\n            gridHeight = gridHeight || 1;\n            padding = padding || 0;\n        }\n\n        // Calculate the paper size to accomodate all the graph's elements.\n\n        padding = normalizeSides(padding);\n\n        var area = ('contentArea' in opt) ? new Rect(opt.contentArea) : this.getContentArea(opt);\n\n        var currentScale = this.scale();\n        var currentTranslate = this.translate();\n        var sx = currentScale.sx;\n        var sy = currentScale.sy;\n\n        area.x *= sx;\n        area.y *= sy;\n        area.width *= sx;\n        area.height *= sy;\n\n        var calcWidth = Math.max(Math.ceil((area.width + area.x) / gridWidth), 1) * gridWidth;\n        var calcHeight = Math.max(Math.ceil((area.height + area.y) / gridHeight), 1) * gridHeight;\n\n        var tx = 0;\n        var ty = 0;\n\n        if ((opt.allowNewOrigin == 'negative' && area.x < 0) || (opt.allowNewOrigin == 'positive' && area.x >= 0) || opt.allowNewOrigin == 'any') {\n            tx = Math.ceil(-area.x / gridWidth) * gridWidth;\n            tx += padding.left;\n            calcWidth += tx;\n        }\n\n        if ((opt.allowNewOrigin == 'negative' && area.y < 0) || (opt.allowNewOrigin == 'positive' && area.y >= 0) || opt.allowNewOrigin == 'any') {\n            ty = Math.ceil(-area.y / gridHeight) * gridHeight;\n            ty += padding.top;\n            calcHeight += ty;\n        }\n\n        calcWidth += padding.right;\n        calcHeight += padding.bottom;\n\n        // Make sure the resulting width and height are greater than minimum.\n        calcWidth = Math.max(calcWidth, opt.minWidth || 0);\n        calcHeight = Math.max(calcHeight, opt.minHeight || 0);\n\n        // Make sure the resulting width and height are lesser than maximum.\n        calcWidth = Math.min(calcWidth, opt.maxWidth || Number.MAX_VALUE);\n        calcHeight = Math.min(calcHeight, opt.maxHeight || Number.MAX_VALUE);\n\n        var computedSize = this.getComputedSize();\n        var dimensionChange = calcWidth != computedSize.width || calcHeight != computedSize.height;\n        var originChange = tx != currentTranslate.tx || ty != currentTranslate.ty;\n\n        // Change the dimensions only if there is a size discrepency or an origin change\n        if (originChange) {\n            this.translate(tx, ty);\n        }\n        if (dimensionChange) {\n            this.setDimensions(calcWidth, calcHeight);\n        }\n\n        return new Rect(-tx / sx, -ty / sy, calcWidth / sx, calcHeight / sy);\n    },\n\n    scaleContentToFit: function(opt) {\n\n        opt || (opt = {});\n\n        var contentBBox, contentLocalOrigin;\n        if ('contentArea' in opt) {\n            var contentArea = opt.contentArea;\n            contentBBox = this.localToPaperRect(contentArea);\n            contentLocalOrigin = new Point(contentArea);\n        } else {\n            contentBBox = this.getContentBBox(opt);\n            contentLocalOrigin = this.paperToLocalPoint(contentBBox);\n        }\n\n        if (!contentBBox.width || !contentBBox.height) return;\n\n        defaults(opt, {\n            padding: 0,\n            preserveAspectRatio: true,\n            scaleGrid: null,\n            minScale: 0,\n            maxScale: Number.MAX_VALUE\n            //minScaleX\n            //minScaleY\n            //maxScaleX\n            //maxScaleY\n            //fittingBBox\n        });\n\n        var padding = normalizeSides(opt.padding);\n\n        var minScaleX = opt.minScaleX || opt.minScale;\n        var maxScaleX = opt.maxScaleX || opt.maxScale;\n        var minScaleY = opt.minScaleY || opt.minScale;\n        var maxScaleY = opt.maxScaleY || opt.maxScale;\n\n        var fittingBBox;\n        if (opt.fittingBBox) {\n            fittingBBox = opt.fittingBBox;\n        } else {\n            var currentTranslate = this.translate();\n            var computedSize = this.getComputedSize();\n            fittingBBox = {\n                x: currentTranslate.tx,\n                y: currentTranslate.ty,\n                width: computedSize.width,\n                height: computedSize.height\n            };\n        }\n\n        fittingBBox = new Rect(fittingBBox).moveAndExpand({\n            x: padding.left,\n            y: padding.top,\n            width: -padding.left - padding.right,\n            height: -padding.top - padding.bottom\n        });\n\n        var currentScale = this.scale();\n\n        var newSx = fittingBBox.width / contentBBox.width * currentScale.sx;\n        var newSy = fittingBBox.height / contentBBox.height * currentScale.sy;\n\n        if (opt.preserveAspectRatio) {\n            newSx = newSy = Math.min(newSx, newSy);\n        }\n\n        // snap scale to a grid\n        if (opt.scaleGrid) {\n\n            var gridSize = opt.scaleGrid;\n\n            newSx = gridSize * Math.floor(newSx / gridSize);\n            newSy = gridSize * Math.floor(newSy / gridSize);\n        }\n\n        // scale min/max boundaries\n        newSx = Math.min(maxScaleX, Math.max(minScaleX, newSx));\n        newSy = Math.min(maxScaleY, Math.max(minScaleY, newSy));\n\n        var origin = this.options.origin;\n        var newOx = fittingBBox.x - contentLocalOrigin.x * newSx - origin.x;\n        var newOy = fittingBBox.y - contentLocalOrigin.y * newSy - origin.y;\n\n        this.scale(newSx, newSy);\n        this.translate(newOx, newOy);\n    },\n\n    // Return the dimensions of the content area in local units (without transformations).\n    getContentArea: function(opt) {\n\n        if (opt && opt.useModelGeometry) {\n            return this.model.getBBox() || new Rect();\n        }\n\n        return V(this.cells).getBBox();\n    },\n\n    // Return the dimensions of the content bbox in the paper units (as it appears on screen).\n    getContentBBox: function(opt) {\n\n        return this.localToPaperRect(this.getContentArea(opt));\n    },\n\n    // Returns a geometry rectangle representing the entire\n    // paper area (coordinates from the left paper border to the right one\n    // and the top border to the bottom one).\n    getArea: function() {\n\n        return this.paperToLocalRect(this.getComputedSize());\n    },\n\n    getRestrictedArea: function(...args) {\n\n        const { restrictTranslate } = this.options;\n\n        let restrictedArea;\n        if (isFunction(restrictTranslate)) {\n            // A method returning a bounding box\n            restrictedArea = restrictTranslate.apply(this, args);\n        } else if (restrictTranslate === true) {\n            // The paper area\n            restrictedArea = this.getArea();\n        } else if (!restrictTranslate) {\n            // falsy value\n            restrictedArea = null;\n        } else {\n            // any other value\n            restrictedArea = new Rect(restrictTranslate);\n        }\n\n        return restrictedArea;\n    },\n\n    createViewForModel: function(cell) {\n\n        // A class taken from the paper options.\n        var optionalViewClass;\n\n        // A default basic class (either dia.ElementView or dia.LinkView)\n        var defaultViewClass;\n\n        // A special class defined for this model in the corresponding namespace.\n        // e.g. joint.shapes.basic.Rect searches for joint.shapes.basic.RectView\n        var namespace = this.options.cellViewNamespace;\n        var type = cell.get('type') + 'View';\n        var namespaceViewClass = getByPath(namespace, type, '.');\n\n        if (cell.isLink()) {\n            optionalViewClass = this.options.linkView;\n            defaultViewClass = LinkView;\n        } else {\n            optionalViewClass = this.options.elementView;\n            defaultViewClass = ElementView;\n        }\n\n        // a) the paper options view is a class (deprecated)\n        //  1. search the namespace for a view\n        //  2. if no view was found, use view from the paper options\n        // b) the paper options view is a function\n        //  1. call the function from the paper options\n        //  2. if no view was return, search the namespace for a view\n        //  3. if no view was found, use the default\n        var ViewClass = (optionalViewClass.prototype instanceof Backbone.View)\n            ? namespaceViewClass || optionalViewClass\n            : optionalViewClass.call(this, cell) || namespaceViewClass || defaultViewClass;\n\n        return new ViewClass({\n            model: cell,\n            interactive: this.options.interactive\n        });\n    },\n\n    removeView: function(cell) {\n\n        const { id } = cell;\n        const { _views, _updates } = this;\n        const view = _views[id];\n        if (view) {\n            var { cid } = view;\n            const { mounted, unmounted } = _updates;\n            view.remove();\n            delete _views[id];\n            delete mounted[cid];\n            delete unmounted[cid];\n        }\n        return view;\n    },\n\n    renderView: function(cell, opt) {\n\n        var id = cell.id;\n        var views = this._views;\n        var view, flag;\n        if (id in views) {\n            view = views[id];\n            flag = view.FLAG_INSERT;\n        } else {\n            view = views[cell.id] = this.createViewForModel(cell);\n            view.paper = this;\n            flag = this.registerUnmountedView(view) | view.getFlag(view.initFlag);\n        }\n        this.requestViewUpdate(view, flag, view.UPDATE_PRIORITY, opt);\n        return view;\n    },\n\n    onImageDragStart: function() {\n        // This is the only way to prevent image dragging in Firefox that works.\n        // Setting -moz-user-select: none, draggable=\"false\" attribute or user-drag: none didn't help.\n\n        return false;\n    },\n\n    resetViews: function(cells, opt) {\n        opt || (opt = {});\n        cells || (cells = []);\n        this._resetUpdates();\n        // clearing views removes any event listeners\n        this.removeViews();\n        this.freeze({ key: 'reset' });\n        for (var i = 0, n = cells.length; i < n; i++) {\n            this.renderView(cells[i], opt);\n        }\n        this.unfreeze({ key: 'reset' });\n        this.sortViews();\n    },\n\n    removeViews: function() {\n\n        invoke(this._views, 'remove');\n\n        this._views = {};\n    },\n\n    sortViews: function() {\n\n        if (!this.isExactSorting()) {\n            // noop\n            return;\n        }\n        if (this.isFrozen()) {\n            // sort views once unfrozen\n            this._updates.sort = true;\n            return;\n        }\n        this.sortViewsExact();\n    },\n\n    sortViewsExact: function() {\n\n        // Run insertion sort algorithm in order to efficiently sort DOM elements according to their\n        // associated model `z` attribute.\n\n        var $cells = $(this.cells).children('[model-id]');\n        var cells = this.model.get('cells');\n\n        sortElements($cells, function(a, b) {\n            var cellA = cells.get(a.getAttribute('model-id'));\n            var cellB = cells.get(b.getAttribute('model-id'));\n            var zA = cellA.attributes.z || 0;\n            var zB = cellB.attributes.z || 0;\n            return (zA === zB) ? 0 : (zA < zB) ? -1 : 1;\n        });\n    },\n\n\n    insertView: function(view) {\n        var layer = this.cells;\n        switch (this.options.sorting) {\n            case sortingTypes.APPROX:\n                var z = view.model.get('z');\n                var pivot = this.addZPivot(z);\n                layer.insertBefore(view.el, pivot);\n                break;\n            case sortingTypes.EXACT:\n            default:\n                layer.appendChild(view.el);\n                break;\n        }\n    },\n\n    addZPivot: function(z) {\n        z = +z;\n        z || (z = 0);\n        var pivots = this._zPivots;\n        var pivot = pivots[z];\n        if (pivot) return pivot;\n        pivot = pivots[z] = document.createComment('z-index:' + (z + 1));\n        var neighborZ = -Infinity;\n        for (var currentZ in pivots) {\n            currentZ = +currentZ;\n            if (currentZ < z && currentZ > neighborZ) {\n                neighborZ = currentZ;\n                if (neighborZ === z - 1) continue;\n            }\n        }\n        var layer = this.cells;\n        if (neighborZ !== -Infinity) {\n            var neighborPivot = pivots[neighborZ];\n            // Insert After\n            layer.insertBefore(pivot, neighborPivot.nextSibling);\n        } else {\n            // First Child\n            layer.insertBefore(pivot, layer.firstChild);\n        }\n        return pivot;\n    },\n\n    removeZPivots: function() {\n        var { _zPivots: pivots, viewport } = this;\n        for (var z in pivots) viewport.removeChild(pivots[z]);\n        this._zPivots = {};\n    },\n\n    scale: function(sx, sy, ox, oy) {\n\n        // getter\n        if (sx === undefined) {\n            return V.matrixToScale(this.matrix());\n        }\n\n        // setter\n        if (sy === undefined) {\n            sy = sx;\n        }\n        if (ox === undefined) {\n            ox = 0;\n            oy = 0;\n        }\n\n        var translate = this.translate();\n\n        if (ox || oy || translate.tx || translate.ty) {\n            var newTx = translate.tx - ox * (sx - 1);\n            var newTy = translate.ty - oy * (sy - 1);\n            this.translate(newTx, newTy);\n        }\n\n        sx = Math.max(sx || 0, this.MIN_SCALE);\n        sy = Math.max(sy || 0, this.MIN_SCALE);\n\n        var ctm = this.matrix();\n        ctm.a = sx;\n        ctm.d = sy;\n\n        this.matrix(ctm);\n\n        this.trigger('scale', sx, sy, ox, oy);\n\n        return this;\n    },\n\n    // Experimental - do not use in production.\n    rotate: function(angle, cx, cy) {\n\n        // getter\n        if (angle === undefined) {\n            return V.matrixToRotate(this.matrix());\n        }\n\n        // setter\n\n        // If the origin is not set explicitely, rotate around the center. Note that\n        // we must use the plain bounding box (`this.el.getBBox()` instead of the one that gives us\n        // the real bounding box (`bbox()`) including transformations).\n        if (cx === undefined) {\n            var bbox = this.cells.getBBox();\n            cx = bbox.width / 2;\n            cy = bbox.height / 2;\n        }\n\n        var ctm = this.matrix().translate(cx, cy).rotate(angle).translate(-cx, -cy);\n        this.matrix(ctm);\n\n        return this;\n    },\n\n    translate: function(tx, ty) {\n\n        // getter\n        if (tx === undefined) {\n            return V.matrixToTranslate(this.matrix());\n        }\n\n        // setter\n\n        var ctm = this.matrix();\n        ctm.e = tx || 0;\n        ctm.f = ty || 0;\n\n        this.matrix(ctm);\n\n        var newTranslate = this.translate();\n        var origin = this.options.origin;\n        origin.x = newTranslate.tx;\n        origin.y = newTranslate.ty;\n\n        this.trigger('translate', newTranslate.tx, newTranslate.ty);\n\n        if (this.options.drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    // Find the first view climbing up the DOM tree starting at element `el`. Note that `el` can also\n    // be a selector or a jQuery object.\n    findView: function($el) {\n\n        var el = isString($el)\n            ? this.cells.querySelector($el)\n            : $el instanceof $ ? $el[0] : $el;\n\n        var id = this.findAttribute('model-id', el);\n        if (id) return this._views[id];\n\n        return undefined;\n    },\n\n    // Find a view for a model `cell`. `cell` can also be a string or number representing a model `id`.\n    findViewByModel: function(cell) {\n\n        var id = (isString(cell) || isNumber(cell)) ? cell : (cell && cell.id);\n\n        return this._views[id];\n    },\n\n    // Find all views at given point\n    findViewsFromPoint: function(p) {\n\n        p = new Point(p);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n\n        return views.filter(function(view) {\n            return view && view.vel.getBBox({ target: this.cells }).containsPoint(p);\n        }, this);\n    },\n\n    // Find all views in given area\n    findViewsInArea: function(rect, opt) {\n\n        opt = defaults(opt || {}, { strict: false });\n        rect = new Rect(rect);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n        var method = opt.strict ? 'containsRect' : 'intersect';\n\n        return views.filter(function(view) {\n            return view && rect[method](view.vel.getBBox({ target: this.cells }));\n        }, this);\n    },\n\n    removeTools: function() {\n        this.dispatchToolsEvent('remove');\n        return this;\n    },\n\n    hideTools: function() {\n        this.dispatchToolsEvent('hide');\n        return this;\n    },\n\n    showTools: function() {\n        this.dispatchToolsEvent('show');\n        return this;\n    },\n\n    dispatchToolsEvent: function(event, ...args) {\n        if (typeof event !== 'string') return;\n        this.trigger('tools:event', event, ...args);\n    },\n\n\n    getModelById: function(id) {\n\n        return this.model.getCell(id);\n    },\n\n    snapToGrid: function(x, y) {\n\n        // Convert global coordinates to the local ones of the `viewport`. Otherwise,\n        // improper transformation would be applied when the viewport gets transformed (scaled/rotated).\n        return this.clientToLocalPoint(x, y).snapToGrid(this.options.gridSize);\n    },\n\n    localToPaperPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var paperPoint = V.transformPoint(localPoint, this.matrix());\n        return paperPoint;\n    },\n\n    localToPaperRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var localRect = new Rect(x, y, width, height);\n        var paperRect = V.transformRect(localRect, this.matrix());\n        return paperRect;\n    },\n\n    paperToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var paperPoint = new Point(x, y);\n        var localPoint = V.transformPoint(paperPoint, this.matrix().inverse());\n        return localPoint;\n    },\n\n    paperToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var paperRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(paperRect, this.matrix().inverse());\n        return localRect;\n    },\n\n    localToClientPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var clientPoint = V.transformPoint(localPoint, this.clientMatrix());\n        return clientPoint;\n    },\n\n    localToClientRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var localRect = new Rect(x, y, width, height);\n        var clientRect = V.transformRect(localRect, this.clientMatrix());\n        return clientRect;\n    },\n\n    // Transform client coordinates to the paper local coordinates.\n    // Useful when you have a mouse event object and you'd like to get coordinates\n    // inside the paper that correspond to `evt.clientX` and `evt.clientY` point.\n    // Example: var localPoint = paper.clientToLocalPoint({ x: evt.clientX, y: evt.clientY });\n    clientToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var clientPoint = new Point(x, y);\n        var localPoint = V.transformPoint(clientPoint, this.clientMatrix().inverse());\n        return localPoint;\n    },\n\n    clientToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var clientRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(clientRect, this.clientMatrix().inverse());\n        return localRect;\n    },\n\n    localToPagePoint: function(x, y) {\n\n        return this.localToPaperPoint(x, y).offset(this.pageOffset());\n    },\n\n    localToPageRect: function(x, y, width, height) {\n\n        return this.localToPaperRect(x, y, width, height).offset(this.pageOffset());\n    },\n\n    pageToLocalPoint: function(x, y) {\n\n        var pagePoint = new Point(x, y);\n        var paperPoint = pagePoint.difference(this.pageOffset());\n        return this.paperToLocalPoint(paperPoint);\n    },\n\n    pageToLocalRect: function(x, y, width, height) {\n\n        var pageOffset = this.pageOffset();\n        var paperRect = new Rect(x, y, width, height);\n        paperRect.x -= pageOffset.x;\n        paperRect.y -= pageOffset.y;\n        return this.paperToLocalRect(paperRect);\n    },\n\n    clientOffset: function() {\n\n        var clientRect = this.svg.getBoundingClientRect();\n        return new Point(clientRect.left, clientRect.top);\n    },\n\n    pageOffset: function() {\n\n        return this.clientOffset().offset(window.scrollX, window.scrollY);\n    },\n\n    linkAllowed: function(linkView) {\n\n        if (!(linkView instanceof LinkView)) {\n            throw new Error('Must provide a linkView.');\n        }\n\n        var link = linkView.model;\n        var paperOptions = this.options;\n        var graph = this.model;\n        var ns = graph.constructor.validations;\n\n        if (!paperOptions.multiLinks) {\n            if (!ns.multiLinks.call(this, graph, link)) return false;\n        }\n\n        if (!paperOptions.linkPinning) {\n            // Link pinning is not allowed and the link is not connected to the target.\n            if (!ns.linkPinning.call(this, graph, link)) return false;\n        }\n\n        if (typeof paperOptions.allowLink === 'function') {\n            if (!paperOptions.allowLink.call(this, linkView, this)) return false;\n        }\n\n        return true;\n    },\n\n    getDefaultLink: function(cellView, magnet) {\n\n        return isFunction(this.options.defaultLink)\n        // default link is a function producing link model\n            ? this.options.defaultLink.call(this, cellView, magnet)\n        // default link is the Backbone model\n            : this.options.defaultLink.clone();\n    },\n\n    // Cell highlighting.\n    // ------------------\n\n    resolveHighlighter: function(opt = {}) {\n\n        let { highlighter: highlighterDef, type } = opt;\n        const { highlighting,highlighterNamespace  } = this.options;\n\n        /*\n            Expecting opt.highlighter to have the following structure:\n            {\n                name: 'highlighter-name',\n                options: {\n                    some: 'value'\n                }\n            }\n        */\n        if (highlighterDef === undefined) {\n\n            // Is highlighting disabled?\n            if (!highlighting) return false;\n            // check for built-in types\n            if (type) {\n                highlighterDef = highlighting[type];\n                // Is a specific type highlight disabled?\n                if (highlighterDef === false) return false;\n            }\n            if (!highlighterDef) {\n                // Type not defined use default highlight\n                highlighterDef = highlighting['default'];\n            }\n        }\n\n        // Do nothing if opt.highlighter is falsy.\n        // This allows the case to not highlight cell(s) in certain cases.\n        // For example, if you want to NOT highlight when embedding elements\n        // or use a custom highlighter.\n        if (!highlighterDef) return false;\n\n        // Allow specifying a highlighter by name.\n        if (isString(highlighterDef)) {\n            highlighterDef = {\n                name: highlighterDef\n            };\n        }\n\n        const name = highlighterDef.name;\n        const highlighter = highlighterNamespace[name];\n\n        // Highlighter validation\n        if (!highlighter) {\n            throw new Error('Unknown highlighter (\"' + name + '\")');\n        }\n        if (typeof highlighter.highlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required highlight() method');\n        }\n        if (typeof highlighter.unhighlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required unhighlight() method');\n        }\n\n        return {\n            highlighter,\n            options: highlighterDef.options || {},\n            name\n        };\n    },\n\n    onCellHighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.highlight(cellView, magnetEl, options);\n    },\n\n    onCellUnhighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.unhighlight(cellView, magnetEl, options);\n    },\n\n    // Interaction.\n    // ------------\n\n    pointerdblclick: function(evt) {\n\n        evt.preventDefault();\n\n        // magnetpointerdblclick can stop propagation\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.pointerdblclick(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:pointerdblclick', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerclick: function(evt) {\n\n        // magnetpointerclick can stop propagation\n\n        var data = this.eventData(evt);\n        // Trigger event only if mouse has not moved.\n        if (data.mousemoved <= this.options.clickThreshold) {\n\n            evt = normalizeEvent(evt);\n\n            var view = this.findView(evt.target);\n            if (this.guard(evt, view)) return;\n\n            var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n            if (view) {\n                view.pointerclick(evt, localPoint.x, localPoint.y);\n\n            } else {\n                this.trigger('blank:pointerclick', evt, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    contextmenu: function(evt) {\n\n        if (this.options.preventContextMenu) evt.preventDefault();\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.contextmenu(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:contextmenu', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerdown: function(evt) {\n\n        // onmagnet stops propagation when `addLinkFromMagnet` is allowed\n        // onevent can stop propagation\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n\n            evt.preventDefault();\n            view.pointerdown(evt, localPoint.x, localPoint.y);\n\n        } else {\n\n            if (this.options.preventDefaultBlankAction) evt.preventDefault();\n\n            this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n        }\n\n        this.delegateDragEvents(view, evt.data);\n    },\n\n    pointermove: function(evt) {\n\n        // mouse moved counter\n        var data = this.eventData(evt);\n        data.mousemoved || (data.mousemoved = 0);\n        var mousemoved = ++data.mousemoved;\n\n        if (mousemoved <= this.options.moveThreshold) return;\n\n        evt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        var view = data.sourceView;\n        if (view) {\n            view.pointermove(evt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n        }\n\n        this.eventData(evt, data);\n    },\n\n    pointerup: function(evt) {\n\n        this.undelegateDocumentEvents();\n\n        var normalizedEvt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n\n        var view = this.eventData(evt).sourceView;\n        if (view) {\n            view.pointerup(normalizedEvt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointerup', normalizedEvt, localPoint.x, localPoint.y);\n        }\n\n        if (!normalizedEvt.isPropagationStopped()) {\n            this.pointerclick($.Event(evt, { type: 'click', data: evt.data }));\n        }\n\n        evt.stopImmediatePropagation();\n        this.delegateEvents();\n    },\n\n    mouseover: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseover(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseover', evt);\n        }\n    },\n\n    mouseout: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseout(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseout', evt);\n        }\n    },\n\n    mouseenter: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n        var relatedView = this.findView(evt.relatedTarget);\n        if (view) {\n            // mouse moved from tool over view?\n            if (relatedView === view) return;\n            view.mouseenter(evt);\n        } else {\n            if (relatedView) return;\n            // `paper` (more descriptive), not `blank`\n            this.trigger('paper:mouseenter', evt);\n        }\n    },\n\n    mouseleave: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n        var relatedView = this.findView(evt.relatedTarget);\n        if (view) {\n            // mouse moved from view over tool?\n            if (relatedView === view) return;\n            view.mouseleave(evt);\n        } else {\n            if (relatedView) return;\n            // `paper` (more descriptive), not `blank`\n            this.trigger('paper:mouseleave', evt);\n        }\n    },\n\n    mousewheel: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var originalEvent = evt.originalEvent;\n        var localPoint = this.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n        var delta = Math.max(-1, Math.min(1, (originalEvent.wheelDelta || -originalEvent.detail)));\n\n        if (view) {\n            view.mousewheel(evt, localPoint.x, localPoint.y, delta);\n\n        } else {\n            this.trigger('blank:mousewheel', evt, localPoint.x, localPoint.y, delta);\n        }\n    },\n\n    onevent: function(evt) {\n\n        var eventNode = evt.currentTarget;\n        var eventName = eventNode.getAttribute('event');\n        if (eventName) {\n            var view = this.findView(eventNode);\n            if (view) {\n\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                view.onevent(evt, eventName, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    magnetEvent: function(evt, handler) {\n\n        var magnetNode = evt.currentTarget;\n        var magnetValue = magnetNode.getAttribute('magnet');\n        if (magnetValue) {\n            var view = this.findView(magnetNode);\n            if (view) {\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                handler.call(this, view, evt, magnetNode, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    onmagnet: function(evt) {\n\n        this.magnetEvent(evt, function(view, evt, _, x, y) {\n            view.onmagnet(evt, x, y);\n        });\n    },\n\n\n    magnetpointerdblclick: function(evt) {\n\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetpointerdblclick(evt, magnet, x, y);\n        });\n    },\n\n    magnetcontextmenu: function(evt) {\n\n        if (this.options.preventContextMenu) evt.preventDefault();\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetcontextmenu(evt, magnet, x, y);\n        });\n    },\n\n    onlabel: function(evt) {\n\n        var labelNode = evt.currentTarget;\n        var view = this.findView(labelNode);\n        if (view) {\n\n            evt = normalizeEvent(evt);\n            if (this.guard(evt, view)) return;\n\n            var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n            view.onlabel(evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    getPointerArgs(evt) {\n        const normalizedEvt = normalizeEvent(evt);\n        const { x, y } = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n        return [normalizedEvt, x, y];\n    },\n\n    delegateDragEvents: function(view, data) {\n\n        data || (data = {});\n        this.eventData({ data: data }, { sourceView: view || null, mousemoved: 0 });\n        this.delegateDocumentEvents(null, data);\n        this.undelegateEvents();\n    },\n\n    // Guard the specified event. If the event is not interesting, guard returns `true`.\n    // Otherwise, it returns `false`.\n    guard: function(evt, view) {\n\n        if (evt.type === 'mousedown' && evt.button === 2) {\n            // handled as `contextmenu` type\n            return true;\n        }\n\n        if (this.options.guard && this.options.guard(evt, view)) {\n            return true;\n        }\n\n        if (evt.data && evt.data.guarded !== undefined) {\n            return evt.data.guarded;\n        }\n\n        if (view && view.model && (view.model instanceof Cell)) {\n            return false;\n        }\n\n        if (this.svg === evt.target || this.el === evt.target || $.contains(this.svg, evt.target)) {\n            return false;\n        }\n\n        return true;    // Event guarded. Paper should not react on it in any way.\n    },\n\n    setGridSize: function(gridSize) {\n\n        this.options.gridSize = gridSize;\n\n        if (this.options.drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    clearGrid: function() {\n\n        if (this.$grid) {\n            this.$grid.css('backgroundImage', 'none');\n        }\n        return this;\n    },\n\n    _getGridRefs: function() {\n\n        if (!this._gridCache) {\n\n            this._gridCache = {\n                root: V('svg', { width: '100%', height: '100%' }, V('defs')),\n                patterns: {},\n                add: function(id, vel) {\n                    V(this.root.node.childNodes[0]).append(vel);\n                    this.patterns[id] = vel;\n                    this.root.append(V('rect', { width: '100%', height: '100%', fill: 'url(#' + id + ')' }));\n                },\n                get: function(id) {\n                    return this.patterns[id];\n                },\n                exist: function(id) {\n                    return this.patterns[id] !== undefined;\n                }\n            };\n        }\n\n        return this._gridCache;\n    },\n\n    setGrid: function(drawGrid) {\n\n        this.clearGrid();\n\n        this._gridCache = null;\n        this._gridSettings = [];\n\n        var optionsList = Array.isArray(drawGrid) ? drawGrid : [drawGrid || {}];\n        optionsList.forEach(function(item) {\n            this._gridSettings.push.apply(this._gridSettings, this._resolveDrawGridOption(item));\n        }, this);\n        return this;\n    },\n\n    _resolveDrawGridOption: function(opt) {\n\n        var namespace = this.constructor.gridPatterns;\n        if (isString(opt) && Array.isArray(namespace[opt])) {\n            return namespace[opt].map(function(item) {\n                return assign({}, item);\n            });\n        }\n\n        var options = opt || { args: [{}] };\n        var isArray = Array.isArray(options);\n        var name = options.name;\n\n        if (!isArray && !name && !options.markup) {\n            name = 'dot';\n        }\n\n        if (name && Array.isArray(namespace[name])) {\n            var pattern = namespace[name].map(function(item) {\n                return assign({}, item);\n            });\n\n            var args = Array.isArray(options.args) ? options.args : [options.args || {}];\n\n            defaults(args[0], omit(opt, 'args'));\n            for (var i = 0; i < args.length; i++) {\n                if (pattern[i]) {\n                    assign(pattern[i], args[i]);\n                }\n            }\n            return pattern;\n        }\n\n        return isArray ? options : [options];\n    },\n\n    drawGrid: function(opt) {\n\n        var gridSize = this.options.gridSize;\n        if (gridSize <= 1) {\n            return this.clearGrid();\n        }\n\n        var localOptions = Array.isArray(opt) ? opt : [opt];\n\n        var ctm = this.matrix();\n        var refs = this._getGridRefs();\n\n        this._gridSettings.forEach(function(gridLayerSetting, index) {\n\n            var id = 'pattern_' + index;\n            var options = merge(gridLayerSetting, localOptions[index], {\n                sx: ctm.a || 1,\n                sy: ctm.d || 1,\n                ox: ctm.e || 0,\n                oy: ctm.f || 0\n            });\n\n            options.width = gridSize * (ctm.a || 1) * (options.scaleFactor || 1);\n            options.height = gridSize * (ctm.d || 1) * (options.scaleFactor || 1);\n\n            if (!refs.exist(id)) {\n                refs.add(id, V('pattern', { id: id, patternUnits: 'userSpaceOnUse' }, V(options.markup)));\n            }\n\n            var patternDefVel = refs.get(id);\n\n            if (isFunction(options.update)) {\n                options.update(patternDefVel.node.childNodes[0], options);\n            }\n\n            var x = options.ox % options.width;\n            if (x < 0) x += options.width;\n\n            var y = options.oy % options.height;\n            if (y < 0) y += options.height;\n\n            patternDefVel.attr({\n                x: x,\n                y: y,\n                width: options.width,\n                height: options.height\n            });\n        });\n\n        var patternUri = new XMLSerializer().serializeToString(refs.root.node);\n        patternUri = 'url(data:image/svg+xml;base64,' + btoa(patternUri) + ')';\n\n        this.$grid.css('backgroundImage', patternUri);\n\n        return this;\n    },\n\n    updateBackgroundImage: function(opt) {\n\n        opt = opt || {};\n\n        var backgroundPosition = opt.position || 'center';\n        var backgroundSize = opt.size || 'auto auto';\n\n        var currentScale = this.scale();\n        var currentTranslate = this.translate();\n\n        // backgroundPosition\n        if (isObject(backgroundPosition)) {\n            var x = currentTranslate.tx + (currentScale.sx * (backgroundPosition.x || 0));\n            var y = currentTranslate.ty + (currentScale.sy * (backgroundPosition.y || 0));\n            backgroundPosition = x + 'px ' + y + 'px';\n        }\n\n        // backgroundSize\n        if (isObject(backgroundSize)) {\n            backgroundSize = new Rect(backgroundSize).scale(currentScale.sx, currentScale.sy);\n            backgroundSize = backgroundSize.width + 'px ' + backgroundSize.height + 'px';\n        }\n\n        this.$background.css({\n            backgroundSize: backgroundSize,\n            backgroundPosition: backgroundPosition\n        });\n    },\n\n    drawBackgroundImage: function(img, opt) {\n\n        // Clear the background image if no image provided\n        if (!(img instanceof HTMLImageElement)) {\n            this.$background.css('backgroundImage', '');\n            return;\n        }\n\n        opt = opt || {};\n\n        var backgroundImage;\n        var backgroundSize = opt.size;\n        var backgroundRepeat = opt.repeat || 'no-repeat';\n        var backgroundOpacity = opt.opacity || 1;\n        var backgroundQuality = Math.abs(opt.quality) || 1;\n        var backgroundPattern = this.constructor.backgroundPatterns[camelCase(backgroundRepeat)];\n\n        if (isFunction(backgroundPattern)) {\n            // 'flip-x', 'flip-y', 'flip-xy', 'watermark' and custom\n            img.width *= backgroundQuality;\n            img.height *= backgroundQuality;\n            var canvas = backgroundPattern(img, opt);\n            if (!(canvas instanceof HTMLCanvasElement)) {\n                throw new Error('dia.Paper: background pattern must return an HTML Canvas instance');\n            }\n\n            backgroundImage = canvas.toDataURL('image/png');\n            backgroundRepeat = 'repeat';\n            if (isObject(backgroundSize)) {\n                // recalculate the tile size if an object passed in\n                backgroundSize.width *= canvas.width / img.width;\n                backgroundSize.height *= canvas.height / img.height;\n            } else if (backgroundSize === undefined) {\n                // calculate the tile size if no provided\n                opt.size = {\n                    width: canvas.width / backgroundQuality,\n                    height: canvas.height / backgroundQuality\n                };\n            }\n        } else {\n            // backgroundRepeat:\n            // no-repeat', 'round', 'space', 'repeat', 'repeat-x', 'repeat-y'\n            backgroundImage = img.src;\n            if (backgroundSize === undefined) {\n                // pass the image size for  the backgroundSize if no size provided\n                opt.size = {\n                    width: img.width,\n                    height: img.height\n                };\n            }\n        }\n\n        this.$background.css({\n            opacity: backgroundOpacity,\n            backgroundRepeat: backgroundRepeat,\n            backgroundImage: 'url(' + backgroundImage + ')'\n        });\n\n        this.updateBackgroundImage(opt);\n    },\n\n    updateBackgroundColor: function(color) {\n\n        this.$el.css('backgroundColor', color || '');\n    },\n\n    drawBackground: function(opt) {\n\n        opt = opt || {};\n\n        this.updateBackgroundColor(opt.color);\n\n        if (opt.image) {\n            opt = this._background = cloneDeep(opt);\n            var img = document.createElement('img');\n            img.onload = this.drawBackgroundImage.bind(this, img, opt);\n            img.src = opt.image;\n        } else {\n            this.drawBackgroundImage(null);\n            this._background = null;\n        }\n\n        return this;\n    },\n\n    setInteractivity: function(value) {\n\n        this.options.interactive = value;\n\n        invoke(this._views, 'setInteractivity', value);\n    },\n\n    // Paper definitions.\n    // ------------------\n\n    isDefined: function(defId) {\n\n        return !!this.svg.getElementById(defId);\n    },\n\n    defineFilter: function(filter) {\n\n        if (!isObject(filter)) {\n            throw new TypeError('dia.Paper: defineFilter() requires 1. argument to be an object.');\n        }\n\n        var filterId = filter.id;\n        var name = filter.name;\n        // Generate a hash code from the stringified filter definition. This gives us\n        // a unique filter ID for different definitions.\n        if (!filterId) {\n            filterId = name + this.svg.id + hashCode(JSON.stringify(filter));\n        }\n        // If the filter already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        // If not, create one.\n        if (!this.isDefined(filterId)) {\n\n            var namespace = _filter;\n            var filterSVGString = namespace[name] && namespace[name](filter.args || {});\n            if (!filterSVGString) {\n                throw new Error('Non-existing filter ' + name);\n            }\n\n            // Set the filter area to be 3x the bounding box of the cell\n            // and center the filter around the cell.\n            var filterAttrs = assign({\n                filterUnits: 'objectBoundingBox',\n                x: -1,\n                y: -1,\n                width: 3,\n                height: 3\n            }, filter.attrs, {\n                id: filterId\n            });\n\n            V(filterSVGString, filterAttrs).appendTo(this.defs);\n        }\n\n        return filterId;\n    },\n\n    defineGradient: function(gradient) {\n\n        if (!isObject(gradient)) {\n            throw new TypeError('dia.Paper: defineGradient() requires 1. argument to be an object.');\n        }\n\n        var gradientId = gradient.id;\n        var type = gradient.type;\n        var stops = gradient.stops;\n        // Generate a hash code from the stringified filter definition. This gives us\n        // a unique filter ID for different definitions.\n        if (!gradientId) {\n            gradientId = type + this.svg.id + hashCode(JSON.stringify(gradient));\n        }\n        // If the gradient already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        // If not, create one.\n        if (!this.isDefined(gradientId)) {\n\n            var stopTemplate = template('<stop offset=\"${offset}\" stop-color=\"${color}\" stop-opacity=\"${opacity}\"/>');\n            var gradientStopsStrings = toArray(stops).map(function(stop) {\n                return stopTemplate({\n                    offset: stop.offset,\n                    color: stop.color,\n                    opacity: Number.isFinite(stop.opacity) ? stop.opacity : 1\n                });\n            });\n\n            var gradientSVGString = [\n                '<' + type + '>',\n                gradientStopsStrings.join(''),\n                '</' + type + '>'\n            ].join('');\n\n            var gradientAttrs = assign({ id: gradientId }, gradient.attrs);\n\n            V(gradientSVGString, gradientAttrs).appendTo(this.defs);\n        }\n\n        return gradientId;\n    },\n\n    defineMarker: function(marker) {\n\n        if (!isObject(marker)) {\n            throw new TypeError('dia.Paper: defineMarker() requires 1. argument to be an object.');\n        }\n\n        var markerId = marker.id;\n\n        // Generate a hash code from the stringified filter definition. This gives us\n        // a unique filter ID for different definitions.\n        if (!markerId) {\n            markerId = this.svg.id + hashCode(JSON.stringify(marker));\n        }\n\n        if (!this.isDefined(markerId)) {\n\n            var attrs = omit(marker, 'type', 'userSpaceOnUse');\n            var pathMarker = V('marker', {\n                id: markerId,\n                orient: 'auto',\n                overflow: 'visible',\n                markerUnits: marker.markerUnits || 'userSpaceOnUse'\n            }, [\n                V(marker.type || 'path', attrs)\n            ]);\n\n            pathMarker.appendTo(this.defs);\n        }\n\n        return markerId;\n    }\n\n}, {\n\n    sorting: sortingTypes,\n\n    Layers: LayersNames,\n\n    backgroundPatterns: {\n\n        flipXy: function(img) {\n            // d b\n            // q p\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = 2 * imgWidth;\n            canvas.height = 2 * imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // top-left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // xy-flipped bottom-right image\n            ctx.setTransform(-1, 0, 0, -1, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // x-flipped top-right image\n            ctx.setTransform(-1, 0, 0, 1, canvas.width, 0);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // y-flipped bottom-left image\n            ctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipX: function(img) {\n            // d b\n            // d b\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth * 2;\n            canvas.height = imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped right image\n            ctx.translate(2 * imgWidth, 0);\n            ctx.scale(-1, 1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipY: function(img) {\n            // d d\n            // q q\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth;\n            canvas.height = imgHeight * 2;\n\n            var ctx = canvas.getContext('2d');\n            // top image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped bottom image\n            ctx.translate(0, 2 * imgHeight);\n            ctx.scale(1, -1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        watermark: function(img, opt) {\n            //   d\n            // d\n\n            opt = opt || {};\n\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            var canvas = document.createElement('canvas');\n            canvas.width = imgWidth * 3;\n            canvas.height = imgHeight * 3;\n\n            var ctx = canvas.getContext('2d');\n            var angle = isNumber(opt.watermarkAngle) ? -opt.watermarkAngle : -20;\n            var radians = toRad(angle);\n            var stepX = canvas.width / 4;\n            var stepY = canvas.height / 4;\n\n            for (var i = 0; i < 4; i++) {\n                for (var j = 0; j < 4; j++) {\n                    if ((i + j) % 2 > 0) {\n                        // reset the current transformations\n                        ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n                        ctx.rotate(radians);\n                        ctx.drawImage(img, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\n                    }\n                }\n            }\n\n            return canvas;\n        }\n    },\n\n    gridPatterns: {\n        dot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            update: function(el, opt) {\n                V(el).attr({\n                    width: opt.thickness * opt.sx,\n                    height: opt.thickness * opt.sy,\n                    fill: opt.color\n                });\n            }\n        }],\n        fixedDot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            update: function(el, opt) {\n                var size = opt.sx <= 1 ? opt.thickness * opt.sx : opt.thickness;\n                V(el).attr({ width: size, height: size, fill: opt.color });\n            }\n        }],\n        mesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }],\n        doubleMesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }, {\n            color: '#000000',\n            thickness: 3,\n            scaleFactor: 4,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }]\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}