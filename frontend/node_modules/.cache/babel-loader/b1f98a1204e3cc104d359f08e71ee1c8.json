{"ast":null,"code":"import * as mvc from '../mvc/index.mjs';\nimport * as util from '../util/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ToolView } from './ToolView.mjs';\nexport const ToolsView = mvc.View.extend({\n  tagName: 'g',\n  className: 'tools',\n  svgElement: true,\n  tools: null,\n  isRendered: false,\n  options: {\n    tools: null,\n    relatedView: null,\n    name: null,\n    component: false\n  },\n  configure: function (options) {\n    options = util.assign(this.options, options);\n    var tools = options.tools;\n    if (!Array.isArray(tools)) return this;\n    var relatedView = options.relatedView;\n    if (!(relatedView instanceof CellView)) return this;\n    var views = this.tools = [];\n\n    for (var i = 0, n = tools.length; i < n; i++) {\n      var tool = tools[i];\n      if (!(tool instanceof ToolView)) continue;\n      tool.configure(relatedView, this);\n      this.vel.append(tool.el);\n      views.push(tool);\n    }\n\n    this.isRendered = false;\n    relatedView.requestUpdate(relatedView.getFlag('TOOLS'));\n    return this;\n  },\n  getName: function () {\n    return this.options.name;\n  },\n  update: function (opt) {\n    opt || (opt = {});\n    var tools = this.tools;\n    if (!tools) return this;\n    var isRendered = this.isRendered;\n\n    for (var i = 0, n = tools.length; i < n; i++) {\n      var tool = tools[i];\n\n      if (!isRendered) {\n        // First update executes render()\n        tool.render();\n      } else if (opt.tool !== tool.cid && tool.isVisible()) {\n        tool.update();\n      }\n    }\n\n    if (!isRendered) {\n      this.mount(); // Make sure tools are visible (if they were hidden and the tool removed)\n\n      this.blurTool();\n      this.isRendered = true;\n    }\n\n    return this;\n  },\n  focusTool: function (focusedTool) {\n    var tools = this.tools;\n    if (!tools) return this;\n\n    for (var i = 0, n = tools.length; i < n; i++) {\n      var tool = tools[i];\n\n      if (focusedTool === tool) {\n        tool.show();\n      } else {\n        tool.hide();\n      }\n    }\n\n    return this;\n  },\n  blurTool: function (blurredTool) {\n    var tools = this.tools;\n    if (!tools) return this;\n\n    for (var i = 0, n = tools.length; i < n; i++) {\n      var tool = tools[i];\n\n      if (tool !== blurredTool && !tool.isVisible()) {\n        tool.show();\n        tool.update();\n      }\n    }\n\n    return this;\n  },\n  hide: function () {\n    return this.focusTool(null);\n  },\n  show: function () {\n    return this.blurTool(null);\n  },\n  onRemove: function () {\n    var tools = this.tools;\n    if (!tools) return this;\n\n    for (var i = 0, n = tools.length; i < n; i++) {\n      tools[i].remove();\n    }\n\n    this.tools = null;\n  },\n  mount: function () {\n    var options = this.options;\n    var relatedView = options.relatedView;\n\n    if (relatedView) {\n      var container = options.component ? relatedView.el : relatedView.paper.tools;\n      container.appendChild(this.el);\n    }\n\n    return this;\n  }\n});","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/storymapper spreadsheet/my-app/node_modules/jointjs/src/dia/ToolsView.mjs"],"names":["mvc","util","CellView","ToolView","ToolsView","View","extend","tagName","className","svgElement","tools","isRendered","options","relatedView","name","component","configure","assign","Array","isArray","views","i","n","length","tool","vel","append","el","push","requestUpdate","getFlag","getName","update","opt","render","cid","isVisible","mount","blurTool","focusTool","focusedTool","show","hide","blurredTool","onRemove","remove","container","paper","appendChild"],"mappings":"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","sourcesContent":["import * as mvc from '../mvc/index.mjs';\nimport * as util from '../util/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ToolView } from './ToolView.mjs';\n\nexport const ToolsView = mvc.View.extend({\n    tagName: 'g',\n    className: 'tools',\n    svgElement: true,\n    tools: null,\n    isRendered: false,\n    options: {\n        tools: null,\n        relatedView: null,\n        name: null,\n        component: false\n    },\n\n    configure: function(options) {\n        options = util.assign(this.options, options);\n        var tools = options.tools;\n        if (!Array.isArray(tools)) return this;\n        var relatedView = options.relatedView;\n        if (!(relatedView instanceof CellView)) return this;\n        var views = this.tools = [];\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (!(tool instanceof ToolView)) continue;\n            tool.configure(relatedView, this);\n            this.vel.append(tool.el);\n            views.push(tool);\n        }\n        this.isRendered = false;\n        relatedView.requestUpdate(relatedView.getFlag('TOOLS'));\n        return this;\n    },\n\n    getName: function() {\n        return this.options.name;\n    },\n\n    update: function(opt) {\n\n        opt || (opt = {});\n        var tools = this.tools;\n        if (!tools) return this;\n        var isRendered = this.isRendered;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (!isRendered) {\n                // First update executes render()\n                tool.render();\n            } else if (opt.tool !== tool.cid && tool.isVisible()) {\n                tool.update();\n            }\n        }\n        if (!isRendered) {\n            this.mount();\n            // Make sure tools are visible (if they were hidden and the tool removed)\n            this.blurTool();\n            this.isRendered = true;\n        }\n        return this;\n    },\n\n    focusTool: function(focusedTool) {\n\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (focusedTool === tool) {\n                tool.show();\n            } else {\n                tool.hide();\n            }\n        }\n        return this;\n    },\n\n    blurTool: function(blurredTool) {\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (tool !== blurredTool && !tool.isVisible()) {\n                tool.show();\n                tool.update();\n            }\n        }\n        return this;\n    },\n\n    hide: function() {\n        return this.focusTool(null);\n    },\n\n    show: function() {\n        return this.blurTool(null);\n    },\n\n    onRemove: function() {\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            tools[i].remove();\n        }\n        this.tools = null;\n    },\n\n    mount: function() {\n        var options = this.options;\n        var relatedView = options.relatedView;\n        if (relatedView) {\n            var container = (options.component) ? relatedView.el : relatedView.paper.tools;\n            container.appendChild(this.el);\n        }\n        return this;\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}