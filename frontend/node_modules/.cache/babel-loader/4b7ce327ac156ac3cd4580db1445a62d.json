{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martn\\\\Documents\\\\New Documents 2019\\\\Technigo codin\\\\storymapper spreadsheet\\\\my-app\\\\src\\\\components\\\\CustomAccordion.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomAccordion = ({\n  type\n}) => {\n  var _s = $RefreshSig$();\n\n  // if (type === 'character') {\n  //   //only change styling - character data is handled by the Character comp., \n  //   //which in turn mounts this component.\n  //   return (\n  //     //presentation component with props set so that it .maps for every Bond\n  //     <>\n  //     </>\n  //   )\n  // }\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  }));\n\n  function ControlledAccordions() {\n    _s();\n\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this),\n        \"aria-label\": \"Expand\",\n        \"aria-controls\": \"additional-actions1-content\",\n        id: \"additional-actions1-header\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.heading,\n          children: \"General settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.secondaryHeading,\n          children: \"I am an accordion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: \"Test details text!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(ControlledAccordions, \"h4ZSQ0ae6nPGs2BiQgjY3xQWnvE=\", false, function () {\n    return [useStyles];\n  });\n};\n\n_c = CustomAccordion;\nexport default CustomAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomAccordion\");","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/storymapper spreadsheet/my-app/src/components/CustomAccordion.js"],"names":["React","ReactDOM","makeStyles","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","CustomAccordion","type","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","ControlledAccordions","classes","expanded","setExpanded","useState","handleChange","panel","event","isExpanded"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAEpC;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;AAIvCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,MAAAA,SAAS,EAAE,QAFJ;AAGPC,MAAAA,UAAU,EAAE;AAHL,KAJ8B;AASvCC,IAAAA,gBAAgB,EAAE;AAChBL,MAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADM;AAEhBI,MAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAFV;AATqB,GAAZ,CAAD,CAA5B;;AAeA,WAASC,oBAAT,GAAgC;AAAA;;AAC9B,UAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,UAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0B5B,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAAhC;;AAEA,UAAMC,YAAY,GAAIC,KAAD,IAAW,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACrDL,MAAAA,WAAW,CAACK,UAAU,GAAGF,KAAH,GAAW,KAAtB,CAAX;AACD,KAFD;;AAIA,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADd;AAEE,sBAAW,QAFb;AAGE,yBAAc,6BAHhB;AAIE,QAAA,EAAE,EAAC,4BAJL;AAAA,gCAME,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEL,OAAO,CAACZ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEY,OAAO,CAACN,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAzDmC,KA6B3BK,oBA7B2B;AAAA,YA8BlBf,SA9BkB;AAAA;AA0DrC,CA1DD;;KAAMF,e;AA4DN,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CustomAccordion = ({ type }) => {\r\n  \r\n  // if (type === 'character') {\r\n    \r\n  //   //only change styling - character data is handled by the Character comp., \r\n  //   //which in turn mounts this component.\r\n    \r\n  //   return (\r\n  //     //presentation component with props set so that it .maps for every Bond\r\n  //     <>\r\n  //     </>\r\n  //   )\r\n  // }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n  function ControlledAccordions() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    }\r\n\r\n    return (\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-label=\"Expand\"\r\n          aria-controls=\"additional-actions1-content\"\r\n          id=\"additional-actions1-header\"\r\n        >\r\n          <Typography className={classes.heading}>General settings</Typography>\r\n          <Typography className={classes.secondaryHeading}>I am an accordion</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          Test details text!!!\r\n          {/* <Typography color=\"textSecondary\">\r\n            The click event of the nested action will propagate up and expand the accordion unless\r\n            you explicitly stop it.\r\n          </Typography> */}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomAccordion"]},"metadata":{},"sourceType":"module"}