{"ast":null,"code":"import { Cell } from '../dia/Cell.mjs';\nimport { isFunction, isString, toArray } from './util.mjs';\nexport const wrapWith = function (object, methods, wrapper) {\n  if (isString(wrapper)) {\n    if (!wrappers[wrapper]) {\n      throw new Error('Unknown wrapper: \"' + wrapper + '\"');\n    }\n\n    wrapper = wrappers[wrapper];\n  }\n\n  if (!isFunction(wrapper)) {\n    throw new Error('Wrapper must be a function.');\n  }\n\n  toArray(methods).forEach(function (method) {\n    object[method] = wrapper(object[method]);\n  });\n};\nexport const wrappers = {\n  cells: function (fn) {\n    return function () {\n      var args = Array.from(arguments);\n      var n = args.length;\n      var cells = n > 0 && args[0] || [];\n      var opt = n > 1 && args[n - 1] || {};\n\n      if (!Array.isArray(cells)) {\n        if (opt instanceof Cell) {\n          cells = args;\n        } else if (cells instanceof Cell) {\n          if (args.length > 1) {\n            args.pop();\n          }\n\n          cells = args;\n        }\n      }\n\n      if (opt instanceof Cell) {\n        opt = {};\n      }\n\n      return fn.call(this, cells, opt);\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/r-mapper v.2/r-mapper/node_modules/jointjs/src/util/wrappers.mjs"],"names":["Cell","isFunction","isString","toArray","wrapWith","object","methods","wrapper","wrappers","Error","forEach","method","cells","fn","args","Array","from","arguments","n","length","opt","isArray","pop","call"],"mappings":"AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,OAA/B,QAA8C,YAA9C;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AAEvD,MAAIL,QAAQ,CAACK,OAAD,CAAZ,EAAuB;AAEnB,QAAI,CAACC,QAAQ,CAACD,OAAD,CAAb,EAAwB;AACpB,YAAM,IAAIE,KAAJ,CAAU,uBAAuBF,OAAvB,GAAiC,GAA3C,CAAN;AACH;;AAEDA,IAAAA,OAAO,GAAGC,QAAQ,CAACD,OAAD,CAAlB;AACH;;AAED,MAAI,CAACN,UAAU,CAACM,OAAD,CAAf,EAA0B;AACtB,UAAM,IAAIE,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAEDN,EAAAA,OAAO,CAACG,OAAD,CAAP,CAAiBI,OAAjB,CAAyB,UAASC,MAAT,EAAiB;AACtCN,IAAAA,MAAM,CAACM,MAAD,CAAN,GAAiBJ,OAAO,CAACF,MAAM,CAACM,MAAD,CAAP,CAAxB;AACH,GAFD;AAGH,CAlBM;AAoBP,OAAO,MAAMH,QAAQ,GAAG;AAEpBI,EAAAA,KAAK,EAAE,UAASC,EAAT,EAAa;AAEhB,WAAO,YAAW;AAEd,UAAIC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAX;AACA,UAAIC,CAAC,GAAGJ,IAAI,CAACK,MAAb;AACA,UAAIP,KAAK,GAAGM,CAAC,GAAG,CAAJ,IAASJ,IAAI,CAAC,CAAD,CAAb,IAAoB,EAAhC;AACA,UAAIM,GAAG,GAAGF,CAAC,GAAG,CAAJ,IAASJ,IAAI,CAACI,CAAC,GAAG,CAAL,CAAb,IAAwB,EAAlC;;AAEA,UAAI,CAACH,KAAK,CAACM,OAAN,CAAcT,KAAd,CAAL,EAA2B;AAEvB,YAAIQ,GAAG,YAAYpB,IAAnB,EAAyB;AACrBY,UAAAA,KAAK,GAAGE,IAAR;AACH,SAFD,MAEO,IAAIF,KAAK,YAAYZ,IAArB,EAA2B;AAC9B,cAAIc,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACjBL,YAAAA,IAAI,CAACQ,GAAL;AACH;;AACDV,UAAAA,KAAK,GAAGE,IAAR;AACH;AACJ;;AAED,UAAIM,GAAG,YAAYpB,IAAnB,EAAyB;AACrBoB,QAAAA,GAAG,GAAG,EAAN;AACH;;AAED,aAAOP,EAAE,CAACU,IAAH,CAAQ,IAAR,EAAcX,KAAd,EAAqBQ,GAArB,CAAP;AACH,KAxBD;AAyBH;AA7BmB,CAAjB","sourcesContent":["import { Cell } from '../dia/Cell.mjs';\nimport { isFunction, isString, toArray } from './util.mjs';\n\nexport const wrapWith = function(object, methods, wrapper) {\n\n    if (isString(wrapper)) {\n\n        if (!wrappers[wrapper]) {\n            throw new Error('Unknown wrapper: \"' + wrapper + '\"');\n        }\n\n        wrapper = wrappers[wrapper];\n    }\n\n    if (!isFunction(wrapper)) {\n        throw new Error('Wrapper must be a function.');\n    }\n\n    toArray(methods).forEach(function(method) {\n        object[method] = wrapper(object[method]);\n    });\n};\n\nexport const wrappers = {\n\n    cells: function(fn) {\n\n        return function() {\n\n            var args = Array.from(arguments);\n            var n = args.length;\n            var cells = n > 0 && args[0] || [];\n            var opt = n > 1 && args[n - 1] || {};\n\n            if (!Array.isArray(cells)) {\n\n                if (opt instanceof Cell) {\n                    cells = args;\n                } else if (cells instanceof Cell) {\n                    if (args.length > 1) {\n                        args.pop();\n                    }\n                    cells = args;\n                }\n            }\n\n            if (opt instanceof Cell) {\n                opt = {};\n            }\n\n            return fn.call(this, cells, opt);\n        };\n    }\n\n};\n\n"]},"metadata":{},"sourceType":"module"}