{"ast":null,"code":"import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs'; // Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n  // The default markup for links.\n  markup: ['<path class=\"connection\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"marker-source\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"marker-target\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>', '<path class=\"connection-wrap\" d=\"M 0 0 0 0\"/>', '<g class=\"labels\"/>', '<g class=\"marker-vertices\"/>', '<g class=\"marker-arrowheads\"/>', '<g class=\"link-tools\"/>'].join(''),\n  toolMarkup: ['<g class=\"link-tool\">', '<g class=\"tool-remove\" event=\"remove\">', '<circle r=\"11\" />', '<path transform=\"scale(.8) translate(-16, -16)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\" />', '<title>Remove link.</title>', '</g>', '<g class=\"tool-options\" event=\"link:options\">', '<circle r=\"11\" transform=\"translate(25)\"/>', '<path fill=\"white\" transform=\"scale(.55) translate(29, -16)\" d=\"M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z\"/>', '<title>Link options.</title>', '</g>', '</g>'].join(''),\n  doubleToolMarkup: undefined,\n  // The default markup for showing/removing vertices. These elements are the children of the .marker-vertices element (see `this.markup`).\n  // Only .marker-vertex and .marker-vertex-remove element have special meaning. The former is used for\n  // dragging vertices (changing their position). The latter is used for removing vertices.\n  vertexMarkup: ['<g class=\"marker-vertex-group\" transform=\"translate(<%= x %>, <%= y %>)\">', '<circle class=\"marker-vertex\" idx=\"<%= idx %>\" r=\"10\" />', '<path class=\"marker-vertex-remove-area\" idx=\"<%= idx %>\" d=\"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\" transform=\"translate(5, -33)\"/>', '<path class=\"marker-vertex-remove\" idx=\"<%= idx %>\" transform=\"scale(.8) translate(9.5, -37)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\">', '<title>Remove vertex.</title>', '</path>', '</g>'].join(''),\n  arrowheadMarkup: ['<g class=\"marker-arrowhead-group marker-arrowhead-group-<%= end %>\">', '<path class=\"marker-arrowhead\" end=\"<%= end %>\" d=\"M 26 0 L 0 13 L 26 26 z\" />', '</g>'].join(''),\n  // may be overwritten by user to change default label (its markup, attrs, position)\n  defaultLabel: undefined,\n  // deprecated\n  // may be overwritten by user to change default label markup\n  // lower priority than defaultLabel.markup\n  labelMarkup: undefined,\n  // private\n  _builtins: {\n    defaultLabel: {\n      // builtin default markup:\n      // used if neither defaultLabel.markup\n      // nor label.markup is set\n      markup: [{\n        tagName: 'rect',\n        selector: 'rect' // faster than tagName CSS selector\n\n      }, {\n        tagName: 'text',\n        selector: 'text' // faster than tagName CSS selector\n\n      }],\n      // builtin default attributes:\n      // applied only if builtin default markup is used\n      attrs: {\n        text: {\n          fill: '#000000',\n          fontSize: 14,\n          textAnchor: 'middle',\n          yAlignment: 'middle',\n          pointerEvents: 'none'\n        },\n        rect: {\n          ref: 'text',\n          fill: '#ffffff',\n          rx: 3,\n          ry: 3,\n          refWidth: 1,\n          refHeight: 1,\n          refX: 0,\n          refY: 0\n        }\n      },\n      // builtin default position:\n      // used if neither defaultLabel.position\n      // nor label.position is set\n      position: {\n        distance: 0.5\n      }\n    }\n  },\n  defaults: {\n    type: 'link',\n    source: {},\n    target: {}\n  },\n  isLink: function () {\n    return true;\n  },\n  disconnect: function (opt) {\n    return this.set({\n      source: {\n        x: 0,\n        y: 0\n      },\n      target: {\n        x: 0,\n        y: 0\n      }\n    }, opt);\n  },\n  source: function (source, args, opt) {\n    // getter\n    if (source === undefined) {\n      return clone(this.get('source'));\n    } // setter\n\n\n    var setSource;\n    var setOpt; // `source` is a cell\n    // take only its `id` and combine with `args`\n\n    var isCellProvided = source instanceof Cell;\n\n    if (isCellProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.id = source.id;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    } // `source` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n\n\n    var isPointProvided = !isPlainObject(source);\n\n    if (isPointProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.x = source.x;\n      setSource.y = source.y;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    } // `source` is an object\n    // no checking\n    // two arguments\n\n\n    setSource = source;\n    setOpt = args;\n    return this.set('source', setSource, setOpt);\n  },\n  target: function (target, args, opt) {\n    // getter\n    if (target === undefined) {\n      return clone(this.get('target'));\n    } // setter\n\n\n    var setTarget;\n    var setOpt; // `target` is a cell\n    // take only its `id` argument and combine with `args`\n\n    var isCellProvided = target instanceof Cell;\n\n    if (isCellProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.id = target.id;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    } // `target` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n\n\n    var isPointProvided = !isPlainObject(target);\n\n    if (isPointProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.x = target.x;\n      setTarget.y = target.y;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    } // `target` is an object\n    // no checking\n    // two arguments\n\n\n    setTarget = target;\n    setOpt = args;\n    return this.set('target', setTarget, setOpt);\n  },\n  router: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var router = this.get('router');\n\n      if (!router) {\n        if (this.get('manhattan')) return {\n          name: 'orthogonal'\n        }; // backwards compatibility\n\n        return null;\n      }\n\n      if (typeof router === 'object') return clone(router);\n      return router; // e.g. a function\n    } // setter\n\n\n    var isRouterProvided = typeof name === 'object' || typeof name === 'function';\n    var localRouter = isRouterProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isRouterProvided ? args : opt;\n    return this.set('router', localRouter, localOpt);\n  },\n  connector: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var connector = this.get('connector');\n\n      if (!connector) {\n        if (this.get('smooth')) return {\n          name: 'smooth'\n        }; // backwards compatibility\n\n        return null;\n      }\n\n      if (typeof connector === 'object') return clone(connector);\n      return connector; // e.g. a function\n    } // setter\n\n\n    var isConnectorProvided = typeof name === 'object' || typeof name === 'function';\n    var localConnector = isConnectorProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isConnectorProvided ? args : opt;\n    return this.set('connector', localConnector, localOpt);\n  },\n  // Labels API\n  // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n  label: function (idx, label, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = labels.length + idx; // getter\n\n    if (arguments.length <= 1) return this.prop(['labels', idx]); // setter\n\n    return this.prop(['labels', idx], label, opt);\n  },\n  labels: function (labels, opt) {\n    // getter\n    if (arguments.length === 0) {\n      labels = this.get('labels');\n      if (!Array.isArray(labels)) return [];\n      return labels.slice();\n    } // setter\n\n\n    if (!Array.isArray(labels)) labels = [];\n    return this.set('labels', labels, opt);\n  },\n  insertLabel: function (idx, label, opt) {\n    if (!label) throw new Error('dia.Link: no label provided');\n    var labels = this.labels();\n    var n = labels.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n    labels.splice(idx, 0, label);\n    return this.labels(labels, opt);\n  },\n  // convenience function\n  // add label to end of labels array\n  appendLabel: function (label, opt) {\n    return this.insertLabel(-1, label, opt);\n  },\n  removeLabel: function (idx, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    labels.splice(idx, 1);\n    return this.labels(labels, opt);\n  },\n  // Vertices API\n  vertex: function (idx, vertex, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = vertices.length + idx; // getter\n\n    if (arguments.length <= 1) return this.prop(['vertices', idx]); // setter\n\n    var setVertex = this._normalizeVertex(vertex);\n\n    return this.prop(['vertices', idx], setVertex, opt);\n  },\n  vertices: function (vertices, opt) {\n    // getter\n    if (arguments.length === 0) {\n      vertices = this.get('vertices');\n      if (!Array.isArray(vertices)) return [];\n      return vertices.slice();\n    } // setter\n\n\n    if (!Array.isArray(vertices)) vertices = [];\n    var setVertices = [];\n\n    for (var i = 0; i < vertices.length; i++) {\n      var vertex = vertices[i];\n\n      var setVertex = this._normalizeVertex(vertex);\n\n      setVertices.push(setVertex);\n    }\n\n    return this.set('vertices', setVertices, opt);\n  },\n  insertVertex: function (idx, vertex, opt) {\n    if (!vertex) throw new Error('dia.Link: no vertex provided');\n    var vertices = this.vertices();\n    var n = vertices.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n\n    var setVertex = this._normalizeVertex(vertex);\n\n    vertices.splice(idx, 0, setVertex);\n    return this.vertices(vertices, opt);\n  },\n  removeVertex: function (idx, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    vertices.splice(idx, 1);\n    return this.vertices(vertices, opt);\n  },\n  _normalizeVertex: function (vertex) {\n    // is vertex a point-like object?\n    // for example, a g.Point\n    var isPointProvided = !isPlainObject(vertex);\n    if (isPointProvided) return {\n      x: vertex.x,\n      y: vertex.y\n    }; // else: return vertex unchanged\n\n    return vertex;\n  },\n  // Transformations\n  translate: function (tx, ty, opt) {\n    // enrich the option object\n    opt = opt || {};\n    opt.translateBy = opt.translateBy || this.id;\n    opt.tx = tx;\n    opt.ty = ty;\n    return this.applyToPoints(function (p) {\n      return {\n        x: (p.x || 0) + tx,\n        y: (p.y || 0) + ty\n      };\n    }, opt);\n  },\n  scale: function (sx, sy, origin, opt) {\n    return this.applyToPoints(function (p) {\n      return Point(p).scale(sx, sy, origin).toJSON();\n    }, opt);\n  },\n  applyToPoints: function (fn, opt) {\n    if (!isFunction(fn)) {\n      throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n    }\n\n    var attrs = {};\n    var {\n      source,\n      target\n    } = this.attributes;\n\n    if (!source.id) {\n      attrs.source = fn(source);\n    }\n\n    if (!target.id) {\n      attrs.target = fn(target);\n    }\n\n    var vertices = this.vertices();\n\n    if (vertices.length > 0) {\n      attrs.vertices = vertices.map(fn);\n    }\n\n    return this.set(attrs, opt);\n  },\n  getSourcePoint: function () {\n    var sourceCell = this.getSourceCell();\n    if (!sourceCell) return new Point(this.source());\n    return sourceCell.getPointFromConnectedLink(this, 'source');\n  },\n  getTargetPoint: function () {\n    var targetCell = this.getTargetCell();\n    if (!targetCell) return new Point(this.target());\n    return targetCell.getPointFromConnectedLink(this, 'target');\n  },\n  getPointFromConnectedLink: function ()\n  /* link, endType */\n  {\n    return this.getPolyline().pointAt(0.5);\n  },\n  getPolyline: function () {\n    const points = [this.getSourcePoint(), ...this.vertices().map(Point), this.getTargetPoint()];\n    return new Polyline(points);\n  },\n  getBBox: function () {\n    return this.getPolyline().bbox();\n  },\n  reparent: function (opt) {\n    var newParent;\n\n    if (this.graph) {\n      var source = this.getSourceElement();\n      var target = this.getTargetElement();\n      var prevParent = this.getParentCell();\n\n      if (source && target) {\n        if (source === target || source.isEmbeddedIn(target)) {\n          newParent = target;\n        } else if (target.isEmbeddedIn(source)) {\n          newParent = source;\n        } else {\n          newParent = this.graph.getCommonAncestor(source, target);\n        }\n      }\n\n      if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n        // Unembed the link if source and target has no common ancestor\n        // or common ancestor changed\n        prevParent.unembed(this, opt);\n      }\n\n      if (newParent) {\n        newParent.embed(this, opt);\n      }\n    }\n\n    return newParent;\n  },\n  hasLoop: function (opt) {\n    opt = opt || {};\n    var {\n      source,\n      target\n    } = this.attributes;\n    var sourceId = source.id;\n    var targetId = target.id;\n\n    if (!sourceId || !targetId) {\n      // Link \"pinned\" to the paper does not have a loop.\n      return false;\n    }\n\n    var loop = sourceId === targetId; // Note that there in the deep mode a link can have a loop,\n    // even if it connects only a parent and its embed.\n    // A loop \"target equals source\" is valid in both shallow and deep mode.\n\n    if (!loop && opt.deep && this.graph) {\n      var sourceElement = this.getSourceCell();\n      var targetElement = this.getTargetCell();\n      loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n    }\n\n    return loop;\n  },\n  // unlike source(), this method returns null if source is a point\n  getSourceCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var source = attributes.source;\n    return source && source.id && graph && graph.getCell(source.id) || null;\n  },\n  getSourceElement: function () {\n    var cell = this;\n    var visited = {};\n\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getSourceCell();\n    } while (cell && cell.isLink());\n\n    return cell;\n  },\n  // unlike target(), this method returns null if target is a point\n  getTargetCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var target = attributes.target;\n    return target && target.id && graph && graph.getCell(target.id) || null;\n  },\n  getTargetElement: function () {\n    var cell = this;\n    var visited = {};\n\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getTargetCell();\n    } while (cell && cell.isLink());\n\n    return cell;\n  },\n  // Returns the common ancestor for the source element,\n  // target element and the link itself.\n  getRelationshipAncestor: function () {\n    var connectionAncestor;\n\n    if (this.graph) {\n      var cells = [this, this.getSourceElement(), // null if source is a point\n      this.getTargetElement() // null if target is a point\n      ].filter(function (item) {\n        return !!item;\n      });\n      connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n    }\n\n    return connectionAncestor || null;\n  },\n  // Is source, target and the link itself embedded in a given cell?\n  isRelationshipEmbeddedIn: function (cell) {\n    var cellId = isString(cell) || isNumber(cell) ? cell : cell.id;\n    var ancestor = this.getRelationshipAncestor();\n    return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n  },\n  // Get resolved default label.\n  _getDefaultLabel: function () {\n    var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n    var label = {};\n    label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n    label.position = defaultLabel.position;\n    label.attrs = defaultLabel.attrs;\n    label.size = defaultLabel.size;\n    return label;\n  }\n}, {\n  endsEqual: function (a, b) {\n    var portsEqual = a.port === b.port || !a.port && !b.port;\n    return a.id === b.id && portsEqual;\n  }\n});","map":{"version":3,"sources":["C:/Users/martn/Documents/New Documents 2019/Technigo codin/r-mapper v.2/r-mapper/node_modules/jointjs/src/dia/Link.mjs"],"names":["Cell","clone","isPlainObject","isFunction","isString","isNumber","Point","Polyline","Link","extend","markup","join","toolMarkup","doubleToolMarkup","undefined","vertexMarkup","arrowheadMarkup","defaultLabel","labelMarkup","_builtins","tagName","selector","attrs","text","fill","fontSize","textAnchor","yAlignment","pointerEvents","rect","ref","rx","ry","refWidth","refHeight","refX","refY","position","distance","defaults","type","source","target","isLink","disconnect","opt","set","x","y","args","get","setSource","setOpt","isCellProvided","id","isPointProvided","setTarget","router","name","isRouterProvided","localRouter","localOpt","connector","isConnectorProvided","localConnector","label","idx","labels","isFinite","length","arguments","prop","Array","isArray","slice","insertLabel","Error","n","splice","appendLabel","removeLabel","vertex","vertices","setVertex","_normalizeVertex","setVertices","i","push","insertVertex","removeVertex","translate","tx","ty","translateBy","applyToPoints","p","scale","sx","sy","origin","toJSON","fn","TypeError","attributes","map","getSourcePoint","sourceCell","getSourceCell","getPointFromConnectedLink","getTargetPoint","targetCell","getTargetCell","getPolyline","pointAt","points","getBBox","bbox","reparent","newParent","graph","getSourceElement","getTargetElement","prevParent","getParentCell","isEmbeddedIn","getCommonAncestor","unembed","embed","hasLoop","sourceId","targetId","loop","deep","sourceElement","targetElement","getCell","cell","visited","getRelationshipAncestor","connectionAncestor","cells","filter","item","apply","isRelationshipEmbeddedIn","cellId","ancestor","_getDefaultLabel","size","endsEqual","a","b","portsEqual","port"],"mappings":"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","sourcesContent":["import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n\n    // The default markup for links.\n    markup: [\n        '<path class=\"connection\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"marker-source\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"marker-target\" fill=\"black\" stroke=\"black\" d=\"M 0 0 0 0\"/>',\n        '<path class=\"connection-wrap\" d=\"M 0 0 0 0\"/>',\n        '<g class=\"labels\"/>',\n        '<g class=\"marker-vertices\"/>',\n        '<g class=\"marker-arrowheads\"/>',\n        '<g class=\"link-tools\"/>'\n    ].join(''),\n\n    toolMarkup: [\n        '<g class=\"link-tool\">',\n        '<g class=\"tool-remove\" event=\"remove\">',\n        '<circle r=\"11\" />',\n        '<path transform=\"scale(.8) translate(-16, -16)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\" />',\n        '<title>Remove link.</title>',\n        '</g>',\n        '<g class=\"tool-options\" event=\"link:options\">',\n        '<circle r=\"11\" transform=\"translate(25)\"/>',\n        '<path fill=\"white\" transform=\"scale(.55) translate(29, -16)\" d=\"M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z\"/>',\n        '<title>Link options.</title>',\n        '</g>',\n        '</g>'\n    ].join(''),\n\n    doubleToolMarkup: undefined,\n\n    // The default markup for showing/removing vertices. These elements are the children of the .marker-vertices element (see `this.markup`).\n    // Only .marker-vertex and .marker-vertex-remove element have special meaning. The former is used for\n    // dragging vertices (changing their position). The latter is used for removing vertices.\n    vertexMarkup: [\n        '<g class=\"marker-vertex-group\" transform=\"translate(<%= x %>, <%= y %>)\">',\n        '<circle class=\"marker-vertex\" idx=\"<%= idx %>\" r=\"10\" />',\n        '<path class=\"marker-vertex-remove-area\" idx=\"<%= idx %>\" d=\"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\" transform=\"translate(5, -33)\"/>',\n        '<path class=\"marker-vertex-remove\" idx=\"<%= idx %>\" transform=\"scale(.8) translate(9.5, -37)\" d=\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\">',\n        '<title>Remove vertex.</title>',\n        '</path>',\n        '</g>'\n    ].join(''),\n\n    arrowheadMarkup: [\n        '<g class=\"marker-arrowhead-group marker-arrowhead-group-<%= end %>\">',\n        '<path class=\"marker-arrowhead\" end=\"<%= end %>\" d=\"M 26 0 L 0 13 L 26 26 z\" />',\n        '</g>'\n    ].join(''),\n\n    // may be overwritten by user to change default label (its markup, attrs, position)\n    defaultLabel: undefined,\n\n    // deprecated\n    // may be overwritten by user to change default label markup\n    // lower priority than defaultLabel.markup\n    labelMarkup: undefined,\n\n    // private\n    _builtins: {\n        defaultLabel: {\n            // builtin default markup:\n            // used if neither defaultLabel.markup\n            // nor label.markup is set\n            markup: [\n                {\n                    tagName: 'rect',\n                    selector: 'rect' // faster than tagName CSS selector\n                }, {\n                    tagName: 'text',\n                    selector: 'text' // faster than tagName CSS selector\n                }\n            ],\n            // builtin default attributes:\n            // applied only if builtin default markup is used\n            attrs: {\n                text: {\n                    fill: '#000000',\n                    fontSize: 14,\n                    textAnchor: 'middle',\n                    yAlignment: 'middle',\n                    pointerEvents: 'none'\n                },\n                rect: {\n                    ref: 'text',\n                    fill: '#ffffff',\n                    rx: 3,\n                    ry: 3,\n                    refWidth: 1,\n                    refHeight: 1,\n                    refX: 0,\n                    refY: 0\n                }\n            },\n            // builtin default position:\n            // used if neither defaultLabel.position\n            // nor label.position is set\n            position: {\n                distance: 0.5\n            }\n        }\n    },\n\n    defaults: {\n        type: 'link',\n        source: {},\n        target: {}\n    },\n\n    isLink: function() {\n\n        return true;\n    },\n\n    disconnect: function(opt) {\n\n        return this.set({\n            source: { x: 0, y: 0 },\n            target: { x: 0, y: 0 }\n        }, opt);\n    },\n\n    source: function(source, args, opt) {\n\n        // getter\n        if (source === undefined) {\n            return clone(this.get('source'));\n        }\n\n        // setter\n        var setSource;\n        var setOpt;\n\n        // `source` is a cell\n        // take only its `id` and combine with `args`\n        var isCellProvided = source instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.id = source.id;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(source);\n        if (isPointProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.x = source.x;\n            setSource.y = source.y;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is an object\n        // no checking\n        // two arguments\n        setSource = source;\n        setOpt = args;\n        return this.set('source', setSource, setOpt);\n    },\n\n    target: function(target, args, opt) {\n\n        // getter\n        if (target === undefined) {\n            return clone(this.get('target'));\n        }\n\n        // setter\n        var setTarget;\n        var setOpt;\n\n        // `target` is a cell\n        // take only its `id` argument and combine with `args`\n        var isCellProvided = target instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.id = target.id;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(target);\n        if (isPointProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.x = target.x;\n            setTarget.y = target.y;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is an object\n        // no checking\n        // two arguments\n        setTarget = target;\n        setOpt = args;\n        return this.set('target', setTarget, setOpt);\n    },\n\n    router: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var router = this.get('router');\n            if (!router) {\n                if (this.get('manhattan')) return { name: 'orthogonal' }; // backwards compatibility\n                return null;\n            }\n            if (typeof router === 'object') return clone(router);\n            return router; // e.g. a function\n        }\n\n        // setter\n        var isRouterProvided = ((typeof name === 'object') || (typeof name === 'function'));\n        var localRouter = isRouterProvided ? name : { name: name, args: args };\n        var localOpt = isRouterProvided ? args : opt;\n\n        return this.set('router', localRouter, localOpt);\n    },\n\n    connector: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var connector = this.get('connector');\n            if (!connector) {\n                if (this.get('smooth')) return { name: 'smooth' }; // backwards compatibility\n                return null;\n            }\n            if (typeof connector === 'object') return clone(connector);\n            return connector; // e.g. a function\n        }\n\n        // setter\n        var isConnectorProvided = ((typeof name === 'object' || typeof name === 'function'));\n        var localConnector = isConnectorProvided ? name : { name: name, args: args };\n        var localOpt = isConnectorProvided ? args : opt;\n\n        return this.set('connector', localConnector, localOpt);\n    },\n\n    // Labels API\n\n    // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n    label: function(idx, label, opt) {\n\n        var labels = this.labels();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = labels.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['labels', idx]);\n        // setter\n        return this.prop(['labels', idx], label, opt);\n    },\n\n    labels: function(labels, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            labels = this.get('labels');\n            if (!Array.isArray(labels)) return [];\n            return labels.slice();\n        }\n        // setter\n        if (!Array.isArray(labels)) labels = [];\n        return this.set('labels', labels, opt);\n    },\n\n    insertLabel: function(idx, label, opt) {\n\n        if (!label) throw new Error('dia.Link: no label provided');\n\n        var labels = this.labels();\n        var n = labels.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        labels.splice(idx, 0, label);\n        return this.labels(labels, opt);\n    },\n\n    // convenience function\n    // add label to end of labels array\n    appendLabel: function(label, opt) {\n\n        return this.insertLabel(-1, label, opt);\n    },\n\n    removeLabel: function(idx, opt) {\n\n        var labels = this.labels();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        labels.splice(idx, 1);\n        return this.labels(labels, opt);\n    },\n\n    // Vertices API\n\n    vertex: function(idx, vertex, opt) {\n\n        var vertices = this.vertices();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = vertices.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n        // setter\n        var setVertex = this._normalizeVertex(vertex);\n        return this.prop(['vertices', idx], setVertex, opt);\n    },\n\n    vertices: function(vertices, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            vertices = this.get('vertices');\n            if (!Array.isArray(vertices)) return [];\n            return vertices.slice();\n        }\n\n        // setter\n        if (!Array.isArray(vertices)) vertices = [];\n        var setVertices = [];\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            var setVertex = this._normalizeVertex(vertex);\n            setVertices.push(setVertex);\n        }\n        return this.set('vertices', setVertices, opt);\n    },\n\n    insertVertex: function(idx, vertex, opt) {\n\n        if (!vertex) throw new Error('dia.Link: no vertex provided');\n\n        var vertices = this.vertices();\n        var n = vertices.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        var setVertex = this._normalizeVertex(vertex);\n        vertices.splice(idx, 0, setVertex);\n        return this.vertices(vertices, opt);\n    },\n\n    removeVertex: function(idx, opt) {\n\n        var vertices = this.vertices();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        vertices.splice(idx, 1);\n        return this.vertices(vertices, opt);\n    },\n\n    _normalizeVertex: function(vertex) {\n\n        // is vertex a point-like object?\n        // for example, a g.Point\n        var isPointProvided = !isPlainObject(vertex);\n        if (isPointProvided) return { x: vertex.x, y: vertex.y };\n\n        // else: return vertex unchanged\n        return vertex;\n    },\n\n    // Transformations\n\n    translate: function(tx, ty, opt) {\n\n        // enrich the option object\n        opt = opt || {};\n        opt.translateBy = opt.translateBy || this.id;\n        opt.tx = tx;\n        opt.ty = ty;\n\n        return this.applyToPoints(function(p) {\n            return { x: (p.x || 0) + tx, y: (p.y || 0) + ty };\n        }, opt);\n    },\n\n    scale: function(sx, sy, origin, opt) {\n\n        return this.applyToPoints(function(p) {\n            return Point(p).scale(sx, sy, origin).toJSON();\n        }, opt);\n    },\n\n    applyToPoints: function(fn, opt) {\n\n        if (!isFunction(fn)) {\n            throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n        }\n\n        var attrs = {};\n\n        var { source, target } = this.attributes;\n        if (!source.id) {\n            attrs.source = fn(source);\n        }\n        if (!target.id) {\n            attrs.target = fn(target);\n        }\n\n        var vertices = this.vertices();\n        if (vertices.length > 0) {\n            attrs.vertices = vertices.map(fn);\n        }\n\n        return this.set(attrs, opt);\n    },\n\n    getSourcePoint: function() {\n        var sourceCell = this.getSourceCell();\n        if (!sourceCell) return new Point(this.source());\n        return sourceCell.getPointFromConnectedLink(this, 'source');\n    },\n\n    getTargetPoint: function() {\n        var targetCell = this.getTargetCell();\n        if (!targetCell) return new Point(this.target());\n        return targetCell.getPointFromConnectedLink(this, 'target');\n    },\n\n    getPointFromConnectedLink: function(/* link, endType */) {\n        return this.getPolyline().pointAt(0.5);\n    },\n\n    getPolyline: function() {\n        const points = [\n            this.getSourcePoint(),\n            ...this.vertices().map(Point),\n            this.getTargetPoint()\n        ];\n        return new Polyline(points);\n    },\n\n    getBBox: function() {\n        return this.getPolyline().bbox();\n    },\n\n    reparent: function(opt) {\n\n        var newParent;\n\n        if (this.graph) {\n\n            var source = this.getSourceElement();\n            var target = this.getTargetElement();\n            var prevParent = this.getParentCell();\n\n            if (source && target) {\n                if (source === target || source.isEmbeddedIn(target)) {\n                    newParent = target;\n                } else if (target.isEmbeddedIn(source)) {\n                    newParent = source;\n                } else {\n                    newParent = this.graph.getCommonAncestor(source, target);\n                }\n            }\n\n            if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n                // Unembed the link if source and target has no common ancestor\n                // or common ancestor changed\n                prevParent.unembed(this, opt);\n            }\n\n            if (newParent) {\n                newParent.embed(this, opt);\n            }\n        }\n\n        return newParent;\n    },\n\n    hasLoop: function(opt) {\n\n        opt = opt || {};\n\n        var { source, target } = this.attributes;\n        var sourceId = source.id;\n        var targetId = target.id;\n\n        if (!sourceId || !targetId) {\n            // Link \"pinned\" to the paper does not have a loop.\n            return false;\n        }\n\n        var loop = sourceId === targetId;\n\n        // Note that there in the deep mode a link can have a loop,\n        // even if it connects only a parent and its embed.\n        // A loop \"target equals source\" is valid in both shallow and deep mode.\n        if (!loop && opt.deep && this.graph) {\n\n            var sourceElement = this.getSourceCell();\n            var targetElement = this.getTargetCell();\n\n            loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n        }\n\n        return loop;\n    },\n\n    // unlike source(), this method returns null if source is a point\n    getSourceCell: function() {\n\n        const { graph, attributes } = this;\n        var source = attributes.source;\n        return (source && source.id && graph && graph.getCell(source.id)) || null;\n    },\n\n    getSourceElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getSourceCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // unlike target(), this method returns null if target is a point\n    getTargetCell: function() {\n\n        const { graph, attributes } = this;\n        var target = attributes.target;\n        return (target && target.id && graph && graph.getCell(target.id)) || null;\n    },\n\n    getTargetElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getTargetCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // Returns the common ancestor for the source element,\n    // target element and the link itself.\n    getRelationshipAncestor: function() {\n\n        var connectionAncestor;\n\n        if (this.graph) {\n\n            var cells = [\n                this,\n                this.getSourceElement(), // null if source is a point\n                this.getTargetElement() // null if target is a point\n            ].filter(function(item) {\n                return !!item;\n            });\n\n            connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n        }\n\n        return connectionAncestor || null;\n    },\n\n    // Is source, target and the link itself embedded in a given cell?\n    isRelationshipEmbeddedIn: function(cell) {\n\n        var cellId = (isString(cell) || isNumber(cell)) ? cell : cell.id;\n        var ancestor = this.getRelationshipAncestor();\n\n        return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n    },\n\n    // Get resolved default label.\n    _getDefaultLabel: function() {\n\n        var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n\n        var label = {};\n        label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n        label.position = defaultLabel.position;\n        label.attrs = defaultLabel.attrs;\n        label.size = defaultLabel.size;\n\n        return label;\n    }\n}, {\n\n    endsEqual: function(a, b) {\n\n        var portsEqual = a.port === b.port || !a.port && !b.port;\n        return a.id === b.id && portsEqual;\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}